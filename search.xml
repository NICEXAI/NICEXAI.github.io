<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ubuntu系统下搭建C++编译为webassembly环境</title>
      <link href="/2019/05/10/Ubuntu%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%90%AD%E5%BB%BAC++%E7%BC%96%E8%AF%91%E4%B8%BAwebassembly%E7%8E%AF%E5%A2%83/"/>
      <url>/2019/05/10/Ubuntu%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%90%AD%E5%BB%BAC++%E7%BC%96%E8%AF%91%E4%B8%BAwebassembly%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Webassembly是什么以及解决了哪些问题这里就不说了，自行Google,下面主要记录了ubuntu系统下环境搭建的详细步骤。（PS:Window系统下坑太多，生命有限，且行且珍惜）</p></blockquote><h3 id="更新包管理器安装包列表"><a href="#更新包管理器安装包列表" class="headerlink" title="更新包管理器安装包列表"></a>更新包管理器安装包列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="安装python环境并设置新的软连接"><a href="#安装python环境并设置新的软连接" class="headerlink" title="安装python环境并设置新的软连接"></a>安装python环境并设置新的软连接</h3><p>1、 安装python安装包</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python2.7</span><br></pre></td></tr></table></figure><p>2、在命令行下输入python命令，如果提示command not found 则 设置新的软连接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln -s /usr/bin/python2.7 /usr/bin/python</span><br></pre></td></tr></table></figure><p>3、如果python命令已经存在并且python版本为3.0+，则删除原有的软连接并创建新的链接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm /user/bin/python</span><br><span class="line">ln -s /usr/bin/python2.7 /usr/bin/python</span><br></pre></td></tr></table></figure><h3 id="安装Node环境"><a href="#安装Node环境" class="headerlink" title="安装Node环境"></a>安装Node环境</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br></pre></td></tr></table></figure><h3 id="安装gcc和cmake"><a href="#安装gcc和cmake" class="headerlink" title="安装gcc和cmake"></a>安装gcc和cmake</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install build-essential</span><br><span class="line">sudo apt-get install cmake</span><br></pre></td></tr></table></figure><h3 id="安装Git版本管理工具"><a href="#安装Git版本管理工具" class="headerlink" title="安装Git版本管理工具"></a>安装Git版本管理工具</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git-core</span><br></pre></td></tr></table></figure><h3 id="安装Java"><a href="#安装Java" class="headerlink" title="安装Java"></a>安装Java</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install default-jre</span><br></pre></td></tr></table></figure><h3 id="从源码中构建Fastcomp-LLVM-Clang"><a href="#从源码中构建Fastcomp-LLVM-Clang" class="headerlink" title="从源码中构建Fastcomp(LLVM+Clang)"></a>从源码中构建Fastcomp(LLVM+Clang)</h3><p>1、创建编译环境相关东西的文件夹</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir c2webassebly</span><br><span class="line">cd c2webassebly</span><br></pre></td></tr></table></figure><p>2、创建fastcomp文件夹</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir myfastcomp</span><br><span class="line">cd myfastcomp</span><br></pre></td></tr></table></figure><p>3、克隆或者下载fastcomp LLVM库到 emscripten-fastcomp 文件夹下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/emscripten-core/emscripten-fastcomp</span><br></pre></td></tr></table></figure><p>如果下载速度较慢，可以直接新建emscripten-fastcomp文件夹并直接访问<a href="https://github.com/emscripten-core/emscripten-fastcomp%E4%B8%8B%E8%BD%BD%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%EF%BC%8C%E8%A7%A3%E5%8E%8B%E6%96%87%E4%BB%B6%E5%B9%B6%E6%8A%8A%E6%BA%90%E7%A0%81copy%E5%88%B0emscripten-fastcomp%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E3%80%82">https://github.com/emscripten-core/emscripten-fastcomp下载项目文件，解压文件并把源码copy到emscripten-fastcomp文件夹下。</a></p><p>4、在emscripten-fastcomp文件夹下安装clang</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd emscripten-fastcomp</span><br><span class="line">git clone https://github.com/emscripten-core/emscripten-fastcomp-clang tools/clang</span><br></pre></td></tr></table></figure><p>如果下载速度较慢，可以在tools文件夹下直接新建clang文件夹并直接访问<a href="https://github.com/emscripten-core/emscripten-fastcomp-clang%E4%B8%8B%E8%BD%BD%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%EF%BC%8C%E8%A7%A3%E5%8E%8B%E6%96%87%E4%BB%B6%E5%B9%B6%E6%8A%8A%E6%BA%90%E7%A0%81copy%E5%88%B0clang%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E3%80%82">https://github.com/emscripten-core/emscripten-fastcomp-clang下载项目文件，解压文件并把源码copy到clang文件夹下。</a></p><p>5、在emscripten-fastcomp文件夹下创建build文件夹并进入该文件夹</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure><p>6、使用cmake开始构建</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake .. -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=”host;JSBackend” -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_TESTS=OFF -DCLANG_INCLUDE_TESTS=OFF</span><br></pre></td></tr></table></figure><p>7、查看可用的CPU数量并指定编译时使用的核心数量</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /proc/cpuinfo | grep “^cpu cores” | uniq</span><br></pre></td></tr></table></figure><p>如果需要指定四颗核心,则：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make -j4</span><br></pre></td></tr></table></figure><p>8、打开.emscripten文件并设置LLVM_ROOT</p><ul><li><p>进入build文件夹下面的bin文件夹，输入pwd指令查看该文件夹绝对路径，例如：&#x2F;mnt&#x2F;e&#x2F;ubuntu&#x2F;download&#x2F;myfastcomp&#x2F;emscripten-fastcomp&#x2F;build&#x2F;bin</p></li><li><p>输如vi ~&#x2F;.emscripten指令查看配置文件并设置LLVM_ROOT为： LLVM_ROOT &#x3D; os.path.expanduser(os.getenv(‘LLVM’, ‘&#x2F;mnt&#x2F;e&#x2F;ubuntu&#x2F;download&#x2F;myfastcomp&#x2F;emscripten-fastcomp&#x2F;build&#x2F;bin’))</p></li><li><p>保存设置并退出该文件</p></li></ul><h3 id="安装C-x2F-C-编译为Javascript相关工具并设置软连接"><a href="#安装C-x2F-C-编译为Javascript相关工具并设置软连接" class="headerlink" title="安装C&#x2F;C++编译为Javascript相关工具并设置软连接"></a>安装C&#x2F;C++编译为Javascript相关工具并设置软连接</h3><p>1、进入到到c2webassebly文件夹</p><p>2、克隆emscripten-core&#x2F;emscripten项目到本地</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/emscripten-core/emscripten.git</span><br></pre></td></tr></table></figure><p>如果下载速度较慢，可以新建emscripten文件夹并直接访问<a href="https://github.com/emscripten-core/emscripten%E4%B8%8B%E8%BD%BD%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%EF%BC%8C%E8%A7%A3%E5%8E%8B%E6%96%87%E4%BB%B6%E5%B9%B6%E6%8A%8A%E6%BA%90%E7%A0%81copy%E5%88%B0emscripten%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E3%80%82">https://github.com/emscripten-core/emscripten下载项目文件，解压文件并把源码copy到emscripten文件夹下。</a></p><p>3、进入到emscripten文件夹查看该文件夹绝对路径并设置软连接，例如路径为：&#x2F;mnt&#x2F;e&#x2F;ubuntu&#x2F;download&#x2F;emscripten&#x2F;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd emscripten</span><br><span class="line">pwd</span><br><span class="line">sudo ln -s /mnt/e/ubuntu/download/emscripten/emcc /usr/bin/emcc</span><br></pre></td></tr></table></figure><p>4、输入指定emcc -v，如果正确输出则设置成功</p><h3 id="测试整个编译环境"><a href="#测试整个编译环境" class="headerlink" title="测试整个编译环境"></a>测试整个编译环境</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">emcc tests/hello_world.cpp</span><br></pre></td></tr></table></figure><p>在emscripten文件夹下执行上面指令，如果在该文件夹下成功编译出a.out.js文件,则环境配置成功。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何正确的在vscode下搭建golang开发环境</title>
      <link href="/2018/08/24/%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%9C%A8vscode%E4%B8%8B%E6%90%AD%E5%BB%BAgolang%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
      <url>/2018/08/24/%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%9C%A8vscode%E4%B8%8B%E6%90%AD%E5%BB%BAgolang%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于后期项目可能涉及到大量的并发和IO操作，Node很有可能无法满足项目需要，以此熟悉并掌握golang这门语言工具也变得必要。</p></blockquote><h3 id="安装GO并配置环境变量"><a href="#安装GO并配置环境变量" class="headerlink" title="安装GO并配置环境变量"></a>安装GO并配置环境变量</h3><p>1、访问Go官网下载安装包并安装</p><p>2、在系统中分别添加GOROOT和GOPATH环境变量，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Go安装路径：E:\go</span><br><span class="line">项目工作目录：E:\WorkCode\Go</span><br><span class="line">则环境应变量设置为：GOROOT：E:\Go\ GOPATH:E:\WorkCode\Go, 并在Path中分别添加%GOROOT%\bin，%GOPATH%\bin</span><br></pre></td></tr></table></figure><p>3、保存并测试</p><p>打开cmd或者powershell并键入指令go version，如果成功打印出版本号，则安装成功。如果安装失败则返回第一步…</p><h3 id="安装vscode-go插件"><a href="#安装vscode-go插件" class="headerlink" title="安装vscode-go插件"></a>安装vscode-go插件</h3><p>打开vscode,在商店搜过go,点击安装下载次数最高的那个就行</p><h3 id="安装GO相关工具包"><a href="#安装GO相关工具包" class="headerlink" title="安装GO相关工具包"></a>安装GO相关工具包</h3><p>由于网络限制问题，在国内安装go的官方包会失败，所以在安装之前一定一定要先开启网络代理，不会的自行google.</p><p>1、在 VS Code 中，使用快捷键：command+shift+P，然后键入：go:install&#x2F;update tools，勾选全部插件，然后点击 OK 即开始安装。这里安装速度会相对较慢，静静等待安装完毕就行。</p><p>2、如果期间有个别包安装失败，记住失败的包名，然后再次使用快捷键：command+shift+P，然后键入：go:install&#x2F;update tools，勾选安装失败的插件再次安装即可</p><p>在此期间很有可以会遇到golint包无论如何都一直安装失败的情况,错误如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ go get -u -v golang.org/x/lint/golint</span><br><span class="line">Fetching https://golang.org/x/lint/golint?go-get=1</span><br><span class="line">https fetch failed: Get https://golang.org/x/lint/golint?go-get=1: dial tcp 216.239.37.1:443: connectex: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.</span><br></pre></td></tr></table></figure><p>解决方法，执行如下指令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p $GOPATH/src/golang.org/x</span><br><span class="line">cd $GOPATH/src/golang.org/x</span><br><span class="line">git clone https://github.com/golang/lint.git</span><br><span class="line"> </span><br><span class="line">#执行go install</span><br><span class="line">go install golang.org/x/lint/golint</span><br></pre></td></tr></table></figure><p>在vscode首选项中添加配置参数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// Golang配置项</span><br><span class="line">&quot;go.goroot&quot;: &quot;E:\\Go&quot;,//GO安装路径</span><br><span class="line">&quot;go.gopath&quot;: &quot;E:\\WorkCode\\Go&quot;,//工作路径</span><br><span class="line">&quot;go.inferGopath&quot;: true,</span><br><span class="line">&quot;go.autocompleteUnimportedPackages&quot;: true,</span><br><span class="line">&quot;go.gocodePackageLookupMode&quot;: &quot;go&quot;,</span><br><span class="line">&quot;go.gotoSymbol.includeImports&quot;: true,</span><br><span class="line">&quot;go.useCodeSnippetsOnFunctionSuggest&quot;: true,</span><br><span class="line">&quot;go.useCodeSnippetsOnFunctionSuggestWithoutType&quot;: true,</span><br><span class="line">&quot;go.docsTool&quot;: &quot;gogetdoc&quot;,</span><br></pre></td></tr></table></figure><p>以上便是所有的搭建步骤，完毕。</p>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker+cloud9+coding，教你实现真正的Coding Anytime Anywhere!</title>
      <link href="/2018/08/03/Docker+cloud9+coding%EF%BC%8C%E6%95%99%E4%BD%A0%E5%AE%9E%E7%8E%B0%E7%9C%9F%E6%AD%A3%E7%9A%84Coding%20Anytime%20Anywhere!/"/>
      <url>/2018/08/03/Docker+cloud9+coding%EF%BC%8C%E6%95%99%E4%BD%A0%E5%AE%9E%E7%8E%B0%E7%9C%9F%E6%AD%A3%E7%9A%84Coding%20Anytime%20Anywhere!/</url>
      
        <content type="html"><![CDATA[<blockquote><p>从15年开始尝试写博客起，自己就一直被一个问题给困扰，那就是每次我忽然间热血来潮想在外面想找台电脑写点东西记录下的时候我都不得不一次又一次的把博客的代码从代码仓库pull到本地，安装node环境，更改npm镜像源，安装依赖，慢慢等待依赖安装完毕，启动项目。然而，真正等你可以开始写东西的时候往往时间已经过去了半个小时甚至更久，而自己难得的一点热情也快被消弭殆尽。因此，才为自己搭建了这样一个可以随时随地编码，调试和做笔记的工作台。</p></blockquote><h3 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h3><ul><li><p>docker：实现服务部署</p></li><li><p>cloud9: 一款基于浏览器的IDE，实现在线编码</p></li><li><p>coding: 实现代码托管，使用github或者gitlab也都可以</p></li></ul><p>备注：这里使用coding进行代码托管，纯属因为我TM有一天脑抽冲了一年会员，不用白不用</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li><p>有一台自己的云服务器（本人服务器ubuntu系统）</p></li><li><p>最好有一个自己的已经备案过的域名</p></li><li><p>熟悉docker容器技术</p></li><li><p>熟悉基本的Linux操作</p></li><li><p>熟悉Git或者SVN代码版本工具</p></li><li><p>熟悉xshell、putty等工具的使用</p></li></ul><h3 id="具体实现步骤"><a href="#具体实现步骤" class="headerlink" title="具体实现步骤"></a>具体实现步骤</h3><h4 id="下载安装xshell或者putty工具并输入自己服务器IP地址以及账号密码，登录到自己服务器命令行控制面板"><a href="#下载安装xshell或者putty工具并输入自己服务器IP地址以及账号密码，登录到自己服务器命令行控制面板" class="headerlink" title="下载安装xshell或者putty工具并输入自己服务器IP地址以及账号密码，登录到自己服务器命令行控制面板"></a>下载安装xshell或者putty工具并输入自己服务器IP地址以及账号密码，登录到自己服务器命令行控制面板</h4><p>xshell下载地址： <a href="https://www.netsarang.com/products/xsh_overview.html">https://www.netsarang.com/products/xsh_overview.html</a></p><h4 id="在服务器中安装docker"><a href="#在服务器中安装docker" class="headerlink" title="在服务器中安装docker"></a>在服务器中安装docker</h4><p>安装步骤参考官方文档：<a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/">https://docs.docker.com/install/linux/docker-ce/ubuntu/</a></p><h4 id="安装cloud9"><a href="#安装cloud9" class="headerlink" title="安装cloud9"></a>安装cloud9</h4><p>1、输入指令docker pull sapk&#x2F;cloud9从dockerhub上拉取cloud9镜像到本地</p><p>2、输入指定mkdir workspace创建自己的代码存放文件夹</p><p>3、cd workspace并在此输入指令docker run -d -v $(pwd):&#x2F;workspace -p 8181:8181 -p 4100:4100 -p 4200:4200 sapk&#x2F;cloud9 –auth username:password运行cloud9镜像,并把常用的一些端口映射出来，方面后期调试用</p><h4 id="在cloud9镜像中安装git"><a href="#在cloud9镜像中安装git" class="headerlink" title="在cloud9镜像中安装git"></a>在cloud9镜像中安装git</h4><p>1、输入指令docker ps查看运行中的cloud9容器ID并复制</p><p>2、输入docker exec -it &lt;容器ID&gt; &#x2F;bin&#x2F;sh进入cloud9命令行工具</p><p>3、执行apt-get update更新源</p><p>4、输入apt-get install git安装git工具</p><p>5、设置git用户名和邮箱</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;Your Name Here&quot;</span><br><span class="line">git config --global user.email &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><h4 id="登录代码托管平台复制项目地址并把项目克隆到本地"><a href="#登录代码托管平台复制项目地址并把项目克隆到本地" class="headerlink" title="登录代码托管平台复制项目地址并把项目克隆到本地"></a>登录代码托管平台复制项目地址并把项目克隆到本地</h4><p>1、在cloud9容器内输入指令git clone <a href="https://git.coding.net/****F/****.git%EF%BC%8C%E6%8A%8A%E9%A1%B9%E7%9B%AE%E5%85%8B%E9%9A%86%E5%88%B0%E6%9C%AC%E5%9C%B0">https://git.coding.net/****F/****.git，把项目克隆到本地</a></p><h4 id="代码的编写和调试"><a href="#代码的编写和调试" class="headerlink" title="代码的编写和调试"></a>代码的编写和调试</h4><p>1、在电脑浏览器中输入地址服务器公网IP：8181访问cloud9,输入账号密码登录编辑器界面，大致如下图</p><p>2、可直接双击左边文件栏文件进行代码编辑</p><p>3、文件编辑完毕后可以直接在命令行中通过git把最新代码push到代码仓库</p><p>4、在下方命令行中可直接使用命令安装依赖，例如输入npm i</p><p>5、把项目端口更改为任意一个在上面映射出来的端口地址，并运行项目</p><p>6、在浏览器中输入服务器公网IP：端口号便可以查看当前调试的项目运行结果</p><h4 id="绑定域名（可不做）"><a href="#绑定域名（可不做）" class="headerlink" title="绑定域名（可不做）"></a>绑定域名（可不做）</h4><p>1、登录购买域名所在的服务商控制台</p><p>2、做DNS解析，把备案域名解析到cloud9所在的公网IP地址即可</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux中常用操作命令</title>
      <link href="/2018/08/01/Linux%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/08/01/Linux%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><p>ls　　        显示文件或目录</p><span id="more"></span><pre><code>-l           列出文件详细信息l(list)-a          列出当前目录下所有文件及目录，包括隐藏的a(all)</code></pre><p>mkdir         创建目录</p><pre><code>-p           创建目录，若无父目录，则创建p(parent)</code></pre><p>cd               切换目录</p><p>touch          创建空文件</p><p>echo            创建带有内容的文件。</p><p>cat              查看文件内容</p><p>cp                拷贝</p><p>mv               移动或重命名</p><p>rm               删除文件</p><p>-r            递归删除，可删除子目录及文件</p><p>-f            强制删除</p><p>find              在文件系统中搜索某文件</p><p>wc                统计文本中行数、字数、字符数</p><p>grep             在文本文件中查找某个字符串</p><p>rmdir           删除空目录</p><p>tree             树形结构显示目录，需要安装tree包</p><p>pwd              显示当前目录</p><p>ln                  创建链接文件</p><p>more、less  分页显示文本文件内容</p><p>head、tail    显示文件头、尾内容</p><p>ctrl+alt+F1  命令行全屏模式</p><h2 id="系统管理命令"><a href="#系统管理命令" class="headerlink" title="系统管理命令"></a>系统管理命令</h2><p>stat              显示指定文件的详细信息，比ls更详细</p><p>who               显示在线登陆用户</p><p>whoami          显示当前操作用户</p><p>hostname      显示主机名</p><p>uname           显示系统信息</p><p>top                动态显示当前耗费资源最多进程信息</p><p>ps                  显示瞬间进程状态 ps -aux</p><p>du                  查看目录大小 du -h &#x2F;home带有单位显示目录信息</p><p>df                  查看磁盘大小 df -h 带有单位显示磁盘信息</p><p>ifconfig          查看网络情况</p><p>ping                测试网络连通</p><p>netstat          显示网络状态信息</p><p>man                命令不会用了，找男人  如：man ls</p><p>clear              清屏</p><p>alias               对命令重命名 如：alias showmeit&#x3D;”ps -aux” ，另外解除使用unaliax showmeit</p><p>kill                 杀死进程，可以先用ps 或 top命令查看进程的id，然后再用kill命令杀死进程。</p><h2 id="打包压缩相关命令"><a href="#打包压缩相关命令" class="headerlink" title="打包压缩相关命令"></a>打包压缩相关命令</h2><p>gzip：</p><p>bzip2：</p><p>tar:                打包压缩</p><pre><code> -c              归档文件 -x              压缩文件 -z              gzip压缩文件 -j              bzip2压缩文件 -v              显示压缩或解压缩过程 v(view) -f              使用档名</code></pre><p>例：</p><p>tar -cvf &#x2F;home&#x2F;abc.tar &#x2F;home&#x2F;abc              只打包，不压缩</p><p>tar -zcvf &#x2F;home&#x2F;abc.tar.gz &#x2F;home&#x2F;abc        打包，并用gzip压缩</p><p>tar -jcvf &#x2F;home&#x2F;abc.tar.bz2 &#x2F;home&#x2F;abc      打包，并用bzip2压缩</p><p>当然，如果想解压缩，就直接替换上面的命令  tar -cvf  &#x2F; tar -zcvf  &#x2F; tar -jcvf 中的“c” 换成“x” 就可以了。</p><h2 id="关机-x2F-重启机器"><a href="#关机-x2F-重启机器" class="headerlink" title="关机&#x2F;重启机器"></a>关机&#x2F;重启机器</h2><p>shutdown</p><pre><code> -r             关机重启 -h             关机不重启 now          立刻关机</code></pre><p>halt               关机</p><p>reboot          重启</p><h2 id="Linux管道"><a href="#Linux管道" class="headerlink" title="Linux管道"></a>Linux管道</h2><p>将一个命令的标准输出作为另一个命令的标准输入。也就是把几个命令组合起来使用，后一个命令除以前一个命令的结果。</p><p>例：grep -r “close” &#x2F;home&#x2F;* | more       在home目录下所有文件中查找，包括close的文件，并分页输出。</p><h2 id="Linux软件包管理"><a href="#Linux软件包管理" class="headerlink" title="Linux软件包管理"></a>Linux软件包管理</h2><p>dpkg (Debian Package)管理工具，软件包名以.deb后缀。这种方法适合系统不能联网的情况下。</p><p>比如安装tree命令的安装包，先将tree.deb传到Linux系统中。再使用如下命令安装。</p><p>sudo dpkg -i tree_1.5.3-1_i386.deb         安装软件</p><p>sudo dpkg -r tree                                     卸载软件</p><p>注：将tree.deb传到Linux系统中，有多种方式。VMwareTool，使用挂载方式；使用winSCP工具等；</p><p>APT（Advanced Packaging Tool）高级软件工具。这种方法适合系统能够连接互联网的情况。</p><p>依然以tree为例</p><p>sudo apt-get install tree                         安装tree</p><p>sudo apt-get remove tree                       卸载tree</p><p>sudo apt-get update                                 更新软件</p><p>sudo apt-get upgrade        </p><p>将.rpm文件转为.deb文件</p><p>.rpm为RedHat使用的软件格式。在Ubuntu下不能直接使用，所以需要转换一下。</p><p>sudo alien abc.rpm</p><h2 id="vim使用"><a href="#vim使用" class="headerlink" title="vim使用"></a>vim使用</h2><p>vim三种模式：命令模式、插入模式、编辑模式。使用ESC或i或：来切换模式。</p><p>命令模式下：</p><p>:q                      退出</p><p>:q!                     强制退出</p><p>:wq                   保存并退出</p><p>:set number     显示行号</p><p>:set nonumber  隐藏行号</p><p>&#x2F;apache            在文档中查找apache 按n跳到下一个，shift+n上一个</p><p>yyp                   复制光标所在行，并粘贴</p><p>h(左移一个字符←)、j(下一行↓)、k(上一行↑)、l(右移一个字符→)</p><h2 id="用户及用户组管理"><a href="#用户及用户组管理" class="headerlink" title="用户及用户组管理"></a>用户及用户组管理</h2><p>&#x2F;etc&#x2F;passwd    存储用户账号</p><p>&#x2F;etc&#x2F;group       存储组账号</p><p>&#x2F;etc&#x2F;shadow    存储用户账号的密码</p><p>&#x2F;etc&#x2F;gshadow  存储用户组账号的密码</p><p>useradd 用户名</p><p>userdel 用户名</p><p>adduser 用户名</p><p>groupadd 组名</p><p>groupdel 组名</p><p>passwd root     给root设置密码</p><p>su root</p><p>su - root </p><p>&#x2F;etc&#x2F;profile     系统环境变量</p><p>bash_profile     用户环境变量</p><p>.bashrc              用户环境变量</p><p>su user              切换用户，加载配置文件.bashrc</p><p>su - user            切换用户，加载配置文件&#x2F;etc&#x2F;profile ，加载bash_profile</p><p>更改文件的用户及用户组</p><p>sudo chown [-R] owner[:group] {File|Directory}</p><p>例如：还以jdk-7u21-linux-i586.tar.gz为例。属于用户hadoop，组hadoop</p><p>要想切换此文件所属的用户及组。可以使用命令。</p><p>sudo chown root:root jdk-7u21-linux-i586.tar.gz</p><h2 id="文件权限管理"><a href="#文件权限管理" class="headerlink" title="文件权限管理"></a>文件权限管理</h2><p>三种基本权限</p><p>R           读         数值表示为4</p><p>W          写         数值表示为2</p><p>X           可执行  数值表示为1</p><p><img src="https://img-blog.csdnimg.cn/img_convert/fcc776b847dee8483b00eb5074a188c5.png"></p><p>如图所示，jdk-7u21-linux-i586.tar.gz文件的权限为-rw-rw-r–</p><p>-rw-rw-r–一共十个字符，分成四段。</p><p>第一个字符“-”表示普通文件；这个位置还可能会出现“l”链接；“d”表示目录</p><p>第二三四个字符“rw-”表示当前所属用户的权限。   所以用数值表示为4+2&#x3D;6</p><p>第五六七个字符“rw-”表示当前所属组的权限。      所以用数值表示为4+2&#x3D;6</p><p>第八九十个字符“r–”表示其他用户权限。              所以用数值表示为4</p><p>所以操作此文件的权限用数值表示为664 </p><p>更改权限</p><p>sudo chmod [u所属用户  g所属组  o其他用户  a所有用户]  [+增加权限  -减少权限]  [r  w  x]   目录名 </p><p>例如：有一个文件filename，权限为“-rw-r—-x” ,将权限值改为”-rwxrw-r-x”，用数值表示为765</p><p>sudo chmod u+x g+w o+r  filename</p><p>上面的例子可以用数值表示</p><p>sudo chmod 765 filename</p><blockquote><p>原文地址：<a href="http://www.weixuehao.com/archives/25">http://www.weixuehao.com/archives/25</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用xshel,putty或者xftp管理docker容器</title>
      <link href="/2018/05/02/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8xshel,putty%E6%88%96%E8%80%85xftp%E7%AE%A1%E7%90%86docker%E5%AE%B9%E5%99%A8/"/>
      <url>/2018/05/02/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8xshel,putty%E6%88%96%E8%80%85xftp%E7%AE%A1%E7%90%86docker%E5%AE%B9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Docker等容器技术越来越普遍，越来越多的公司开始尝试接受容器技术带来的便利。对于我们来说，每一个运行着的<code>container</code>就是一个服务，我们如何像管理多条服务器一样，管理多个Docker容器？</p></blockquote><span id="more"></span><h3 id="探究原因"><a href="#探究原因" class="headerlink" title="探究原因"></a>探究原因</h3><p>我们之所以可以通过<code>xshell</code>或者<code>putty</code>等工具来管理我们的linux服务器。主要原因是因为我们linux服务器上都安装了<code>SSH</code>服务。每一个docker容器运行的镜像本质上来说是一个精简版的linux,所以说，我们同样可以通过给我们的<code>container</code>安装<code>SSH</code>服务来达到使用工具集中管理多个Docker容器的目的。</p><h3 id="如何给运行中Docker容器安装SSH服务？"><a href="#如何给运行中Docker容器安装SSH服务？" class="headerlink" title="如何给运行中Docker容器安装SSH服务？"></a>如何给运行中Docker容器安装<code>SSH</code>服务？</h3><p>这里我以我本地一个运行中的<code>SQL Server</code>的数据库服务为例</p><p>1、打开命令面板，输入指令<code>docker ps</code>查看运行中的容器并复制容器ID</p><p>2、输入指令<code>docker exec -it &lt;复制的容器ID&gt; /bin/sh</code>,进入命令行工具</p><p>3、进入命令行工具后首先建议输入指令<code>apt-get update</code>更新下源</p><p>4、输入指令<code>apt-get install openssh-server</code>,安装<code>SSH</code>服务</p><p>5、安装完毕后，输入指令<code>service ssh satrt</code> 启动<code>SSH</code>服务</p><p>6、使用vim进入<code>/etc/ssh/sshd.config</code>文件更改<code>SSH</code>服务配置，将PermitRootLogin的值从withoutPassword改为yes，允许<code>root</code>用户进行登录</p><p>7、输入指令<code>passwd root</code>设置<code>root</code>用户登录密码</p><p>8、如果docker容器中没有安装<code>vim</code>,则输入指令<code>apt-get install vim</code>进行安装</p><p>9、输入指令<code>service ssh restart</code>重启<code>SSH</code>服务</p><p>10、输入<code>exit</code>退出当前容器命令行工具</p><p>11、回到系统命令面板，输入指令<code>docker ps</code>查看当前运行中的容器并复制安装好<code>SSH</code>服务的容器ID</p><p>12、为了避免后期因为各种原因重复安装<code>SSH</code>服务，建议输入指令<code>docker commit &lt;复制的容器ID&gt; &lt;自己定义的镜像名&gt;</code>，保存经想到本地</p><p>13、停止当前镜像，输入指令<code>docker run -e &#39;ACCEPT_EULA=Y&#39; -e &#39;SA_PASSWORD=567rty%^&amp;YUI&#39;  -p 1433:1433 -p 8400:20 -d microsoft/mssql-server-linux:latest</code>,启动刚才保存在本地的镜像并把<code>SSH</code>服务的20端口映射出来，这里我映射的是主机8400duankou</p><p>14、为了方便，这里还可以输入指令<code>docker update --restart=always  &lt;容器ID&gt;</code>让容器保持始终运行</p><h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><p>上面<code>保存镜像到本地</code>和<code>让容器始终运行</code>可以根据自己喜好选择是否进行操作，如果指令报权限相关错误，只需要在每条命令前添加<code>sudo</code>指令就可以了</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leaflet+Echarts实现GIS地图动态播放以及使用Echarts对点位数据详情进行展示</title>
      <link href="/2017/12/30/Leaflet+Echarts%E5%AE%9E%E7%8E%B0GIS%E5%9C%B0%E5%9B%BE%E5%8A%A8%E6%80%81%E6%92%AD%E6%94%BE%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8Echarts%E5%AF%B9%E7%82%B9%E4%BD%8D%E6%95%B0%E6%8D%AE%E8%AF%A6%E6%83%85%E8%BF%9B%E8%A1%8C%E5%B1%95%E7%A4%BA/"/>
      <url>/2017/12/30/Leaflet+Echarts%E5%AE%9E%E7%8E%B0GIS%E5%9C%B0%E5%9B%BE%E5%8A%A8%E6%80%81%E6%92%AD%E6%94%BE%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8Echarts%E5%AF%B9%E7%82%B9%E4%BD%8D%E6%95%B0%E6%8D%AE%E8%AF%A6%E6%83%85%E8%BF%9B%E8%A1%8C%E5%B1%95%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<blockquote><p>是的，你没看错…我还在发烧中，昨天在众多人的围殴当中我顽强的活了下来。请允许我最后作死一波，因为我知道漂亮的小姐姐个帅气的小哥哥一定都不会和我一般见识的…</p></blockquote><span id="more"></span><h3 id="效果图大致长得这个德行"><a href="#效果图大致长得这个德行" class="headerlink" title="效果图大致长得这个德行"></a>效果图大致长得这个德行</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-GywkraUF-1635341537414)(<a href="http://oft2csb8a.bkt.clouddn.com/leaflet-img01.jpg)]">http://oft2csb8a.bkt.clouddn.com/leaflet-img01.jpg)]</a></p><h3 id="小凳子，上代码"><a href="#小凳子，上代码" class="headerlink" title="小凳子，上代码"></a>小凳子，上代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%;height: 100%;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> <span class="string">&#x27;leaflet/dist/leaflet.css&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> L <span class="keyword">from</span> <span class="string">&#x27;leaflet&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Monitor <span class="keyword">from</span> <span class="string">&#x27;./../../../data/request/hbmis/monitor/data&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> moment <span class="keyword">from</span> <span class="string">&#x27;moment&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Echarts <span class="keyword">from</span> <span class="string">&#x27;echarts&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Aqi <span class="keyword">from</span> <span class="string">&#x27;../../../data/request/hbmis/aqi/aqi&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> WebGis <span class="keyword">from</span> <span class="string">&#x27;../../../data/request/hbmis/monitor/webgis&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> geoJson <span class="keyword">from</span> <span class="string">&#x27;../overview/data/130000&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> GeoCity <span class="keyword">from</span> <span class="string">&#x27;../../../../static/js/city&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> GeoCounty <span class="keyword">from</span> <span class="string">&#x27;../../../../static/js/county&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">props</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">options</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Object</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">default</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> &#123;&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">point</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Object</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">default</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> &#123;&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">isPoint</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Boolean</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="literal">true</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">isBasic</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Boolean</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="literal">false</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">mapType</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">String</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="string">&#x27;city&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">String</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="string">&#x27;hour&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">map</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">layerGroup</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">layerGroupArr</span>: [],</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">layerControl</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">markerGroup</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">circle</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">center</span>: [<span class="number">38.920469</span>, <span class="number">117.110617</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">geoJsonData</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 当前图层</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">curBasic</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">curName</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">curCity</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">curCounty</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">curRound</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">curLayer</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">curPoint</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">curZoom</span>: <span class="number">7</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 查询参数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">params</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">dataType</span>: <span class="number">2</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">starttime</span>: <span class="string">&#x27;&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">endtime</span>: <span class="string">&#x27;&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">ptids</span>: <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">currentData</span>: &#123;&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 柱状图对象</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">myCharts</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 趋势图配置项</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">chartOptions</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">tooltip</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">grid</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">left</span>: <span class="string">&#x27;1%&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">right</span>: <span class="string">&#x27;4%&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">bottom</span>: <span class="string">&#x27;1%&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">top</span>: <span class="string">&#x27;4%&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">containLabel</span>: <span class="literal">true</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">xAxis</span>: [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">data</span>: [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;10&#x27;</span>, <span class="string">&#x27;11&#x27;</span>, <span class="string">&#x27;12&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">splitLine</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">show</span>: <span class="literal">false</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">axisTick</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">alignWithLabel</span>: <span class="literal">true</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">],</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">yAxis</span>: [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">splitLine</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">show</span>: <span class="literal">false</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">splitArea</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">show</span>: <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">],</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">series</span>: [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">name</span>: <span class="string">&#x27;AQI&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">itemStyle</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">normal</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">color</span>: <span class="function">(<span class="params">d</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> <span class="built_in">this</span>.format_cur_color(d.data)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">data</span>: [<span class="number">32.6</span>, <span class="number">25.9</span>, <span class="number">39.0</span>, <span class="number">26.4</span>, <span class="number">28.7</span>, <span class="number">70.7</span>, <span class="number">75.6</span>, <span class="number">82.2</span>, <span class="number">48.7</span>, <span class="number">58.8</span>, <span class="number">16.0</span>, <span class="number">32.3</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">watch</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">options</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.loadData(<span class="built_in">this</span>.options)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.load_point(<span class="built_in">this</span>.point)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.isBasic) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.mapType == <span class="string">&#x27;city&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.load_city()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.mapType == <span class="string">&#x27;county&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.load_county()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curCity <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curCity.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curCounty <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curCounty.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">point</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// this.load_point(this.point)</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">isPoint</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.isPoint) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.load_point(<span class="built_in">this</span>.point)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curPoint <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curPoint.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">isBasic</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (!<span class="built_in">this</span>.isBasic) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.load_basic()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.load_name()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curCity <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curCity.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curCounty <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curCounty.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curBasic <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curBasic.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curName <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curName.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.mapType == <span class="string">&#x27;city&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.load_city()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.mapType == <span class="string">&#x27;county&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.load_county()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">mapType</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curCity <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curCity.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curCounty <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curCounty.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.mapType == <span class="string">&#x27;city&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.load_city()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.mapType == <span class="string">&#x27;county&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.load_county()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">type</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.type == <span class="string">&#x27;hour&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.params.dataType = <span class="number">2</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.type == <span class="string">&#x27;day&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.params.dataType = <span class="number">3</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.type == <span class="string">&#x27;month&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.params.dataType = <span class="number">5</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.type == <span class="string">&#x27;year&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.params.dataType = <span class="number">8</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.init()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 加载底图</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">load_basic</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (!<span class="built_in">this</span>.map || <span class="built_in">this</span>.options == <span class="string">&#x27;&#x27;</span>) <span class="keyword">return</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curBasic &amp;&amp; <span class="built_in">this</span>.curBasic <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curBasic.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.map.removeLayer(<span class="built_in">this</span>.curBasic)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curBasic = <span class="literal">null</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curBasic = L.tileLayer(<span class="string">&#x27;http://t&#123;s&#125;.tianditu.cn/DataServer?T=vec_w&amp;X=&#123;x&#125;&amp;Y=&#123;y&#125;&amp;L=&#123;z&#125;&#x27;</span>, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">subdomains</span>: [<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;).addTo(<span class="built_in">this</span>.map)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 加载城市名称</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">load_name</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (!<span class="built_in">this</span>.map || <span class="built_in">this</span>.options == <span class="string">&#x27;&#x27;</span>) <span class="keyword">return</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curName &amp;&amp; <span class="built_in">this</span>.curName <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curName.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.map.removeLayer(<span class="built_in">this</span>.curName)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curName = <span class="literal">null</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curName = L.tileLayer(<span class="string">&#x27;http://t&#123;s&#125;.tianditu.cn/DataServer?T=cva_w&amp;X=&#123;x&#125;&amp;Y=&#123;y&#125;&amp;L=&#123;z&#125;&#x27;</span>, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">subdomains</span>: [<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">zIndex</span>: <span class="number">201</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;).addTo(<span class="built_in">this</span>.map)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 加载城市GEOJSON数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">load_city</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (!<span class="built_in">this</span>.map || <span class="built_in">this</span>.options == <span class="string">&#x27;&#x27;</span>) <span class="keyword">return</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curCity &amp;&amp; <span class="built_in">this</span>.curCity <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curCity.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.map.removeLayer(<span class="built_in">this</span>.curCity)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curCity = <span class="literal">null</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curCity = L.geoJSON(GeoCity, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">style</span>(<span class="params">feature</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">color</span>: <span class="string">&#x27;gray&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">fill</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">fillOpacity</span>: <span class="number">0</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">weight</span>: <span class="number">1</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;).addTo(<span class="built_in">this</span>.map);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 加载区县GEOJSON数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">load_county</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (!<span class="built_in">this</span>.map || <span class="built_in">this</span>.options == <span class="string">&#x27;&#x27;</span>) <span class="keyword">return</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curCounty &amp;&amp; <span class="built_in">this</span>.curCounty <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curCounty.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.map.removeLayer(<span class="built_in">this</span>.curCounty)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curCounty = <span class="literal">null</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curCounty = L.geoJSON(GeoCounty, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">style</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">color</span>: <span class="string">&#x27;gray&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">fill</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">fillOpacity</span>: <span class="number">0</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">weight</span>: <span class="number">1</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;).addTo(<span class="built_in">this</span>.map);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 加载省市边界数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">load_round</span>(<span class="params">data</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curRound &amp;&amp; <span class="built_in">this</span>.curRound <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curRound.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.map.removeLayer(<span class="built_in">this</span>.curRound)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curRound = <span class="literal">null</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curRound = L.geoJSON(data, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">style</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">color</span>: <span class="string">&#x27;gray&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">fill</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">weight</span>: <span class="number">2</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">fillOpacity</span>: <span class="number">0</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;).addTo(<span class="built_in">this</span>.map);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 加载插值数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">loadData</span>(<span class="params">data</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (!<span class="built_in">this</span>.map || <span class="built_in">this</span>.options == <span class="string">&#x27;&#x27;</span>) <span class="keyword">return</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curLayer &amp;&amp; <span class="built_in">this</span>.curLayer <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curLayer.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.map.removeLayer(<span class="built_in">this</span>.curLayer)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curLayer = <span class="literal">null</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curLayer = L.geoJSON(data, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">style</span>(<span class="params">feature</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> lvalue = feature.properties.lvalue,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">color = <span class="string">&#x27;#EFEFEF&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (lvalue &gt;= <span class="number">0</span> &amp;&amp; lvalue &lt; <span class="number">51</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">color = <span class="string">&#x27;rgba(0, 288, 0, 1)&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (lvalue &gt;= <span class="number">51</span> &amp;&amp; lvalue &lt; <span class="number">101</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">color = <span class="string">&#x27;rgba(255, 255, 0, 1)&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (lvalue &gt;= <span class="number">101</span> &amp;&amp; lvalue &lt; <span class="number">151</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">color = <span class="string">&#x27;rgba(255, 126, 0, 1)&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (lvalue &gt;= <span class="number">151</span> &amp;&amp; lvalue &lt; <span class="number">201</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">color = <span class="string">&#x27;rgba(255, 0, 0, 1)&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (lvalue &gt;= <span class="number">201</span> &amp;&amp; lvalue &lt; <span class="number">301</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">color = <span class="string">&#x27;rgba(153, 0, 76, 1)&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (lvalue &gt;= <span class="number">301</span> &amp;&amp; lvalue &lt;= <span class="number">500</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">color = <span class="string">&#x27;rgba(126, 0, 35, 1)&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">color</span>: <span class="string">&#x27;blue&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">fillColor</span>: color,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">weight</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">opacity</span>: <span class="number">0</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">fillOpacity</span>: <span class="number">0.8</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;).addTo(<span class="built_in">this</span>.map)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 加载站点</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">load_point</span>(<span class="params">data</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> _this = <span class="built_in">this</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (!<span class="built_in">this</span>.map || <span class="built_in">this</span>.options == <span class="string">&#x27;&#x27;</span> || !<span class="built_in">this</span>.isPoint) <span class="keyword">return</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.curPoint &amp;&amp; <span class="built_in">this</span>.curPoint <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curPoint.remove()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.map.removeLayer(<span class="built_in">this</span>.curPoint)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curPoint = <span class="literal">null</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curPoint = L.geoJSON(data, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">pointToLayer</span>(<span class="params">geoJsonPoint, latlng</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> cvalue = geoJsonPoint.properties.value</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> curMark = _this.icon_create(cvalue, latlng, _this.curZoom)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> mValue = geoJsonPoint.properties</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">curMark.on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// curMark.openPopup()</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">_this.params.ptids = mValue.ptid</span></span></span><br><span class="line"><span class="javascript"><span class="xml">_this.params.starttime = mValue.datatime</span></span></span><br><span class="line"><span class="javascript"><span class="xml">_this.params.endtime = mValue.datatime</span></span></span><br><span class="line"><span class="javascript"><span class="xml">_this.get_dataList(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> randomId = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">1000</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> phtml = _this.popup_create(_this.currentData, randomId, _this.params.dataType)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">console</span>.log(randomId, <span class="number">0</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">curMark.bindPopup(phtml).openPopup()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">_this.get_pointer_trend(randomId)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> curMark</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;).addTo(<span class="built_in">this</span>.map)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">init</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> _this = <span class="built_in">this</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> normal1 = L.tileLayer(<span class="string">&#x27;http://t&#123;s&#125;.tianditu.cn/DataServer?T=vec_w&amp;X=&#123;x&#125;&amp;Y=&#123;y&#125;&amp;L=&#123;z&#125;&#x27;</span>, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">subdomains</span>: [<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> normal2 = L.tileLayer(<span class="string">&#x27;http://t&#123;s&#125;.tianditu.cn/DataServer?T=cva_w&amp;X=&#123;x&#125;&amp;Y=&#123;y&#125;&amp;L=&#123;z&#125;&#x27;</span>, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">subdomains</span>: [<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> normal = [</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// L.layerGroup([normal1]),</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// L.layerGroup([normal2])</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">]</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.map = L.map(_this.$el, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">center</span>: _this.center,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">zoom</span>: <span class="number">7</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">minZoom</span>: <span class="number">6</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">maxZoom</span>: <span class="number">12</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">layers</span>: normal,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 事件绑定</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.map_event()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.load_basic()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.load_name()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 监听地图缩放</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">map_event</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.map.on(<span class="string">&#x27;zoom &#x27;</span>, <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">console</span>.log(val.target._zoom)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.curZoom = val.target._zoom</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.load_point(<span class="built_in">this</span>.point)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.map.on(<span class="string">&#x27;move&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.$emit(<span class="string">&#x27;move&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// icon生成器</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">icon_create</span>(<span class="params">value, latlng, zoom</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> myMark = <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> myIcon = <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> iconStr = <span class="string">&#x27;level-0&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (value &gt;= <span class="number">0</span> &amp;&amp; value &lt; <span class="number">51</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">iconStr = <span class="string">&#x27;level-1&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value &gt;= <span class="number">51</span> &amp;&amp; value &lt; <span class="number">101</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">iconStr = <span class="string">&#x27;level-2&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value &gt;= <span class="number">101</span> &amp;&amp; value &lt; <span class="number">151</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">iconStr = <span class="string">&#x27;level-3&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value &gt;= <span class="number">151</span> &amp;&amp; value &lt; <span class="number">201</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">iconStr = <span class="string">&#x27;level-4&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value &gt;= <span class="number">201</span> &amp;&amp; value &lt; <span class="number">301</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">iconStr = <span class="string">&#x27;level-5&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value &gt;= <span class="number">301</span> &amp;&amp; value &lt;= <span class="number">500</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">iconStr = <span class="string">&#x27;level-6&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (zoom &gt; <span class="number">8</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">myIcon = L.divIcon(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">html</span>: <span class="string">`&lt;div class=&quot;leaflet-icon-custom leaflet-icon-big leaflet-icon-<span class="subst">$&#123;iconStr&#125;</span>&quot;&gt;<span class="subst">$&#123;value&#125;</span>&lt;/div&gt;`</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">bgPos</span>: [<span class="number">0</span>, <span class="number">0</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">className</span>: <span class="string">&#x27;leaflet-icon-custom-reset&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">myMark = L.marker(latlng, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">icon</span>: myIcon,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">iconSize</span>: [<span class="number">24</span>, <span class="number">24</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">myIcon = L.divIcon(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">html</span>: <span class="string">`&lt;div class=&quot;leaflet-icon-custom leaflet-icon-small leaflet-icon-<span class="subst">$&#123;iconStr&#125;</span>&quot;&gt;&lt;/div&gt;`</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">bgPos</span>: [<span class="number">0</span>, <span class="number">0</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">className</span>: <span class="string">&#x27;leaflet-icon-custom-reset&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">myMark = L.marker(latlng, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">icon</span>: myIcon,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">iconSize</span>: [<span class="number">8</span>, <span class="number">8</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> myMark</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// popup生成器</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">popup_create</span>(<span class="params">value, id, type</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> popupStr = <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">popupStr = <span class="string">`</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-popup-custom&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-title&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;span&gt;站点详情&lt;/span&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-popup-con&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-popup-abcon&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-row&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-col-1&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-name&quot;&gt;<span class="subst">$&#123;value.ptname&#125;</span>&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-col-1&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-txt&quot; style=&quot;background:<span class="subst">$&#123;<span class="built_in">this</span>.format_cur_color(value.aqi)&#125;</span>&quot;&gt;AQI&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-value&quot;&gt;<span class="subst">$&#123;value.aqi&#125;</span>&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-row&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-col-1&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-txt&quot; style=&quot;background:<span class="subst">$&#123;<span class="built_in">this</span>.format_cur_color(value.iaqi_448A)&#125;</span>&quot;&gt;PM2.5&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-value&quot;&gt;<span class="subst">$&#123;value.iaqi_448A&#125;</span>&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-col-1&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-txt&quot; style=&quot;background:<span class="subst">$&#123;<span class="built_in">this</span>.format_cur_color(value.iaqi_4486)&#125;</span>&quot;&gt;PM10&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-value&quot;&gt;<span class="subst">$&#123;value.iaqi_4486&#125;</span>&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-col-1&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-txt&quot; style=&quot;background:<span class="subst">$&#123;<span class="built_in">this</span>.format_cur_color(value.iaqi_4402)&#125;</span>&quot;&gt;SO2&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-value&quot;&gt;<span class="subst">$&#123;value.iaqi_4402&#125;</span>&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-col-1&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-txt&quot; style=&quot;background:<span class="subst">$&#123;<span class="built_in">this</span>.format_cur_color(value.iaqi_4467)&#125;</span>&quot;&gt;NO2&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-value&quot;&gt;<span class="subst">$&#123;value.iaqi_4467&#125;</span>&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-col-1&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-txt&quot; style=&quot;background:<span class="subst">$&#123;<span class="built_in">this</span>.format_cur_color(value.iaqi_4404)&#125;</span>&quot;&gt;CO&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-value&quot;&gt;<span class="subst">$&#123;value.iaqi_4404&#125;</span>&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-col-1&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-txt&quot; style=&quot;background:<span class="subst">$&#123;<span class="built_in">this</span>.format_cur_color(type == <span class="number">2</span> ? value.iaqi_4471 : value.iaqi_4D71)&#125;</span>&quot;&gt;O3&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-value&quot;&gt;<span class="subst">$&#123;type == <span class="number">2</span> ? value.iaqi_4471 : value.iaqi_4D71&#125;</span>&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-row&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-col-1&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-txt&quot;&gt;<span class="subst">$&#123;type == <span class="number">2</span> ? <span class="string">&#x27;近24小时趋势图&#x27;</span> : <span class="string">&#x27;近一阶段趋势图&#x27;</span>&#125;</span>&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div class=&quot;leaflet-popup-chart&quot; id=&quot;leaflet-popup-chart-<span class="subst">$&#123;id&#125;</span>&quot;&gt;&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p class=&quot;leaflet-popup-time&quot;&gt;&lt;small&gt;更新于:<span class="subst">$&#123;moment(value.datatime).format(<span class="string">&#x27;YYYY/MM/DD HH:00&#x27;</span>)&#125;</span>&lt;/small&gt;&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">`</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> popupStr</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 获取当前站点小时数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">get_dataList</span>(<span class="params">fn</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> _this = <span class="built_in">this</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">(<span class="keyword">async</span> () =&gt; &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">try</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> result = <span class="keyword">await</span> Aqi.station_source_search(<span class="built_in">this</span>.params)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (result.content &amp;&amp; result.content[<span class="number">0</span>]) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.currentData = result.content[<span class="number">0</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">console</span>.log(<span class="built_in">this</span>.currentData)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">fn &amp;&amp; fn()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">catch</span> (error) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> msg = error.message || <span class="string">&#x27;数据获取失败&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.$message.error(msg)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 格式化污染等级样式</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">format_cur_color</span>(<span class="params">lvalue</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> color = <span class="string">&#x27;#EFEFEF&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (lvalue &gt;= <span class="number">0</span> &amp;&amp; lvalue &lt; <span class="number">51</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">color = <span class="string">&#x27;rgba(0, 288, 0, 1)&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (lvalue &gt;= <span class="number">51</span> &amp;&amp; lvalue &lt; <span class="number">101</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">color = <span class="string">&#x27;rgba(255, 255, 0, 1)&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (lvalue &gt;= <span class="number">101</span> &amp;&amp; lvalue &lt; <span class="number">151</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">color = <span class="string">&#x27;rgba(255, 126, 0, 1)&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (lvalue &gt;= <span class="number">151</span> &amp;&amp; lvalue &lt; <span class="number">201</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">color = <span class="string">&#x27;rgba(255, 0, 0, 1)&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (lvalue &gt;= <span class="number">201</span> &amp;&amp; lvalue &lt; <span class="number">301</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">color = <span class="string">&#x27;rgba(153, 0, 76, 1)&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (lvalue &gt;= <span class="number">301</span> &amp;&amp; lvalue &lt;= <span class="number">500</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">color = <span class="string">&#x27;rgba(126, 0, 35, 1)&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> color</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 初始化图表</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">init_bar_chart</span>(<span class="params">id</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (<span class="built_in">this</span>.myCharts &amp;&amp; <span class="built_in">this</span>.myCharts.dispose) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.myCharts.dispose()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.myCharts = <span class="literal">null</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> targetDom = <span class="built_in">document</span>.getElementById(<span class="string">`leaflet-popup-chart-<span class="subst">$&#123;id&#125;</span>`</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.myCharts = Echarts.init(targetDom)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.myCharts.setOption(<span class="built_in">this</span>.chartOptions)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 获取站点趋势图数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">async</span> <span class="function"><span class="title">get_pointer_trend</span>(<span class="params">id</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> _this = <span class="built_in">this</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> trendParams = &#123;&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> timeStr = <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span> (_this.params.dataType == <span class="number">2</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">trendParams.starttime = moment(_this.params.starttime).subtract(<span class="number">24</span>, <span class="string">&#x27;h&#x27;</span>).format(<span class="string">&#x27;YYYY-MM-DD HH:00:00&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">timeStr = <span class="string">&#x27;HH:00&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (_this.params.dataType == <span class="number">3</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">trendParams.starttime = moment(_this.params.starttime).subtract(<span class="number">30</span>, <span class="string">&#x27;d&#x27;</span>).format(<span class="string">&#x27;YYYY-MM-DD HH:00:00&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">timeStr = <span class="string">&#x27;MM/DD&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (_this.params.dataType == <span class="number">5</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">trendParams.starttime = moment(_this.params.starttime).subtract(<span class="number">12</span>, <span class="string">&#x27;M&#x27;</span>).format(<span class="string">&#x27;YYYY-MM-DD HH:00:00&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">timeStr = <span class="string">&#x27;YYYY/MM&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (_this.params.dataType == <span class="number">8</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">trendParams.starttime = moment(_this.params.starttime).subtract(<span class="number">3</span>, <span class="string">&#x27;Y&#x27;</span>).format(<span class="string">&#x27;YYYY-MM-DD HH:00:00&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">timeStr = <span class="string">&#x27;YYYY&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">trendParams.endtime = _this.params.endtime</span></span></span><br><span class="line"><span class="javascript"><span class="xml">trendParams.dataType = _this.params.dataType</span></span></span><br><span class="line"><span class="javascript"><span class="xml">trendParams.ptids = _this.params.ptids</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">try</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> result = <span class="keyword">await</span> WebGis.get_gisdata_trend(trendParams)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">_this.chartOptions.series[<span class="number">0</span>].data = result.data.series[<span class="number">0</span>].data</span></span></span><br><span class="line"><span class="javascript"><span class="xml">_this.chartOptions.xAxis[<span class="number">0</span>].data = result.data.xAxis.map(<span class="function">(<span class="params">m</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> moment(m).format(timeStr)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">_this.init_bar_chart(id)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">catch</span> (error) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> msg = error.message || <span class="string">&#x27;数据获取失败&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.$message.error(msg)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leaflet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leaflet Echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在基于leaflet的GIS图中对点位详情数据进行展示</title>
      <link href="/2017/12/29/%E5%9C%A8%E5%9F%BA%E4%BA%8Eleaflet%E7%9A%84GIS%E5%9B%BE%E4%B8%AD%E5%AF%B9%E7%82%B9%E4%BD%8D%E8%AF%A6%E6%83%85%E6%95%B0%E6%8D%AE%E8%BF%9B%E8%A1%8C%E5%B1%95%E7%A4%BA/"/>
      <url>/2017/12/29/%E5%9C%A8%E5%9F%BA%E4%BA%8Eleaflet%E7%9A%84GIS%E5%9B%BE%E4%B8%AD%E5%AF%B9%E7%82%B9%E4%BD%8D%E8%AF%A6%E6%83%85%E6%95%B0%E6%8D%AE%E8%BF%9B%E8%A1%8C%E5%B1%95%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<blockquote><p>不加班会死星人正在发烧ing,但是总感觉今天还要写点东西记录一下，原谅我肆无忌惮的贴代码吧。阿门，长得帅的人总会被原谅的不是吗？</p></blockquote><span id="more"></span><h2 id="直接贴代码了，想打死我的请排队取号…"><a href="#直接贴代码了，想打死我的请排队取号…" class="headerlink" title="直接贴代码了，想打死我的请排队取号…"></a>直接贴代码了，想打死我的请排队取号…</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;!--定义GIS初始化的DOM节点--&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%;height: 100%;&quot;</span> <span class="attr">ref</span>=<span class="string">&#x27;lyMap&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 引入leaflet相关文件</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> <span class="string">&#x27;leaflet/dist/leaflet.css&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> L <span class="keyword">from</span> <span class="string">&#x27;leaflet&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> moment <span class="keyword">from</span> <span class="string">&#x27;moment&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> geoJson <span class="keyword">from</span> <span class="string">&#x27;./data/130000.js&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Pointer <span class="keyword">from</span> <span class="string">&#x27;../../../data/request/hbmis/base/pointer&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Data <span class="keyword">from</span> <span class="string">&#x27;../../../data/request/hbmis/monitor/data&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">name</span>: <span class="string">&#x27;lyMap&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">map</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">layer_on_line</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">layer_off_line</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">layerGroupArr</span>: [],</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">layerControl</span>: <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">markicon_on_line</span>: L.icon(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">iconUrl</span>: <span class="built_in">require</span>(<span class="string">&#x27;./data/icon.png&#x27;</span>),</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">iconSize</span>: [<span class="number">15</span>, <span class="number">15</span>], <span class="comment">// size of the icon</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;),</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">markicon_off_line</span>: L.icon(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">iconUrl</span>: <span class="built_in">require</span>(<span class="string">&#x27;./data/icon2.png&#x27;</span>),</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">iconSize</span>: [<span class="number">15</span>, <span class="number">15</span>], <span class="comment">// size of the icon</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;),</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">pointer_list</span>: [],</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">current_point_data</span>: <span class="literal">null</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">props</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">layers</span>: &#123; <span class="comment">// 图层列表</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Array</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> []</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">points</span>: &#123; <span class="comment">// 点位列表</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Array</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> []</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">bound</span>: &#123; <span class="comment">// 显示范围</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Array</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">[<span class="number">43.186231</span>, <span class="number">118.422797</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">[<span class="number">40.081638</span>, <span class="number">120.796048</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">[<span class="number">35.605063</span>, <span class="number">114.982503</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">[<span class="number">38.41883</span>, <span class="number">112.811622</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">center</span>: &#123; <span class="comment">// 中心点</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Array</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> [<span class="number">38.05</span>, <span class="number">114.48</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">zoom</span>: &#123; <span class="comment">// 缩放系数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Number</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="number">7</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">minZoom</span>: &#123; <span class="comment">// 最小缩放系数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Number</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="number">6</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">maxZoom</span>: &#123; <span class="comment">// 最大缩放系数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Number</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="number">15</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">attributionControl</span>: &#123; <span class="comment">// 右下角控制点</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Boolean</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="literal">false</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">ismouseMark</span>: &#123; <span class="comment">// 手动标记</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Boolean</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="literal">false</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">showPopup</span>: &#123; <span class="comment">// 显示提示</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Boolean</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="literal">true</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">pointRemove</span>: &#123; <span class="comment">// 标记点移除</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">type</span>: <span class="built_in">Boolean</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">default</span>: <span class="literal">false</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.init()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.pointerSearch(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">size</span>: <span class="number">10000</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 站点</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">pointerSearch</span>(<span class="params">params</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">(<span class="keyword">async</span>() =&gt; &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">try</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> info = <span class="keyword">await</span> Pointer.pointer_search(params)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.pointer_list = info.content</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.point_add()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">catch</span>(error) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.$message.error(<span class="string">&#x27;数据获取失败&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 详情</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">dataTimeSearch</span>(<span class="params">params, fn</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">(<span class="keyword">async</span>() =&gt; &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">try</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> info = <span class="keyword">await</span> Data.data_time_search(params)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.current_point_data = info.data.content[<span class="number">0</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">fn &amp;&amp; fn()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">catch</span>(error) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.$message.error(<span class="string">&#x27;数据获取失败&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 初始化</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">init</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> _this = <span class="built_in">this</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> gdLayer = L.tileLayer(<span class="string">&#x27;http://t&#123;s&#125;.tianditu.cn/DataServer?T=cva_w&amp;X=&#123;x&#125;&amp;Y=&#123;y&#125;&amp;L=&#123;z&#125;&#x27;</span>, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">subdomains</span>: [<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">var</span> normal = L.layerGroup([gdLayer])</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.map = L.map(_this.$refs.lyMap, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">attributionControl</span>: _this.attributionControl, <span class="comment">// 取消右下角logo</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">zoom</span>: _this.zoom, <span class="comment">// 默认缩放级别</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">minZoom</span>: _this.minZoom, <span class="comment">// 最新缩放</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">maxZoom</span>: _this.maxZoom, <span class="comment">// 最大缩放</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">layers</span>: [normal], <span class="comment">// 设置图层</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">maxBounds</span>: [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">[<span class="number">43.186231</span>, <span class="number">118.422797</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">[<span class="number">40.081638</span>, <span class="number">120.796048</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">[<span class="number">35.605063</span>, <span class="number">114.982503</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">[<span class="number">38.41883</span>, <span class="number">112.811622</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;).setView(<span class="built_in">this</span>.center);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">L.geoJSON(geoJson, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">style</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">color</span>: <span class="string">&#x27;gray&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">fillColor</span>: <span class="string">&#x27;#fff&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">weight</span>: <span class="number">2</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;).addTo(<span class="built_in">this</span>.map);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 批量添加Mark标记点</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">point_add</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> _this = <span class="built_in">this</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.layer_on_line = <span class="keyword">new</span> L.layerGroup()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="built_in">this</span>.layer_off_line = <span class="keyword">new</span> L.layerGroup()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> on_line = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">off_line = <span class="number">0</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="built_in">this</span>.pointer_list.length; i++) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> li = <span class="built_in">this</span>.pointer_list[i]</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> marks = <span class="literal">null</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">if</span>(li.state == <span class="number">1</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">marks = L.marker([li.lat, li.lng], &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">icon</span>: _this.markicon_on_line</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">marks.addTo(<span class="built_in">this</span>.layer_on_line)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">marks = L.marker([li.lat, li.lng], &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">icon</span>: _this.markicon_off_line</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">marks.addTo(<span class="built_in">this</span>.layer_off_line)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">marks.on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">_this.dataTimeSearch(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">ptids</span>: li.ptid,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">dataType</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">datatime</span>: moment().format(<span class="string">&#x27;YYYY-MM-DD HH:mm:00&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> jsondata = &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">name</span>: li.name,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">data</span>: _this.current_point_data,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="attr">datatime</span>: moment(_this.current_point_data.datatime).format(<span class="string">&#x27;YYYY/MM/DD HH:mm&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">marks.bindPopup(_this.popupHtml(jsondata)).openPopup()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> otherLayer = &#123;&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> markerLayer = &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="string">&quot;在线&quot;</span>: <span class="built_in">this</span>.layer_on_line,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="string">&quot;离线&quot;</span>: <span class="built_in">this</span>.layer_off_line,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">_this.map.addLayer(_this.layer_on_line)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">_this.map.addLayer(_this.layer_off_line)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">L.control.layers(otherLayer, markerLayer).addTo(<span class="built_in">this</span>.map);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 定义标记点弹出内容模板</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="title">popupHtml</span>(<span class="params">json</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> htmls = <span class="string">`</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;div style=&quot;width:300px;height:auto;&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p style=&#x27;font-size:16px;margin:0 0 10px&#x27;&gt;<span class="subst">$&#123;json.name&#125;</span>&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;p style=&#x27;font-size:14px;margin:0 0 10px&#x27;&gt;<span class="subst">$&#123;json.datatime&#125;</span>&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;table class=&#x27;ly_tables&#x27; style=&#x27;width: 100%;text-align: center;border-collapse: collapse;border-spacing: 0;&#x27;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;tbody&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;tr&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;SO2&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;<span class="subst">$&#123;json.data.value_4402&#125;</span>&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;CO&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;<span class="subst">$&#123;json.data.value_4404&#125;</span>&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;NO2&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;<span class="subst">$&#123;json.data.value_4467&#125;</span>&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/tr&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;tr&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;O3-1h&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;<span class="subst">$&#123;json.data.value_4471&#125;</span>&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;PM10&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;<span class="subst">$&#123;json.data.value_4486&#125;</span>&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;PM2.5&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;<span class="subst">$&#123;json.data.value_448A&#125;</span>&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/tr&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;tr&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;湿度&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;<span class="subst">$&#123;json.data.value_2473&#125;</span>&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;温度&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;<span class="subst">$&#123;json.data.value_2481&#125;</span>&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;风速&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;<span class="subst">$&#123;json.data.value_2483&#125;</span>&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/tr&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;tr&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;风向&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;<span class="subst">$&#123;json.data.value_2484&#125;</span>&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;能见度&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;<span class="subst">$&#123;json.data.value_4474&#125;</span>&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;大气压&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;td style=&#x27;border: 1px solid #ccc;line-height: 26px;&#x27;&gt;<span class="subst">$&#123;json.data.value_4482&#125;</span>&lt;/td&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/tr&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/tbody&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/table&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">`</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">return</span> htmls</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>=<span class="string">&quot;scoped&quot;</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.leaflet-control-layers-selector</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="attribute">opacity</span>: <span class="number">1</span> <span class="meta">!important</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.ly_tables</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="attribute">border-collapse</span>: collapse;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="attribute">border-spacing</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.ly_tables</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="attribute">line-height</span>: <span class="number">26px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leaflet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leaflet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OGS标准以及常见的标准服务</title>
      <link href="/2017/10/20/OGS%E6%A0%87%E5%87%86%E4%BB%A5%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%9A%84%E6%A0%87%E5%87%86%E6%9C%8D%E5%8A%A1/"/>
      <url>/2017/10/20/OGS%E6%A0%87%E5%87%86%E4%BB%A5%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%9A%84%E6%A0%87%E5%87%86%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近因为项目需要，一直在做和<code>webgis</code>相关的一些东西，今天自己主要梳理和记录一些GIS服务中基础概念。</p></blockquote><span id="more"></span><h2 id="什么是OGC标准？"><a href="#什么是OGC标准？" class="headerlink" title="什么是OGC标准？"></a>什么是OGC标准？</h2><p>开放地理空间联盟 (OGC) Web 服务能够使地图和数据以国际公认的开放格式在 Web 上可用。OGC 定义了相关规范，安装有支持此规范的客户端应用程序的任何人均可在 Web 上使用地图和数据。所有开发人员均可免费使用 OGC 规范来创建此类受支持的客户端。</p><p>OGC中常见的服务有：</p><ul><li><p>WMS服务</p></li><li><p>WFS服务</p></li><li><p>WCS 服务</p></li><li><p>WMTS服务 </p></li><li><p>WPS服务</p></li></ul><h3 id="网络地图服务（WMS）"><a href="#网络地图服务（WMS）" class="headerlink" title="网络地图服务（WMS）"></a>网络地图服务（WMS）</h3><p>网络地图服务（WMS）利用具有地理空间位置信息的数据制作地图。其中将地图定义为地理数据可视的表现。能够根据用户的请求返回相应的地图（包括PNG，GIF，JPEG等栅格形式或者是SVG和WEB CGM等矢量形式）。WMS支持网络协议HTTP，所支持的操作是由URL定义的。</p><p>WMS提供如下操作:</p><ul><li><p>GetCapabitities：返回服务级元数据，它是对服务信息内容和要求参数的一种描述。</p></li><li><p>GetMap：返回一个地图影像，其地理空间参考和大小参数是明确定义了的。</p></li><li><p>GetFeatureInfo：返回显示在地图上的某些特殊要素的信息。</p></li><li><p>GetLegendGraphic：返回地图的图例信息。</p></li></ul><h3 id="网络要素服务（WFS）"><a href="#网络要素服务（WFS）" class="headerlink" title="网络要素服务（WFS）"></a>网络要素服务（WFS）</h3><p>网络要素服务（WFS）支持用户在分布式的环境下通过HTTP对地理要素进行插入，更新，删除，检索和发现服务。该服务根据HTTP客户请求返回要素级的GML(Geography Markup Language、地理标识语言)数据，并提供对要素的增加、修改、删除等事务操作，是对Web地图服务的进一步深入。WFS通过OGC Filter构造查询条件，支持基于空间几何关系的查询，基于属性域的查询，当然还包括基于空间关系和属性域的共同查询。</p><p>WFS提供如下操作:</p><ul><li><p>GetCapabitities：返回服务级元数据，它是对服务信息内容和要求参数的一种描述。</p></li><li><p>DescribeFeatureType：生成一个Schema用于描述WFS实现所能提供服务的要素类型。Schema描述定义了在输入时WFS实现如何对要素实例进行编码以及输出时如何生成一个要素实例。</p></li><li><p>GetFeature：可根据查询要求返回一个符合GML规范的数据文档。</p></li><li><p>LockFeature：用户通过Transaction请求时，为了保证要素信息的一致性，即当一个事务访问一个数据项时，其他的事务不能修改这个数据项，对要素数据加要素锁。</p></li><li><p>Transaction： 与要素实例的交互操作。该操作不仅能提供要素读取，同时支持要素在线编辑和事务处理。Transaction操作是可选的，服务器根据数据性质选择是否支持该操作。</p></li></ul><h3 id="网络覆盖服务（WCS）"><a href="#网络覆盖服务（WCS）" class="headerlink" title="网络覆盖服务（WCS）"></a>网络覆盖服务（WCS）</h3><p>网络覆盖服务是面向空间影像数据，它将包含地理位置的地理空间数据作为“覆盖（COverage）”在网上相互交换，如卫星影像、数字高程数据等栅格数据。</p><p>WCS提供如下操作:</p><ul><li><p>GetCapabitities：返回服务级元数据，它是对服务信息内容和要求参数的一种描述。</p></li><li><p>DescribeCoverage：支持用户从特定WCS服务器获取一个或多个覆盖的详细的描述文档。</p></li><li><p>GetCoverage：可根据查询要求返回一个包含或者引用被请求的覆盖数据的响应文档。</p></li></ul><h3 id="切片地图服务（WTMS）"><a href="#切片地图服务（WTMS）" class="headerlink" title="切片地图服务（WTMS）"></a>切片地图服务（WTMS）</h3><p> WMTS，切片地图Web服务（OpenGIS Web Map Tile Service）当前版本是1.0.0。WMTS标准定义了一些操作，这些操作允许用户访问切片地图。WMTS可能是OGC首个支持RESTful访问的服务标准。<br>WMTS提供了一种采用预定义图块方法发布数字地图服务的标准化解决方案。WMTS弥补了WMS不能提供分块地图的不足。WMTS牺牲了提供定制地图的灵活性，代之以通过提供静态数据（基础地图）来增强伸缩性，这些静态数据的范围框和比例尺被限定在各个图块内。这些固定的图块集使得对WMTS服务的实现可以使用一个仅简单返回已有文件的Web服务器即可，同时使得可以利用一些标准的诸如分布式缓存的网络机制实现伸缩性。</p><p>WTMS提供如下操作:</p><ul><li><p>GetCapabilities:    返回服务级元数据，它是对服务信息内容和要求参数的一种描述。</p></li><li><p>GetTile: 获取切片数据</p></li><li><p>GetFeatureInfo： 获取点选的要素信息</p></li></ul><h3 id="网络地理信息处理服务-WPS"><a href="#网络地理信息处理服务-WPS" class="headerlink" title="网络地理信息处理服务(WPS)"></a>网络地理信息处理服务(WPS)</h3><p>WPS标准描述了如何通过远程的任何算法和模型处理获得地理空间的栅格或矢量信息产品。WPS 提供的服务可以是简单的空间定位ｉｄｅ两份数据相减，也可以是复杂大气模型等运算。(<a href="http://www.opengeospatial.org/standards/wps)%E3%80%82">http://www.opengeospatial.org/standards/wps)。</a></p><p>一般用于：</p><ul><li><p>使用即插即用的机制降低数据处理流程的复杂性。</p></li><li><p>连接不同的处理操作。</p></li><li><p>开发可以被其它用户重用的处理过程。</p></li><li><p>处理流程和模型集中与服务提供者，方便维护。</p></li><li><p>利用中央服务器集群的高运算性能。</p></li><li><p>方便对复杂模型的公共使用。</p></li></ul><p>WPS提供如下操作：</p><ul><li><p>GetCapabilities：请求服务的元数据</p></li><li><p>请求有关可运行在服务上的进程的详细信息</p></li><li><p>请求运行一个由 WPS 服务实现的进程</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Webgis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Webgis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数的节流与防抖</title>
      <link href="/2017/09/26/%E5%87%BD%E6%95%B0%E7%9A%84%E8%8A%82%E6%B5%81%E4%B8%8E%E9%98%B2%E6%8A%96/"/>
      <url>/2017/09/26/%E5%87%BD%E6%95%B0%E7%9A%84%E8%8A%82%E6%B5%81%E4%B8%8E%E9%98%B2%E6%8A%96/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在项目开发过程中我们经常会遇到需对某个函数进行节流或者防抖处理，今天主要说下函数的节流和防抖。</p></blockquote><h3 id="函数节流"><a href="#函数节流" class="headerlink" title="函数节流"></a>函数节流</h3><p>节流，顾名思义就是节约流量。函数的节流可以简单的理解为：在同一时间段，减少某一函数的调用次数。</p><p>最经典的场景就是当我们需要监听某一页面滚动事件并对其进行操作的时候。</p><p>代码示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--这里我们通过演示器来实现控制函数的执行频率--&gt;</span><br><span class="line">&lt;!--定义是否执行执行函数的状态--&gt;</span><br><span class="line">let isRun = true</span><br><span class="line"></span><br><span class="line">fucntion _debounce(fn, delay) &#123;</span><br><span class="line">    if(!isRun) return</span><br><span class="line"></span><br><span class="line">    this.isRun = false</span><br><span class="line">    </span><br><span class="line">    setTimeout(()=&gt;&#123;</span><br><span class="line">        fn()</span><br><span class="line">        this.isRun = true</span><br><span class="line">    &#125;,delay)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function test() &#123;</span><br><span class="line">    console.log(&#x27;hello,world&#x27;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;!--通过监听scroll时间来进行测试--&gt;</span><br><span class="line">window.addEventListener(&#x27;scroll&#x27;, _debounce(test, 1000));</span><br></pre></td></tr></table></figure><h3 id="函数防抖"><a href="#函数防抖" class="headerlink" title="函数防抖"></a>函数防抖</h3><p>防抖，字面意思就是防抖抖动。函数的防抖可以简单的理解为：假设一函数需要延时三秒后执行，在同一时间段如果函数再次被调用，延时时间将被重置，并重新计算。</p><p>例如：当我们需要在一个页面执行一个动画时，如果在执行周期内被重复调用，将会导致动画一直在抖动，无法流畅的执行下去。</p><p>代码示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--这里我们通过演示器来实现控制函数的执行频率--&gt;</span><br><span class="line">&lt;!--定义timer变量，用来存储定时器对象--&gt;</span><br><span class="line">let timer = null</span><br><span class="line">&lt;!--定义是否执行执行函数的状态--&gt;</span><br><span class="line">let isRun = true</span><br><span class="line"></span><br><span class="line">fucntion _throttle(fn, delay) &#123;</span><br><span class="line">    if(!isRun) &#123;</span><br><span class="line">        &lt;!--如果已经运行则停止延时器并重新执行--&gt;</span><br><span class="line">        clearTimeout(timer)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    this.isRun = false</span><br><span class="line">    </span><br><span class="line">    timer = setTimeout(()=&gt;&#123;</span><br><span class="line">        fn()</span><br><span class="line">        this.isRun = true</span><br><span class="line">    &#125;,delay)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function test() &#123;</span><br><span class="line">    console.log(&#x27;hello,world&#x27;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;!--通过监听scroll时间来进行测试--&gt;</span><br><span class="line">window.addEventListener(&#x27;scroll&#x27;, _throttle(test, 1000));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见的跨域问题以及解决方案</title>
      <link href="/2017/07/28/%E5%B8%B8%E8%A7%81%E7%9A%84%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2017/07/28/%E5%B8%B8%E8%A7%81%E7%9A%84%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<blockquote><p>身为一个码农，在日常的开发过程中难免遇到API接口跨域的问题，今天主要整理一下导致跨域问题的原因以及常用的解决方案。</p></blockquote><span id="more"></span><h2 id="导致跨域问题的原因？"><a href="#导致跨域问题的原因？" class="headerlink" title="导致跨域问题的原因？"></a>导致跨域问题的原因？</h2><p>跨域问题其实是由浏览器的同源策略导致的。</p><p>同源策略限制了从同一个源加载的文档或脚本如何与来自另一个源的资源进行交互。这是一个用于隔离潜在恶意文件的重要安全机制。</p><h2 id="常用的解决方案"><a href="#常用的解决方案" class="headerlink" title="常用的解决方案"></a>常用的解决方案</h2><p>解决跨域问题的方式有很多，一般有下面几种：</p><p>1、 Cross-Origin Resource Sharing（CORS）跨域资源</p><p>2、JSONP</p><p>3、反向代理</p><p>4、document.domain</p><p>5、使用postMessage</p><p>6、WebSocket</p><p>7、关闭浏览器跨域限制（disable-web-security）</p><p>然而，在实际的开发过程中我们一般最常用的解决方案是CORS和反向代理。</p><h3 id="跨域资源共享（CORS）"><a href="#跨域资源共享（CORS）" class="headerlink" title="跨域资源共享（CORS）"></a>跨域资源共享（CORS）</h3><p>跨域资源共享（Cross-Origin Resource Sharing，简称 CORS），是 HTML5 提供的标准跨域解决方案。相较于JSONP的方式，CORS具有更多优势：</p><ul><li><p>JSONP只能实现GET请求，而CORS支持所有类型的HTTP请求。</p></li><li><p>使用CORS，开发者可以使用普通的XMLHttpRequest发起请求和获得数据，比起JSONP有更好的错误处理。</p></li></ul><p>不过使用CORS来解决跨域问题需要服务端支持，然后通过设置Access-Control-Allow-Origin来解决跨域问题。</p><h4 id="服务端如何实现CORS跨域资源共享？"><a href="#服务端如何实现CORS跨域资源共享？" class="headerlink" title="服务端如何实现CORS跨域资源共享？"></a>服务端如何实现CORS跨域资源共享？</h4><p>我们以<code>node</code>服务为例，因为我个人比较喜欢使用koa2来进行Restful API的开发， 所以我们可以通过<code>koa2-cors</code>来快速实现服务对<code>CORS</code>的支持，具体实现示例代码：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> koa = <span class="built_in">require</span>(<span class="string">&#x27;koa&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> koa();</span><br><span class="line"><span class="keyword">var</span> router = <span class="built_in">require</span>(<span class="string">&#x27;koa-router&#x27;</span>)();</span><br><span class="line"><span class="comment">//引入koa2-cors库</span></span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&#x27;koa2-cors&#x27;</span>);</span><br><span class="line"></span><br><span class="line">app.use(cors(&#123;</span><br><span class="line">    <span class="attr">origin</span>: <span class="function"><span class="keyword">function</span> (<span class="params">ctx</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;*&quot;</span>; <span class="comment">// 允许来自所有域名请求</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">exposeHeaders</span>: [<span class="string">&#x27;WWW-Authenticate&#x27;</span>, <span class="string">&#x27;Server-Authorization&#x27;</span>],</span><br><span class="line">    <span class="attr">maxAge</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="attr">credentials</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">allowMethods</span>: [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;DELETE&#x27;</span>],</span><br><span class="line">    <span class="attr">allowHeaders</span>: [<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;Authorization&#x27;</span>, <span class="string">&#x27;Accept&#x27;</span>],</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params">ctx</span>) </span>&#123;</span><br><span class="line">    ctx.body = <span class="string">&#x27;hello，world&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app</span><br><span class="line">    .use(router.routes())</span><br><span class="line">    .use(router.allowedMethods());</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><p>除了使用<code>CORS</code>之外，我们也会经常通过设置反向代理服务来解决跨域问题。</p><p>一般情况下，我们可以直接通过配置<code>nginx</code>服务器来实现反向代理功能；</p><p>因为我们公司后端是采用了微服务架构+网关（kong），所以可以直接在<code>kong</code>里面配置路由规则；</p><p>如果自己是前端开发者并且使用了<code>vue</code>进行前端项目开发，我们只可以打开项目中config文件夹下index.js文件，然后在<code>dev.proxyTable</code>添加配置信息就可以了。示例：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line"><span class="attr">build</span>: &#123;</span><br><span class="line"><span class="attr">env</span>: <span class="built_in">require</span>(<span class="string">&#x27;./prod.env&#x27;</span>),</span><br><span class="line"><span class="attr">index</span>: path.resolve(__dirname, <span class="string">&#x27;../dist/index.html&#x27;</span>),</span><br><span class="line"><span class="attr">assetsRoot</span>: path.resolve(__dirname, <span class="string">&#x27;../dist&#x27;</span>),</span><br><span class="line"><span class="attr">assetsSubDirectory</span>: <span class="string">&#x27;static&#x27;</span>,</span><br><span class="line"><span class="attr">assetsPublicPath</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line"><span class="attr">productionSourceMap</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="comment">// Gzip off by default as many popular static hosts such as</span></span><br><span class="line"><span class="comment">// Surge or Netlify already gzip all static assets for you.</span></span><br><span class="line"><span class="comment">// Before setting to `true`, make sure to:</span></span><br><span class="line"><span class="comment">// npm install --save-dev compression-webpack-plugin</span></span><br><span class="line"><span class="attr">productionGzip</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">productionGzipExtensions</span>: [<span class="string">&#x27;js&#x27;</span>, <span class="string">&#x27;css&#x27;</span>],</span><br><span class="line"><span class="comment">// Run the build command with an extra argument to</span></span><br><span class="line"><span class="comment">// View the bundle analyzer report after build finishes:</span></span><br><span class="line"><span class="comment">// `npm run build --report`</span></span><br><span class="line"><span class="comment">// Set to `true` or `false` to always turn it on or off</span></span><br><span class="line"><span class="attr">bundleAnalyzerReport</span>: process.env.npm_config_report</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">dev</span>: &#123;</span><br><span class="line"><span class="attr">env</span>: <span class="built_in">require</span>(<span class="string">&#x27;./dev.env&#x27;</span>),</span><br><span class="line"><span class="attr">port</span>: <span class="number">8087</span>,</span><br><span class="line"><span class="attr">autoOpenBrowser</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="attr">assetsSubDirectory</span>: <span class="string">&#x27;static&#x27;</span>,</span><br><span class="line"><span class="attr">assetsPublicPath</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">//################################################################配置信息</span></span><br><span class="line"><span class="attr">proxyTable</span>: &#123;</span><br><span class="line"><span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line"><span class="attr">target</span>: <span class="string">&#x27;http://13.63.***.**&#x27;</span>,<span class="comment">//填写需要代理的真实地址</span></span><br><span class="line"><span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="attr">pathRewrite</span>: &#123;</span><br><span class="line"><span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//################################################################配置信息</span></span><br><span class="line"><span class="comment">// CSS Sourcemaps off by default because relative paths are &quot;buggy&quot;</span></span><br><span class="line"><span class="comment">// with this option, according to the CSS-Loader README</span></span><br><span class="line"><span class="comment">// (https://github.com/webpack/css-loader#sourcemaps)</span></span><br><span class="line"><span class="comment">// In our experience, they generally work as expected,</span></span><br><span class="line"><span class="comment">// just be aware of this issue when enabling this option.</span></span><br><span class="line"><span class="attr">cssSourceMap</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>如果我们希望可以最快速的解决跨域问题，然后进行<strong>临时调试</strong>，我们可以直接通过关闭chrome的安全设置（不推荐）。</p><h4 id="具体实现方式"><a href="#具体实现方式" class="headerlink" title="具体实现方式"></a>具体实现方式</h4><p>1、在桌面找到浏览器快捷图标并点击鼠标右键的属性一栏</p><p>2、在属性页面中的目标输入框里加上  <code>--disable-web-security --user-data-dir=C:\MyChromeDevUserData</code>,<code>user-data-dir</code>可以是任意路径，如下图所示：</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-nM518rwX-1635341149643)(<a href="http://oft2csb8a.bkt.clouddn.com/611599-20171220102748021-1562232095.png)]">http://oft2csb8a.bkt.clouddn.com/611599-20171220102748021-1562232095.png)]</a></p><p>3、保存并重启浏览器</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用canvas进行图片压缩上传</title>
      <link href="/2017/05/29/%E4%BD%BF%E7%94%A8canvas%E8%BF%9B%E8%A1%8C%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E4%B8%8A%E4%BC%A0/"/>
      <url>/2017/05/29/%E4%BD%BF%E7%94%A8canvas%E8%BF%9B%E8%A1%8C%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<p>最近项目有个需求是要前端进行图片压缩，在这里总结下，整个过程主要涉及到html5的三个API:FileReader,Canvas,FormData,进行了尺寸压缩和质量压缩。</p><p>主要思路：</p><p>1、通过input file上传图片，使用FileReader读取上传的图片数据</p><p>2、将图片数据传给img,然后使用canvas绘制图片，调用canvas.toDataURL(),进行压缩</p><p>3、获取压缩后的base64格式的图片数据，转换成blob对象</p><p>4、使用formdata进行上传</p><p>将input中选择的图片通过FileReader获取</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;input type=&quot;file&quot; id=&quot;files&quot; name=&quot;pic&quot; accept=&quot;image/*&quot;/&gt;</span><br></pre></td></tr></table></figure><p>FileReader读取图片数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var filesDom = document.getElementById(&quot;files&quot;);</span><br><span class="line">filesDom.onchange = function()&#123;</span><br><span class="line">   var files = filesDom.files[0],</span><br><span class="line">       image1 = new Image(),//原始图片</span><br><span class="line">       image2 = new Image(),//压缩之后的图片</span><br><span class="line">       reader = new FileReader(),</span><br><span class="line">       canvas = document.createElement(&#x27;canvas&#x27;),</span><br><span class="line">       context = canvas.getContext(&#x27;2d&#x27;);</span><br><span class="line">       url;</span><br><span class="line">   </span><br><span class="line">       reader.onload = function(e)&#123;</span><br><span class="line">          url = e.target.result;</span><br><span class="line">          image.onload = function()&#123;</span><br><span class="line">             /***/</span><br><span class="line">          &#125;</span><br><span class="line">          image.src = url;</span><br><span class="line">       &#125;</span><br><span class="line">       reader.readAsDataURL(files);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载完img之后，canvas使用drawImage方法绘制图像(尺寸压缩)，同时使用toDataURL方法可以进行质量压缩</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">image.onload = function()&#123;</span><br><span class="line">    var Obj = sizeCompress(image);//这个方法返回的是尺寸压缩的宽和高</span><br><span class="line">    thumbH= Obj.thumbH;</span><br><span class="line"> thumbW = Obj.thumbW;</span><br><span class="line"> canvas.width = thumbW;</span><br><span class="line"> canvas.height = thumbH;</span><br><span class="line"> </span><br><span class="line"> context.drawImage(image,0,0,thumbW,thumbH);</span><br><span class="line"> dataUrl = canvas.toDataURL(&quot;image/jpeg&quot;);//</span><br><span class="line">   </span><br><span class="line">  blob = dataURLtoBlob(dataUrl);//转换成blob对象</span><br><span class="line">  while(blob.size &gt;200*1024)&#123;</span><br><span class="line">  //当图片大小&gt;200KB对图片进行图片压缩和尺寸压缩，了解更多看我的完整代码</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是：</p><p>toDataURL默认格式为image&#x2F;png,只有指定格式为image&#x2F;jpeg或image&#x2F;webp，才可以选择质量压缩的值(即第二个参数)。而且按原宽和高使用image&#x2F;png还可能让图片变大。</p><p>把base64格式的图片数据转换成blob对象</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function dataURLtoBlob(dataURL) &#123;</span><br><span class="line">  var binary = atob(dataURL.split(&#x27;,&#x27;)[1]);</span><br><span class="line">  var array = [];</span><br><span class="line">  for(var i = 0; i &lt; binary.length; i++) &#123;</span><br><span class="line">      array.push(binary.charCodeAt(i));</span><br><span class="line">  &#125;</span><br><span class="line">  return new Blob([new Uint8Array(array)], &#123;type: &#x27;image/jpeg&#x27;&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里先使用atob进行解码(编码的方法btoa()),然后以创建8位整数格式的arraybuffer，传入blob构造函数创建blob对象。</p><p>上传文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var fd = new FormData(),</span><br><span class="line">    xhr = new XMLHttpRequest();</span><br><span class="line">fd.append(&#x27;file&#x27;, blob);</span><br><span class="line"></span><br><span class="line">xhr.open(&quot;POST&quot;,url);</span><br><span class="line">xhr.onreadystatechange = function() &#123;</span><br><span class="line">    //do something</span><br><span class="line">&#125;</span><br><span class="line">xhr.send(fd);</span><br></pre></td></tr></table></figure><p>原文地址：<a href="http://selinayu.cc/2016/09/11/%E4%BD%BF%E7%94%A8canvas%E8%BF%9B%E8%A1%8C%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E4%B8%8A%E4%BC%A0/">http://selinayu.cc/2016/09/11/%E4%BD%BF%E7%94%A8canvas%E8%BF%9B%E8%A1%8C%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E4%B8%8A%E4%BC%A0/</a></p>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Canvas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何解决nodemon运行报错问题</title>
      <link href="/2017/05/02/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3nodemon%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/"/>
      <url>/2017/05/02/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3nodemon%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p>nodemon可以用来监视node.js应用程序中的任何更改并自动重启服务，作为懒癌晚期的我在进行Node相关服务开发的过程中肯定是不愿意一遍又一遍的重启node服务然后进行代码调试的。今天自己电脑重装系统后在安装nodemon时遇到了这个问题，下面内容仅作为记录，以免后面忘记导致自己重复掉坑。</p></blockquote><span id="more"></span><h3 id="错误截图"><a href="#错误截图" class="headerlink" title="错误截图"></a>错误截图</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-hh3iHiJ8-1635340565136)(<a href="http://odxmfpmuo.bkt.clouddn.com/noedmon-error.png)]">http://odxmfpmuo.bkt.clouddn.com/noedmon-error.png)]</a></p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p><code>nodemon</code>没有被正确安装</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>如果<code>yarn global add nodemon --verbose</code>安装没用的话，然后输入<code>npm i nodemon -g --verbose</code>使用NPM重新全局安装一次基本上就解决问题了，反之亦然。</p>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>99%的人都理解错了HTTP中GET与POST的区别</title>
      <link href="/2017/04/29/%E7%99%BE%E5%88%86%E4%B9%8B%E4%B9%9D%E5%8D%81%E4%B9%9D%E7%9A%84%E4%BA%BA%E9%83%BD%E7%90%86%E8%A7%A3%E9%94%99%E4%BA%86HTTP%E4%B8%ADGET%E4%B8%8EPOST%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2017/04/29/%E7%99%BE%E5%88%86%E4%B9%8B%E4%B9%9D%E5%8D%81%E4%B9%9D%E7%9A%84%E4%BA%BA%E9%83%BD%E7%90%86%E8%A7%A3%E9%94%99%E4%BA%86HTTP%E4%B8%ADGET%E4%B8%8EPOST%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>GET和POST是HTTP请求的两种基本方法，要说它们的区别，接触过WEB开发的人都能说出一二。</p><p>最直观的区别就是GET把参数包含在URL中，POST通过request body传递参数。</p><span id="more"></span><p>你可能自己写过无数个GET和POST请求，或者已经看过很多权威网站总结出的他们的区别，你非常清楚知道什么时候该用什么。</p><p>当你在面试中被问到这个问题，你的内心充满了自信和喜悦。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/8ad852dffe31a55a10f87036d7bc2109.png"></p><p>你轻轻松松的给出了一个“标准答案”：</p><p>GET在浏览器回退时是无害的，而POST会再次提交请求。</p><p>GET产生的URL地址可以被Bookmark，而POST不可以。</p><p>GET请求会被浏览器主动cache，而POST不会，除非手动设置。</p><p>GET请求只能进行url编码，而POST支持多种编码方式。</p><p>GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。</p><p>GET请求在URL中传送的参数是有长度限制的，而POST么有。</p><p>对参数的数据类型，GET只接受ASCII字符，而POST没有限制。</p><p>GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。</p><p>GET参数通过URL传递，POST放在Request body中。</p><p>（本标准答案参考自w3schools）</p><p>“很遗憾，这不是我们要的回答！”</p><p><img src="https://img-blog.csdnimg.cn/img_convert/cf715e7d2bbc3df8507dada57bc2b7b2.png"></p><p>请告诉我真相。。。</p><p>如果我告诉你GET和POST本质上没有区别你信吗？ </p><p>让我们扒下GET和POST的外衣，坦诚相见吧！</p><p><img src="https://img-blog.csdnimg.cn/img_convert/c01595c08ed755bc89606bee7c535ea3.png"></p><p>GET和POST是什么？HTTP协议中的两种发送请求的方法。</p><p>HTTP是什么？HTTP是基于TCP&#x2F;IP的关于数据如何在万维网中如何通信的协议。</p><p>HTTP的底层是TCP&#x2F;IP。所以GET和POST的底层也是TCP&#x2F;IP，也就是说，GET&#x2F;POST都是TCP链接。GET和POST能做的事情是一样一样的。你要给GET加上request body，给POST带上url参数，技术上是完全行的通的。 </p><p>那么，“标准答案”里的那些区别是怎么回事？</p><p><img src="https://img-blog.csdnimg.cn/img_convert/df5fd30cb8a1863a060fc399e0c88116.png"></p><p>在我大万维网世界中，TCP就像汽车，我们用TCP来运输数据，它很可靠，从来不会发生丢件少件的现象。但是如果路上跑的全是看起来一模一样的汽车，那这个世界看起来是一团混乱，送急件的汽车可能被前面满载货物的汽车拦堵在路上，整个交通系统一定会瘫痪。为了避免这种情况发生，交通规则HTTP诞生了。HTTP给汽车运输设定了好几个服务类别，有GET, POST, PUT, DELETE等等，HTTP规定，当执行GET请求的时候，要给汽车贴上GET的标签（设置method为GET），而且要求把传送的数据放在车顶上（url中）以方便记录。如果是POST请求，就要在车上贴上POST的标签，并把货物放在车厢里。当然，你也可以在GET的时候往车厢内偷偷藏点货物，但是这是很不光彩；也可以在POST的时候在车顶上也放一些数据，让人觉得傻乎乎的。HTTP只是个行为准则，而TCP才是GET和POST怎么实现的基本。</p><p>但是，我们只看到HTTP对GET和POST参数的传送渠道（url还是requrest body）提出了要求。“标准答案”里关于参数大小的限制又是从哪来的呢？</p><p><img src="https://img-blog.csdnimg.cn/img_convert/ce6d5b5634113dfbffad8fb1134c4000.png"></p><p>在我大万维网世界中，还有另一个重要的角色：运输公司。不同的浏览器（发起http请求）和服务器（接受http请求）就是不同的运输公司。 虽然理论上，你可以在车顶上无限的堆货物（url中无限加参数）。但是运输公司可不傻，装货和卸货也是有很大成本的，他们会限制单次运输量来控制风险，数据量太大对浏览器和服务器都是很大负担。业界不成文的规定是，（大多数）浏览器通常都会限制url长度在2K个字节，而（大多数）服务器最多处理64K大小的url。超过的部分，恕不处理。如果你用GET服务，在request body偷偷藏了数据，不同服务器的处理方式也是不同的，有些服务器会帮你卸货，读出数据，有些服务器直接忽略，所以，虽然GET可以带request body，也不能保证一定能被接收到哦。</p><p>好了，现在你知道，GET和POST本质上就是TCP链接，并无差别。但是由于HTTP的规定和浏览器&#x2F;服务器的限制，导致他们在应用过程中体现出一些不同。 </p><p>你以为本文就这么结束了？</p><p><img src="https://img-blog.csdnimg.cn/img_convert/a2c6b1302b6b13c6ff1ac06407a29ef7.png"></p><p>我们的大BOSS还等着出场呢。。。</p><p>这位BOSS有多神秘？当你试图在网上找“GET和POST的区别”的时候，那些你会看到的搜索结果里，从没有提到他。他究竟是什么呢。。。</p><p>GET和POST还有一个重大区别，简单的说：</p><p>GET产生一个TCP数据包；POST产生两个TCP数据包。</p><p>长的说：</p><p>对于GET方式的请求，浏览器会把http header和data一并发送出去，服务器响应200（返回数据）；</p><p>而对于POST，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 ok（返回数据）。</p><p>也就是说，GET只需要汽车跑一趟就把货送到了，而POST得跑两趟，第一趟，先去和服务器打个招呼“嗨，我等下要送一批货来，你们打开门迎接我”，然后再回头把货送过去。</p><p>因为POST需要两步，时间上消耗的要多一点，看起来GET比POST更有效。因此Yahoo团队有推荐用GET替换POST来优化网站性能。但这是一个坑！跳入需谨慎。为什么？</p><ol><li><p>GET与POST都有自己的语义，不能随便混用。</p></li><li><p>据研究，在网络环境好的情况下，发一次包的时间和发两次包的时间差别基本可以无视。而在网络环境差的情况下，两次包的TCP在验证数据包完整性上，有非常大的优点。</p></li><li><p>并不是所有浏览器都会在POST中发送两次包，Firefox就只发送一次。</p></li></ol><p>现在，当面试官再问你“GET与POST的区别”的时候，你的内心是不是这样的？</p><p><img src="https://img-blog.csdnimg.cn/img_convert/130321cfeba68d7d3f3724def9a6ce37.png"></p><p>（转自微信公众号WebTechGarden）</p>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义Echarts地理分布图tooltip显示内容</title>
      <link href="/2017/03/08/%E8%87%AA%E5%AE%9A%E4%B9%89Echarts%E5%9C%B0%E7%90%86%E5%88%86%E5%B8%83%E5%9B%BEtooltip%E6%98%BE%E7%A4%BA%E5%86%85%E5%AE%B9/"/>
      <url>/2017/03/08/%E8%87%AA%E5%AE%9A%E4%B9%89Echarts%E5%9C%B0%E7%90%86%E5%88%86%E5%B8%83%E5%9B%BEtooltip%E6%98%BE%E7%A4%BA%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在为某省开发手机版环境监测系统中需要在Echarts tooltip 中展示特定的内容，echarts默认的展示方案并不能满足我们的需求，因此就需要我们进行手动改造。</p></blockquote><p>最终效果图：</p><p><img src="http://img.blog.csdn.net/20170408222240119?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><span id="more"></span><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><p>通过echarts提供的<code>formatter</code>参数自定义我们所需要展示的内容</p><h3 id="具体实现方法"><a href="#具体实现方法" class="headerlink" title="具体实现方法"></a>具体实现方法</h3><p>1、首先在格式化数据的时把我们所需要展示的数据传入到echarts图表中，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for(let m of this.pointerMapData)&#123;</span><br><span class="line">  switch(m.level)&#123;</span><br><span class="line">    case 1:</span><br><span class="line">    dataOne.push(&#123;&#x27;name&#x27;: m.name,&#x27;value&#x27;: [m.lng, m.lat],&#x27;aqi&#x27;: m.aqi&#125;);</span><br><span class="line">    break;</span><br><span class="line">    case 2:</span><br><span class="line">    dataTwo.push(&#123;&#x27;name&#x27;: m.name,&#x27;value&#x27;: [m.lng, m.lat],&#x27;aqi&#x27;: m.aqi&#125;);</span><br><span class="line">    break;</span><br><span class="line">    case 3:</span><br><span class="line">    dataThree.push(&#123;&#x27;name&#x27;: m.name,&#x27;value&#x27;: [m.lng, m.lat],&#x27;aqi&#x27;: m.aqi&#125;);</span><br><span class="line">    ....</span><br></pre></td></tr></table></figure><p>这里，我们在格式化数据时，除了参入了地理分布图所需要的经度纬度之外，额外传入了我们所需要展示的AQI字段</p><p>2、获取传入的数据，从新格式化所需要展示的内容，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 开启工具栏</span><br><span class="line">tooltip: &#123;</span><br><span class="line">    &quot;trigger&quot;: &quot;item&quot;,</span><br><span class="line">    &quot;confine&quot;: true,</span><br><span class="line">    &quot;formatter&quot;: (p)=&gt;&#123;</span><br><span class="line">      // console.log(JSON.stringify(p));</span><br><span class="line">      let dataCon = p.data,</span><br><span class="line">          txtCon = `$&#123;dataCon.name&#125;&lt;/br&gt;AQI：$&#123;dataCon.aqi&#125;`</span><br><span class="line">      return txtCon</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在<code>formatter</code>参数箭头函数中，我们传入了p，通过<code>console</code>打印P值，我们会发现里面data字段里包含了我们传入的数据，接下来就是按照我们的需求格式化内容然后return出去就可以了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yarn包管理工具使用总结</title>
      <link href="/2017/02/07/Yarn%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
      <url>/2017/02/07/Yarn%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<blockquote><p>上年10月份， Facebook 发布了新的 node.js 包管理器 Yarn 用以替代 npm 。由于当时还不是很成熟，所以自己便仅仅只是浅尝辄止。随着时间的推移，Yarn也越来越完善，很多人也已经慢慢在实际项目中开发者投入使用。</p></blockquote><h3 id="yarn和npm对比"><a href="#yarn和npm对比" class="headerlink" title="yarn和npm对比"></a>yarn和npm对比</h3><p>1、yarn.lock 文件</p><p>在 npm 中同样可以使用 npm shrinkwrap 命令来生成一个锁文件，这样在使用 npm install 时会在读取 package.json 前先读取这个文件，就像 Yarn 会先读取yarn.lock 一样。这里的区别是 Yarn 总会自动更新 yarn.lock，而 npm 需要你重新操作。</p><p>2、并行安装</p><p>每当 npm 或 Yarn 需要安装一个包时，它会进行一系列的任务。在 npm 中这些任务是按包的顺序一个个执行，这意味着必须等待上一个包被完整安装才会进入下一个；Yarn 则并行的执行这些任务，提高了性能。</p><span id="more"></span><p>3、清晰的输出</p><p>npm 默认情况下非常冗余，例如使用 npm install 时它会递归列出所有安装的信息；而 Yarn 则一点也不冗余，当可以使用其它命令时，它适当的使用 emojis 表情来减少信息（Windows 除外）</p><h3 id="正式使用"><a href="#正式使用" class="headerlink" title="正式使用"></a>正式使用</h3><p>1、安装yarn</p><p>打开命令行输入并执行下面指令安装yarn包管理工具</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i yarn -g --verbose</span><br></pre></td></tr></table></figure><p>2、更换源地址</p><p>npm官方源虽然在国内没有被墙，但访问速度仍然不敢恭维，因此次建议使用之前切换为淘宝镜像，在yarn安装完毕之后执行如下指令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yarn config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>到此为止我们就可以在项目中像使用npm一样使用yarn了。</p><h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><ul><li>yarn &#x2F; yarn install 等同于npm install 批量安装依赖</li><li>yarn add xxx 等同于 npm install xxx —save 安装指定包到指定位置</li><li>yarn remove xxx 等同于 npm uninstall xxx —save 卸载指定包</li><li>yarn add xxx —dev 等同于 npm install xxx —save-dev</li><li>yarn upgrade 等同于 npm update 升级全部包</li><li>yarn global add xxx 等同于 npm install xxx -g 全局安装指定包</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>在批量安装包文件时，yarn的安装速度远胜于npm，但是相对于老牌npm，yarn目前仍然不是很稳定，偶尔会导致包安装出现问题，大家可以根据个人情况来决定是否使用。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>几种常用加密算法比较</title>
      <link href="/2017/02/02/%E5%87%A0%E7%A7%8D%E5%B8%B8%E7%94%A8%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E6%AF%94%E8%BE%83/"/>
      <url>/2017/02/02/%E5%87%A0%E7%A7%8D%E5%B8%B8%E7%94%A8%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E6%AF%94%E8%BE%83/</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于计算机软件的非法复制，通信的泄密、数据安全受到威胁，解密及盗版问题日益严重，甚至引发国际争端，所以在信息安全技术中，加密技术占有不可替代的位置，因此对信息加密技术和加密手段的研究与开发，受到各国计算机界的重视，发展日新月异。现在我们就几种常用的加密算法给大家比较一下。</p></blockquote><h3 id="DES加密算法"><a href="#DES加密算法" class="headerlink" title="DES加密算法"></a>DES加密算法</h3><p>DES加密算法是一种分组密码，以64位为分组对数据加密，它的密钥长度是56位，加密解密用同一算法。DES加密算法是对密钥进行保密，而公开算法，包括加密和解密算法。这样，只有掌握了和发送方相同密钥的人才能解读由DES加密算法加密的密文数据。因此，破译DES加密算法实际上就是搜索密钥的编码。对于56位长度的密钥来说，如果用穷举法来进行搜索的话，其运算次数为256。</p><p>随着计算机系统能力的不断发展，DES的安全性比它刚出现时会弱得多，然而从非关键性质的实际出发，仍可以认为它是足够的。不过，DES现在仅用于旧系统的鉴定，而更多地选择新的加密标准。</p><span id="more"></span><h3 id="AES加密算法"><a href="#AES加密算法" class="headerlink" title="AES加密算法"></a>AES加密算法</h3><p>AES加密算法是密码学中的高级加密标准，该加密算法采用对称分组密码体制，密钥长度的最少支持为128、192、256，分组长度128位，算法应易于各种硬件和软件实现。这种加密算法是美国联邦政府采用的区块加密标准，这个标准用来替代原先的DES，已经被多方分析且广为全世界所使用。</p><p>AES加密算法被设计为支持128／192／256位（&#x2F;32&#x3D;nb)数据块大小（即分组长度）；支持128／192／256位（&#x2F;32&#x3D;nk)密码长度，，在10进制里，对应34×1038、62×1057、1.1×1077个密钥。</p><h3 id="RSA加密算法"><a href="#RSA加密算法" class="headerlink" title="RSA加密算法"></a>RSA加密算法</h3><p>RSA加密算法是目前最有影响力的公钥加密算法，并且被普遍认为是目前最优秀的公钥方案之一。RSA是第一个能同时用于加密和数宇签名的算法，它能够抵抗到目前为止已知的所有密码攻击，已被ISO推荐为公钥数据加密标准。RSA加密算法基于一个十分简单的数论事实：将两个大素数相乘十分容易，但那时想要，但那时想要对其乘积进行因式分解却极其困难，因此可以将乘积公开作为加密密钥。</p><h3 id="Base64加密算法"><a href="#Base64加密算法" class="headerlink" title="Base64加密算法"></a>Base64加密算法</h3><p>Base64加密算法是网络上最常见的用于传输8bit字节代码的编码方式之一，Base64编码可用于在HTTP环境下传递较长的标识信息。例如，在JAVAPERSISTENCE系统HIBEMATE中，采用了Base64来将一个较长的唯一标识符编码为一个字符串，用作HTTP表单和HTTPGETURL中的参数。在其他应用程序中，也常常需要把二进制数据编码为适合放在URL（包括隐藏表单域）中的形式。此时，采用Base64编码不仅比较简短，同时也具有不可读性，即所编码的数据不会被人用肉眼所直接看到。</p><h3 id="MD5加密算法"><a href="#MD5加密算法" class="headerlink" title="MD5加密算法"></a>MD5加密算法</h3><p>MD5为计算机安全领域广泛使用的一种散列函数，用以提供消息的完整性保护。对MD5加密算法简要的叙述可以为：MD5以512位分组来处理输入的信息，且每一分组又被划分为16个32位子分组，经过了一系列的处理后，算法的输出由四个32位分组组成，将这四个32位分组级联后将生成—个128位散列值。</p><p>MD5被广泛用于各种软件的密码认证和钥匙识别上。MD5用的是哈希函数，它的典型应用是对一段信息产生信息摘要，以防止被篡改。MD5的典型应用是对一段Message产生fingerprin指纹，以防止被“篡改”。如果再有—个第三方的认证机构，用MD5还可以防止文件作者的“抵赖”，这就是所谓的数字签名应用。MD5还广泛用于操作系统的登陆认证上，如UNIX、各类BSD系统登录密码、数字签名等诸多方。</p><h3 id="SHA1加密算法"><a href="#SHA1加密算法" class="headerlink" title="SHA1加密算法"></a>SHA1加密算法</h3><p>SHA1是和MD5一样流行的消息摘要算法。SHA加密算法模仿MD4加密算法。SHA1设计为和数字签名算法（ＤＳＡ）一起使用。</p><p>SHA1主要适用于数字签名标准里面定义的数字签名算法。对于长度小于2“64位的消息，SHA1会产生一个160位的消息摘要。当接收到消息的时候，这个消息摘要可以用来验证数据的完整性。在传输的过程中，数据很可能会发生变化，那么这时候就会产生不同的消息摘要。SHA1不可以从消息摘要中复原信息，而两个不同的消息不会产生同样的消息摘要。这样，SHA1就可以验证数据的完整性，所以说SHA1是为了保证文件完整性的技术。</p><p>SHA1加密算法可以采用不超过264位的数据输入，并产生一个160位的摘要。输入被划分为512位的块，并单独处理。160位缓冲器用来保存散列函数的中间和最后结果。缓冲器可以由5个32位寄存器（A、B、C、D和E）来表示。SHA1是一种比MD5的安全性强的算法，理论上，凡是采取“消息摘要”方式的数字验证算法都是有“碰撞”的——也就是两个不同的东西算出的消息摘要相同，互通作弊图就是如此。但是安全性高的算法要找到指定数据的“碰撞”很困难，而利用公式来计算“碰撞”就更困难一目前为止通用安全算法中仅有MD5被破解。</p><blockquote><p>加密算法是密码技术的核心，以上这些加密算法是常用的加密算法，而这些算法有些已经遭到破译，有些安全度不高，有些强度不明，有些待进—步分析，有些需要深入研究，而神秘的加密算法世界，又会有新的成员加入，期待更安全的算法诞生。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Encrypt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在个人博客中插入Jsbin或者jsfiddle代码</title>
      <link href="/2017/01/23/%E5%A6%82%E4%BD%95%E5%9C%A8%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5Jsbin%E6%88%96%E8%80%85jsfiddle%E4%BB%A3%E7%A0%81/"/>
      <url>/2017/01/23/%E5%A6%82%E4%BD%95%E5%9C%A8%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5Jsbin%E6%88%96%E8%80%85jsfiddle%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p> 也许在大家浏览大牛们博客时经常会看到在他们的个人博客经常会有比较炫酷的在线代码演示。例如：</p><iframe width="100%" height="500" src="//jsfiddle.net/Aflier/pehfos3e/embedded/result,html,css" allowfullscreen="allowfullscreen" frameborder="0"></iframe><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><p>通过<code>iframe</code>创建一个内联框架来实现上面效果</p><h3 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h3><p>1、进入<a href="https://jsbin.com/">jsbin</a>或者<a href="https://jsfiddle.net/">jsfiddle官网</a>，注册并登录。</p><p>2、编写自己所需要分享的代码，如下图：</p><p><img src="http://img.blog.csdn.net/20170408231549771?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>3、点击<strong>Embed</strong>按钮 并复制<code>embed code</code>代码</p><p><img src="http://img.blog.csdn.net/20170408231808831?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>4、把复制的代码插入到个人博客中：</p><p><img src="http://img.blog.csdn.net/20170408231959894?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>如此一来我们便可以看到本文开始时代码演示的效果了。</p><h3 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h3><p>最后的result,js,html,css为iframe中tab的显示的顺序，或者你不想显示html,css,你就可以直接写成</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://jsfiddle.net/Aflier/pehfos3e/embedded/result,</span><br></pre></td></tr></table></figure><blockquote><p>实现方法很简单，但对于一个喜欢用MarkDown写博客的人而言却是必不可少的一个小技能，建议大家在自己的博客中也可以尝试一下。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cookie、session、sessionid 与jsessionid</title>
      <link href="/2017/01/23/cookie%E3%80%81session%E3%80%81sessionid%20%E4%B8%8Ejsessionid/"/>
      <url>/2017/01/23/cookie%E3%80%81session%E3%80%81sessionid%20%E4%B8%8Ejsessionid/</url>
      
        <content type="html"><![CDATA[<blockquote><p>cookie、session、sessionid 与jsessionid，要想明白他们之间的关系，下面来看个有趣的场景来帮你理解。</p></blockquote><p>我们都知道银行，银行的收柜台每天要接待客户存款&#x2F;取款业务，可以有几种方案：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">凭借柜台职员的记忆，由收柜台职员来为每位顾客办理存款/取款业务，单凭职员的记忆力，要记到每位顾客的相貌，并迅速这个顾客当前的存款以及存取的次数，每次存取的金额是多少。-----------这种方式表示协议本身支持状态。</span><br></pre></td></tr></table></figure><p>1、使用存折的方式，然后柜台职员就把每个顾客的存款&#x2F;取款的信息保存在这张折子，然后交给顾客保管，当顾客来存款&#x2F;取款时，只要拿出存折，职员查看存折就对当前这位顾客的存款&#x2F;取款信息一目了然。当然，你马上会想到，顾客修改这个信息怎么办？我们也有措施对每次存款&#x2F;取款记录后面盖章。无盖章的就是假冒信息。但如果顾客是真的要伪造，当然印章也是可以伪造的。————-这种方式就是在客户端端保持状态。</p><p> 2、使用银行卡的方式，发给每位银行用户一张银行卡，银行卡上有一个唯一的卡号，没有其它任何信息，当顾客来存款&#x2F;取款时，拿出银行卡，银行把卡号输入的电脑，很快就显示当前用户的存&#x2F;取款记录。这种方式的安全性就会有很大的提高。用户想要手脚只有攻破银行的服务器来修改自己的存&#x2F;取款信息，这样做难度会很大。———这种方式就是服务器端保持状态。</p><span id="more"></span><h3 id="Cookie-与session的产生过程"><a href="#Cookie-与session的产生过程" class="headerlink" title="Cookie 与session的产生过程"></a>Cookie 与session的产生过程</h3><p>　　我们都知道HTTP协议本身是无状态的，客户只需要简单的向服务器来发送请求下载某些文件，客户端向服务器端发送的每次请求都是独立的。对于当前的web应用，HTTP的“无状态”，导致许多应用都不得不花费大量的精力来记录用户的操作步骤。就像我们上面介绍的第一种情况，银行职员要花费大量的精力来记忆每一位用户的存&#x2F;取款记录。</p><p>　　程序员很快发现，如果能够提供一些按需生成的动太信息，会使web的交互能力大大增强。程序员一方面在HTML中添加表单、脚本、DOM等客户端行为，来增加web应用与客户端的交互性。另一方面在服务器端测出现了CGI规范以响应客户端的动态请求，作为传输载体的HTTP协议添加了文件上载、cookie 等特性。那cookie的原理与我们上面介绍的使用存折记录用户应为的方式是一样一样的。</p><p>　　通过前面的例子我们已经发现，通过cookie的方式存储信息，可能会存在一点定的安全性，因为所有的信息都是写在客户端的，客户可能会对这些信息进行修改或清除。然后就又出现session的方式用于保存用户行为，这种方式的原理与前面介绍银行卡的方式是一样的。</p><p>　　具体来说cookie机制采用的是在客户端保持状态的方案，而session机制采用的是在服务器端保持状态的方案。同时我们也看到，由于采用服务器端保持状态的方案在客户端也需要保存一个标识，所以session机制可能需要借助于cookie机制来达到保存标识的目的，但实际上它还有其他选择。</p><h3 id="cookie与session的机制与原理"><a href="#cookie与session的机制与原理" class="headerlink" title="cookie与session的机制与原理"></a>cookie与session的机制与原理</h3><ul><li><p>cookie机制。正统的cookie分发是通过扩展HTTP协议来实现的，服务器通过在HTTP的响应头中加上一行特殊的指示以提示浏览器按照指示生成相应的cookie。然而纯粹的客户端脚本如JavaScript或者VBScript也可以生成cookie。而cookie的使用是由浏览器按照一定的原则在后台自动发送给服务器的。浏览器检查所有存储的cookie，如果某个cookie所声明的作用范围大于等于将要请求的资源所在的位置，则把该cookie附在请求资源的HTTP请求头上发送给服务器。<br>cookie的内容主要包括：名字，值，过期时间，路径和域。路径与域一起构成cookie的作用范围。若不设置过期时间，则表示这个cookie的生命期为浏览器会话期间，关闭浏览器窗口，cookie就消失。这种生命期为浏览器会话期的cookie被称为会话cookie。会话cookie一般不存储在硬盘上而是保存在内存里，当然这种行为并不是规范规定的。若设置了过期时间，浏览器就会把cookie保存到硬盘上，关闭后再次打开浏览器，这些cookie仍然有效直到超过设定的过期时间。存储在硬盘上的cookie可以在不同的浏览器进程间共享，比如两个IE窗口。而对于保存在内存里的cookie，不同的浏览器有不同的处理方式。 </p></li><li><p>session机制。session机制是一种服务器端的机制，服务器使用一种类似于散列表的结构（也可能就是使用散列表）来保存信息。 </p></li><li><p>当程序需要为某个客户端的请求创建一个session时，服务器首先检查这个客户端的请求里是否已包含了一个session标识————称为session id，如果已包含则说明以前已经为此客户端创建过session，服务器就按照session id把这个session检索出来使用（检索不到，会新建一个），如果客户端请求不包含session id，则为此客户端创建一个session并且生成一个与此session相关联的session id，session id的值应该是一个既不会重复，又不容易被找到规律以仿造的字符串，这个session id将被在本次响应中返回给客户端保存。<br>保存这个session id的方式可以采用cookie，这样在交互过程中浏览器可以自动的按照规则把这个标识发挥给服务器。一般这个cookie的名字都是类似于SEEESIONID。但cookie可以被人为的禁止，则必须有其他机制以便在cookie被禁止时仍然能够把session id传递回服务器。<br>经常被使用的一种技术叫做URL重写，就是把session id直接附加在URL路径的后面。还有一种技术叫做表单隐藏字段。就是服务器会自动修改表单，添加一个隐藏字段，以便在表单提交时能够把session id传递回服务器。</p></li></ul><h3 id="Jsessionid"><a href="#Jsessionid" class="headerlink" title="Jsessionid"></a>Jsessionid</h3><p>Jsessionid只是tomcat的对sessionid的叫法，其实就是sessionid；在其它的容器也许就不叫jsessionid了。</p><p>——————-最新更新——–</p><p> Terry_Huang  回复： </p><p>　　给你举个更生动的例子，以前大学的时候，经常去大卡司去喝奶茶，每喝一杯，都可以得到一个印花（第一次喝的时候他会给你个积分卡片)，集齐6个印花之后，就可以免费获得一杯奶茶。这样子，印花的信息是保存在客户的积分卡上，你如果不怀好意的话，就自己搞几个神似的印花去骗奶茶喝吧。哈哈，这样子是不是更符合在客户端端保持状态。而拿银行卡去银行取钱，我们的卡只需要保存一个卡号，更多的信息是保存在服务器中，这样也比较符合服务器端保持状态。希望能帮到你。</p><pre><code>可能是我的描述不够贴切，积分卡和存折是类似的，用户的存取信息是保存在存折上的，存折又是在客户手里（客户端）可能现在很少有人用存折了，或存折已经被银行取消掉了。</code></pre><blockquote><p>本文转载自<strong>虫师</strong>博主的文章，原文链接：<a href="http://www.cnblogs.com/fnng/archive/2012/08/14/2637279.html">http://www.cnblogs.com/fnng/archive/2012/08/14/2637279.html</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在windows上创建文件名以“.”开头的文件</title>
      <link href="/2017/01/08/%E5%9C%A8windows%E4%B8%8A%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%90%8D%E4%BB%A5%E2%80%9C.%E2%80%9D%E5%BC%80%E5%A4%B4%E7%9A%84%E6%96%87%E4%BB%B6/"/>
      <url>/2017/01/08/%E5%9C%A8windows%E4%B8%8A%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%90%8D%E4%BB%A5%E2%80%9C.%E2%80%9D%E5%BC%80%E5%A4%B4%E7%9A%84%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在实际项目开发中，我们会经常遇到以”.”开头的配置文件。例如我们如果需要通过配置文件给<code>npm</code>更换源就需要更改<code>.npmrc</code>文件，然而还有很多友友还不清楚如何创建一个类似的文件，今天就和大家分享下这个小技巧。</p></blockquote><p><img src="http://img.blog.csdn.net/20170408171210211?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><span id="more"></span><h3 id="错误方法"><a href="#错误方法" class="headerlink" title="错误方法"></a>错误方法</h3><p>如果在windows平台上，右键选择“新建”-&gt;“文本文档”，给取名”.npmignore”，会发现报错“必须键入文件名”，如下图。</p><p><img src="http://img.blog.csdn.net/20170408171635508?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h3 id="正确方法"><a href="#正确方法" class="headerlink" title="正确方法"></a>正确方法</h3><p><strong>方法一</strong></p><p>新建文件时，在文件名后面再添加一个”.”，文件名部分输入：”.npmignore.”，就可以成功完成创建。</p><p><strong>方法二</strong></p><p>打开命令行，在命令行输入：<code>echo hi &gt; .npmignore</code>并执行，文件便可以创建成功。</p><p><img src="http://img.blog.csdn.net/20170408172510935?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h3 id="相关拓展"><a href="#相关拓展" class="headerlink" title="相关拓展"></a>相关拓展</h3><blockquote><p>echo是window系统中大家比较熟悉的一条DOS命令，可以通过此命令创建或者写入文件内容。</p><p>格式：echo 文件内容＞文件名  </p></blockquote><blockquote><p>例如：echo hi &gt; .npmignore的命令意思就是新建<code>.npmignore</code>文件并写入内容hi。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Window </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cannot read property &#39;name&#39; of undefined @ injectScripts.min.js:1</title>
      <link href="/2017/01/06/Cannot%20read%20property%20&#39;name&#39;%20ofundefinedinjectScripts.min.js1/"/>
      <url>/2017/01/06/Cannot%20read%20property%20&#39;name&#39;%20ofundefinedinjectScripts.min.js1/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近在准备重构项目的时候无意间发现页面有一处报错：报错代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">injectScripts.min.js:1 Uncaught TypeError: Cannot read property &#x27;name&#x27; of undefined</span><br><span class="line">    at t.e._onMessage (injectScripts.min.js:1)</span><br><span class="line">    at t._onMessage (injectScripts.min.js:1)</span><br><span class="line">    at injectScripts.min.js:1</span><br><span class="line">e._onMessage @ injectScripts.min.js:1</span><br><span class="line">t._onMessage @ injectScripts.min.js:1</span><br><span class="line">(anonymous) @ injectScripts.min.js:1</span><br></pre></td></tr></table></figure><span id="more"></span><p><img src="http://img.blog.csdn.net/20161219223515051?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="erro"></p><p>虽然这处报错并不影响自己继续写项目，但是每次调试的时候都能看到这条红灿灿的报错消息，身为一个合格的强迫症患者真的已经无法容忍它的存在。</p><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p>根据报错消息我们可以明显的看到，问题出现在<code>injectScripts.min.js</code>文件中，坑爹的是我自己在项目组并没有引入这个文件；然后我怀疑是不是在安装的第三方依赖包引用了该文件，然而通过对整个项目进行检索也并没有找到该文件存在，最后只能分析<code>html</code>代码结构，功夫不负有心人，终于在代码<code>head</code>中发现了下面这串代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script src=&quot;chrome-extension://oofgjnalpjodkfmfomihdlchiiacnman/injectScripts.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161219224641475?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>由于<code>chrome-extension</code>是<code>Chrome</code>的扩展管理页，因此我们断定<code>injectScript.min.js</code>文件来源于<code>Chrome</code>第三方插件库，下面的问题就好解决了。</p><h3 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h3><p>在<code>console</code>中双击打开<code>injectScripts.min.js</code>文件，然后再文件中我们发现<code>egret</code>字样，因此我们可以断定该原因是由于自己安装的<code>egret</code>游戏引擎的<code>debug</code>工具导致的。</p><p>然后我们打开谷歌扩展程序管理页面，然后关闭<code>egret</code>插件就可以解决当前页面报错的问题了。</p><p><img src="http://img.blog.csdn.net/20161220085331564?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="err"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>js深拷贝和浅拷贝</title>
      <link href="/2016/12/14/js%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%B5%85%E6%8B%B7%E8%B4%9D/"/>
      <url>/2016/12/14/js%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%B5%85%E6%8B%B7%E8%B4%9D/</url>
      
        <content type="html"><![CDATA[<h2 id="一、数组的深浅拷贝"><a href="#一、数组的深浅拷贝" class="headerlink" title="一、数组的深浅拷贝"></a>一、数组的深浅拷贝</h2><p>在使用JavaScript对数组进行操作的时候，我们经常需要将数组进行备份，事实证明如果只是简单的将它赋予其他变量，那么我们只要更改其中的任何一个，然后其他的也会跟着改变，这就导致了问题的发生。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var arr = [&quot;One&quot;,&quot;Two&quot;,&quot;Three&quot;];</span><br><span class="line"></span><br><span class="line">var arrto = arr;</span><br><span class="line">arrto[1] = &quot;test&quot;;</span><br><span class="line">document.writeln(&quot;数组的原始值：&quot; + arr + &quot;&lt;br /&gt;&quot;);//Export:数组的原始值：One,test,Three</span><br><span class="line">document.writeln(&quot;数组的新值：&quot; + arrto + &quot;&lt;br /&gt;&quot;);//Export:数组的新值：One,test,Three</span><br></pre></td></tr></table></figure><p>像上面的这种直接赋值的方式就是浅拷贝，很多时候，这样并不是我们想要得到的结果，其实我们想要的是arr的值不变，不是吗？ </p><span id="more"></span><h3 id="方法一：js的slice函数"><a href="#方法一：js的slice函数" class="headerlink" title="方法一：js的slice函数"></a>方法一：js的slice函数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对于array对象的slice函数，</span><br><span class="line">返回一个数组的一段。（仍为数组）</span><br><span class="line">arrayObj.slice(start, [end])</span><br><span class="line">参数</span><br><span class="line">arrayObj</span><br><span class="line">必选项。一个 Array 对象。</span><br><span class="line">start</span><br><span class="line">必选项。arrayObj 中所指定的部分的开始元素是从零开始计算的下标。</span><br><span class="line">end</span><br><span class="line">可选项。arrayObj 中所指定的部分的结束元素是从零开始计算的下标。</span><br><span class="line">说明</span><br><span class="line">slice 方法返回一个 Array 对象，其中包含了 arrayObj 的指定部分。</span><br><span class="line">slice 方法一直复制到 end 所指定的元素，但是不包括该元素。如果 start 为负，将它作为 length + start处理，此处 length 为数组的长度。如果 end 为负，就将它作为 length + end 处理，此处 length 为数组的长度。如果省略 end ，那么 slice 方法将一直复制到 arrayObj 的结尾。如果 end 出现在 start 之前，不复制任何元素到新数组中。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var arr = [&quot;One&quot;,&quot;Two&quot;,&quot;Three&quot;];</span><br><span class="line"></span><br><span class="line">var arrtoo = arr.slice(0);</span><br><span class="line">arrtoo[1] = &quot;set Map&quot;;</span><br><span class="line">document.writeln(&quot;数组的原始值：&quot; + arr + &quot;&lt;br /&gt;&quot;);//Export:数组的原始值：One,Two,Three</span><br><span class="line">document.writeln(&quot;数组的新值：&quot; + arrtoo + &quot;&lt;br /&gt;&quot;);//Export:数组的新值：One,set Map,Three</span><br></pre></td></tr></table></figure><h3 id="方法二：js的concat方法"><a href="#方法二：js的concat方法" class="headerlink" title="方法二：js的concat方法"></a>方法二：js的concat方法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">concat() 方法用于连接两个或多个数组。</span><br><span class="line">该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。</span><br><span class="line">语法</span><br><span class="line">arrayObject.concat(arrayX,arrayX,......,arrayX)</span><br><span class="line">说明</span><br><span class="line">返回一个新的数组。该数组是通过把所有 arrayX 参数添加到 arrayObject 中生成的。如果要进行 concat() 操作的参数是数组，那么添加的是数组中的元素，而不是数组。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var arr = [&quot;One&quot;,&quot;Two&quot;,&quot;Three&quot;];</span><br><span class="line"></span><br><span class="line">var arrtooo = arr.concat();</span><br><span class="line">arrtooo[1] = &quot;set Map To&quot;;</span><br><span class="line">document.writeln(&quot;数组的原始值：&quot; + arr + &quot;&lt;br /&gt;&quot;);//Export:数组的原始值：One,Two,Three</span><br><span class="line">document.writeln(&quot;数组的新值：&quot; + arrtooo + &quot;&lt;br /&gt;&quot;);//Export:数组的新值：One,set Map To,Three</span><br></pre></td></tr></table></figure><h2 id="二、对象的深浅拷贝"><a href="#二、对象的深浅拷贝" class="headerlink" title="二、对象的深浅拷贝"></a>二、对象的深浅拷贝</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var a=&#123;name:&#x27;yy&#x27;,age:26&#125;;</span><br><span class="line">var b=new Object();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b.name=a.name;</span><br><span class="line">b.age=a.age;</span><br><span class="line">a.name=&#x27;xx&#x27;;</span><br><span class="line">console.log(b);//Object &#123; name=&quot;yy&quot;, age=26&#125;</span><br><span class="line">console.log(a);//Object &#123; name=&quot;xx&quot;, age=26&#125;</span><br></pre></td></tr></table></figure><p>就是把对象的属性遍历一遍，赋给一个新的对象。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var deepCopy= function(source) &#123; </span><br><span class="line">var result=&#123;&#125;;</span><br><span class="line">for (var key in source) &#123;</span><br><span class="line">      result[key] = typeof source[key]===’object’? deepCoyp(source[key]): source[key];</span><br><span class="line">   &#125; </span><br><span class="line">   return result; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>声明：本文转载于易成波友友的博客，原文链接：<a href="http://www.cnblogs.com/yichengbo/archive/2014/07/10/3835882.html">http://www.cnblogs.com/yichengbo/archive/2014/07/10/3835882.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅析HTMl5中的Web Storage：sessionStorage和localStorage</title>
      <link href="/2016/12/13/%E6%B5%85%E6%9E%90HTMl5%E4%B8%AD%E7%9A%84Web%20Storage%EF%BC%9AsessionStorage%E5%92%8ClocalStorage/"/>
      <url>/2016/12/13/%E6%B5%85%E6%9E%90HTMl5%E4%B8%AD%E7%9A%84Web%20Storage%EF%BC%9AsessionStorage%E5%92%8ClocalStorage/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p> <code>html5</code>中的<code>Web Storage</code>包括了两种存储方式：<code>sessionStorage</code>和<code>localStorage</code>，他们均只能存储字符串类型的对象，并且操作方式相同。</p><p>其中，<code>sessionStorage</code>数据的存储仅特定于某个会话中这些数据，只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁；相反，<code>localStorage</code>生命周期是永久，除非主动清除localStorage信息，否则将会一直存在。</p><p>在实际项目使用过程中，我们主要会使用<code>localStroage</code>.</p><span id="more"></span><h3 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h3><ul><li>localStorage存储方法<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">localStorage.key = &#x27;value&#x27;</span><br><span class="line">localStorage[key] = &#x27;value&#x27;</span><br><span class="line">localStorage.setItem(&#x27;key&#x27;,&#x27;value&#x27;);//三种操作方式皆可</span><br></pre></td></tr></table></figure></li><li>localStorage获取值方法</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let value = localStorage.key</span><br><span class="line">let value = localStorage[key]</span><br><span class="line">let value = localStorage.getItem(&#x27;key&#x27;);//三种操作方式皆可</span><br></pre></td></tr></table></figure><ul><li>localStorage清值方法</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">localStorage.removeItem(&#x27;key&#x27;);//移除值</span><br><span class="line">localStorage.key＝&#x27;&#x27;;//设置值为空</span><br></pre></td></tr></table></figure><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><p>由于<code>sessionStorage</code>和<code>localStorage</code>，他们均只能存储字符串类型的对象，如果需要存储对象，则需要使用<code>JSON.stringify()</code>方法先将其转换为字符串类型，然后再进行存储；如果需要将对象取出并使用，则需要使用<code>JSON.parse()</code>方法将取出的值从新转化为对象。</p><p>例如我们存储一个JSON：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let Test = &#123;message:hello&#125;</span><br><span class="line">localStorage.setItem(&#x27;test&#x27;,JSON.stringify(Test))//存储时先将其转化为字符串然后进行存储</span><br><span class="line">Test = JSON.parse(localStorage.getItem(&#x27;test&#x27;))//取值时需要先将其取出然后转化为对象</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Html5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Html5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署问题：spawn git ENOENT</title>
      <link href="/2016/12/13/hexo%E9%83%A8%E7%BD%B2%E9%97%AE%E9%A2%98%EF%BC%9Aspawn%20git%20ENOENT/"/>
      <url>/2016/12/13/hexo%E9%83%A8%E7%BD%B2%E9%97%AE%E9%A2%98%EF%BC%9Aspawn%20git%20ENOENT/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>今天写完博客准备部署到个人站点上的时候，谁知道竟然部署失败，接下来我们就来看一下如何解决这类问题。</p></blockquote><p><img src="http://oft2csb8a.bkt.clouddn.com/hexo-01.jpg" alt="hexo"></p><span id="more"></span><h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3><p>当前问题是由于<code>Git</code>环境变量未设置导致，因此我们只需要从新设置环境变量或者在<code>git brash</code>中执行操作就可以解决问题了。</p><h3 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>在博客项目根目录中右键打开<code>git brash</code>命令行工具，然后执行部署操作</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><img src="http://oft2csb8a.bkt.clouddn.com/hexo-02.png" alt="hexo"></p><p>部署成功！</p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>打开命令行工具，通过<code>set</code>指令设置Git环境变量，执行下面指令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set  Path=F:\Program Files\GIT\bin;...//路径为Git安装路径</span><br></pre></td></tr></table></figure><p>环境变量设置成功后，继续执行部署指令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><img src="http://oft2csb8a.bkt.clouddn.com/hexo-03.jpg" alt="hexo"></p><p>部署成功！</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Window10系统下Node安装报错问题</title>
      <link href="/2016/12/12/%E8%A7%A3%E5%86%B3Window10%E7%B3%BB%E7%BB%9F%E4%B8%8BNode%E5%AE%89%E8%A3%85%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/"/>
      <url>/2016/12/12/%E8%A7%A3%E5%86%B3Window10%E7%B3%BB%E7%BB%9F%E4%B8%8BNode%E5%AE%89%E8%A3%85%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>今天电脑重装了win10系统，在安装Node的过程中出现了下面的问题，下面就和大家分享下用来解决这种问题的小方法。</p></blockquote><p><img src="http://img.blog.csdn.net/20161212225541693?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="erro"></p><span id="more"></span><h3 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h3><p>随便问下度娘我们就可以知道，导致报错的原因是由于权限的关系，因此我们只需要使用<strong>管理员</strong>权限来运行当前Node安装包就可以解决报错问题了。</p><h3 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h3><p>使用<strong>管理员权限</strong>打开命令行工具并且<code>cd</code>到node安装包的项目文件夹下执行下面代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msiexec / package node-v6.9.1-x64.msi</span><br></pre></td></tr></table></figure><p>运行指令之后接下来就会自动弹出安装界面，然后我们只需要按照提示完成安装就可以了。</p><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><p>这里使用的<code>msiexec</code>命令是对 Windows Installer 进行安装、修改和执行操作的方法。</p><blockquote><p>MS-DOS命令语法：msiexec &#x2F;i {package|ProductCode}</p></blockquote><blockquote><p>&#x2F;i：安装或配置产品。</p></blockquote><blockquote><p>package：指定 Windows 安装程序包文件的名称。</p></blockquote><blockquote><p>ProductCode：指定 Windows 安装程序包的全球单一标识符 (GUID)。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于VUE开发项目的那点事（一）</title>
      <link href="/2016/12/10/%E5%9F%BA%E4%BA%8EVUE%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2016/12/10/%E5%9F%BA%E4%BA%8EVUE%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>最近由于公司需要，需要写一个相对来说比较大型的后台管理系统。为了保证管理系统操作体验较为舒适并且项目后期益于维护，最后决定基于VUE全家桶来开发一个高度组件化的单页SPA应用。</p></blockquote><h3 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h3><ul><li><p>vue：进行数据绑定以及开发组件</p></li><li><p>vue-router： 处理页面路由</p></li><li><p>vuex： 处理各组件间的通讯</p></li><li><p>vue-resource：处理HTTP请求</p></li><li><p>element-ui：使用UI框架中部分UI组件进行快速开发</p></li></ul><span id="more"></span><h3 id="项目创建"><a href="#项目创建" class="headerlink" title="项目创建"></a>项目创建</h3><p>首先我们需要保证自己电脑安装有<code>Node</code>运行环境</p><p>打开命令行工具，输入下面指令进行全局安装<code>vue-cli</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i vue-cli -g --verbose</span><br></pre></td></tr></table></figure><p>  提示：NPM站点虽然说在国内没有被墙，但是使用NPM安装第三方依赖包的时候仍然速度慢的经常让人抓狂，这里我们可以通过使用淘宝镜像来提高我们的下载速度，具体方法可以参考我以前写的这篇文章：<a href="http://blog.csdn.net/zhu1500527791/article/details/53383997">如何提高NPM拉取第三方依赖包的速度</a></p><p><code>vue-cli</code>安装完毕之后，输入下面指令初始化我们的项目。例如我们需要在D盘<code>WorkCode</code>文件夹下创建一个名为<code>scaffold</code>的项目</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd D:\workCode</span><br><span class="line">vue init webpack scaffold </span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161211173949814?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="vue"></p><p> 这时会需要我们填写一些项目基础信息，在这里我们可以不用管它，只要一路按<code>Enter</code>键就可以了。下面是我们创建好的项目文件目录</p><p> <img src="http://img.blog.csdn.net/20161211174843380?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="vue"></p><p>项目创建完成之后<code>cd</code>到我们创建好的项目文件根目录下,安装项目所需要的各种第三方依赖包</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd D:\workCode\scaffold</span><br><span class="line">npm i  --verbose</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161211175142709?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="vue"></p><p> 由于需要安装的依赖比较多，所以安装时间可以稍微有点长，耐心等待下就好。如果中途安装失败，报错内容如下的话：</p><p><img src="http://img.blog.csdn.net/20161211220453292?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="vue"></p><p>出现这中情况是或许因为文件<code>phantomjs-2.1.1-windows.zip</code>过大，同时网络不是特别好的原因导致文件下载失败，其实解决办法很简单，就是复制下载路径并且粘贴到浏览器中，通过浏览器下载文件，具体情况如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PhantomJS not found on PATH</span><br><span class="line">Downloading https://github.com/Medium/phantomjs/releases/download/v2.1.1/phantomjs-2.1.1-windows.zip//这里的路径就是文件的下载路径</span><br><span class="line">Saving to C:\Users\Administrator\AppData\Local\Temp\phantomjs\phantomjs-2.1.1-windows.zip//下载好的文件放到上面这个指定的目录下面</span><br><span class="line">Receiving...</span><br><span class="line">  [----------------------------------------] 0%</span><br><span class="line">Error making request.</span><br><span class="line">Error: read ECONNRESET</span><br><span class="line">    at exports._errnoException (util.js:1026:11)</span><br><span class="line">    at TLSWrap.onread (net.js:569:26)</span><br><span class="line"></span><br><span class="line">Please report this full log at https://github.com/Medium/phantomjs</span><br></pre></td></tr></table></figure><p>文件通过浏览器下载完毕并且放到指定文件夹之后再次执行<code>npm i --verbose</code>就可以完美解决问题了。</p><p>三方依赖晚装完毕之后在命令行工具中执行下面指令启动项目：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>如果浏览器中打开下面这种页面时，就说明我们的第一步创建初始项目的任务就完成了。</p><p><img src="http://img.blog.csdn.net/20161211221554861?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="vue"> </p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git:代码冲突常见解决方法</title>
      <link href="/2016/12/03/Git%E4%BB%A3%E7%A0%81%E5%86%B2%E7%AA%81%E5%B8%B8%E8%A7%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2016/12/03/Git%E4%BB%A3%E7%A0%81%E5%86%B2%E7%AA%81%E5%B8%B8%E8%A7%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>如果系统中有一些配置文件在服务器上做了配置修改,然后后续开发又新添加一些配置项的时候,</p><p>在发布这个配置文件的时候,会发生代码冲突:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error: Your local changes to the following files would be overwritten by merge:</span><br><span class="line">        protected/config/main.php</span><br><span class="line">Please, commit your changes or stash them before you can merge.</span><br></pre></td></tr></table></figure><p>如果希望保留生产服务器上所做的改动,仅仅并入新配置项, 处理方法如下:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git stash </span><br><span class="line">git pull </span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p>然后可以使用git diff -w +文件名 来确认代码自动合并的情况.</p><span id="more"></span><p>反过来,如果希望用代码库中的文件完全覆盖本地工作版本. 方法如下:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git reset --hard </span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><p>其中git reset是针对版本,如果想针对文件回退本地修改,使用<code>git checkout HEAD file/to/restore</code>  </p><blockquote><p>本文转载自<a href="http://blog.sina.com.cn/s/blog_600e56a60101esqq.html">http://blog.sina.com.cn/s/blog_600e56a60101esqq.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决在Vue项目中时常因为代码缩进导致页面报错的问题</title>
      <link href="/2016/12/03/%E8%A7%A3%E5%86%B3%E5%9C%A8Vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%97%B6%E5%B8%B8%E5%9B%A0%E4%B8%BA%E4%BB%A3%E7%A0%81%E7%BC%A9%E8%BF%9B%E5%AF%BC%E8%87%B4%E9%A1%B5%E9%9D%A2%E6%8A%A5%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2016/12/03/%E8%A7%A3%E5%86%B3%E5%9C%A8Vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%97%B6%E5%B8%B8%E5%9B%A0%E4%B8%BA%E4%BB%A3%E7%A0%81%E7%BC%A9%E8%BF%9B%E5%AF%BC%E8%87%B4%E9%A1%B5%E9%9D%A2%E6%8A%A5%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>如果我们初次使用<code>vue-cli</code>来构建单页SPA应用，在撸代码的过程中有可能会遇到这种因为代码缩进导致</p><p>页面报错的问题，导致我们烦不胜烦。接下来我们就来看一看如何解决这个小问题。。。</p><p><img src="http://img.blog.csdn.net/20161203154240327" alt="erro"></p><span id="more"></span><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p>通过查看<code>package.json</code>文件我们可以发现，在文件中默认安装了<code>eslint-loader</code>模块，<code>eslint-loader</code>模块是目前相对比较流行的代码检测工具，可以检测书写的代码是否符合统一规范，可以在一些比较大型的项目开发中统一开发人员的代码风格，这也就是为什么代码缩进有可能导致页面报错的原因（代码缩进不符合规范）。</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="方法一：了解eslint-loader规则，严格按照规范书写代码（这是废话）"><a href="#方法一：了解eslint-loader规则，严格按照规范书写代码（这是废话）" class="headerlink" title="方法一：了解eslint-loader规则，严格按照规范书写代码（这是废话）"></a>方法一：了解<code>eslint-loader</code>规则，严格按照规范书写代码（这是废话）</h4><h4 id="方法二：关闭eslint"><a href="#方法二：关闭eslint" class="headerlink" title="方法二：关闭eslint"></a>方法二：关闭<code>eslint</code></h4><p>如果实在普通的webpack项目中我们只需要打开<code>webpack.config.js </code>文件，然后去除ESlint在文件中的配置代码就可以了；</p><p>如果是在vue项目中，我们需要打开项目根目录下的<code>build</code>文件夹并且打开该文件夹下的<code>webpack.base.conf.js</code>文件，然后去除ESlint在文件中的配置代码就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决node-sass偶尔安装失败的方法</title>
      <link href="/2016/12/03/%E8%A7%A3%E5%86%B3node-sass%E5%81%B6%E5%B0%94%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%96%B9%E6%B3%95/"/>
      <url>/2016/12/03/%E8%A7%A3%E5%86%B3node-sass%E5%81%B6%E5%B0%94%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近把Node从4.4.4升级到6.9.1版本，但是在执行<code>npm i</code>命令安装三方依赖包的时候出现了node-sass模块安装失败的问题。</p></blockquote><p><img src="http://img.blog.csdn.net/20161203144743355" alt="erro"></p><p>现在和大家分享下如何解决这个问题的方法</p><span id="more"></span><h4 id="分析原因"><a href="#分析原因" class="headerlink" title="分析原因"></a>分析原因</h4><hr><p><img src="http://img.blog.csdn.net/20161203145144505" alt="erro"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cannot download &quot;https://hithub.com/sass/node-sass/releases/download/v3.13.0/win32-x64-46_binding.node&quot;</span><br></pre></td></tr></table></figure><p>从上图第九行代码可以看出，导致<code>node-sass</code>安装失败的原因是因为无法下载<code>.node</code>文件，解决办法就很简单了，就是我们把文件下载路径复制一份到浏览器里，然后使用浏览器下载文件就可以了。</p><h4 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h4><hr><p>1.从node命令行中复制<code>.node</code>文件下载链接并在浏览器打开下载文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://hithub.com/sass/node-sass/releases/download/v3.13.0/win32-x64-46_binding.node</span><br></pre></td></tr></table></figure><p>2.文件下载成功后，在命令行工具输入下面指令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set SASS_BINARY_PATH=D:/WorkCode/win32-x64-46_binding.node //PATH=后面是的下载的.node所在的路径</span><br></pre></td></tr></table></figure><p>设置<code>SASS_BINARY_PATH</code>环境变量，目的是告诉程序直接使用本地的.node文件，无需从网上下载</p><p>3.配置完成，从新输入指令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i node-sass -D --verbose</span><br></pre></td></tr></table></figure><p>接下来你就会发现node-sass安装成功。</p>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何提高NPM拉取第三方依赖包的速度</title>
      <link href="/2016/11/28/%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98NPM%E6%8B%89%E5%8F%96%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96%E5%8C%85%E7%9A%84%E9%80%9F%E5%BA%A6/"/>
      <url>/2016/11/28/%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98NPM%E6%8B%89%E5%8F%96%E7%AC%AC%E4%B8%89%E6%96%B9%E4%BE%9D%E8%B5%96%E5%8C%85%E7%9A%84%E9%80%9F%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>刚才分享了NPM使用过程中如何发布NPM模块的方法，这个方法其实只要稍微看一下官方文档就可以知道了。接下来我们继续分享NPM使用过程中如何提升NPM安装速度的方法。</p></blockquote><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><hr><p>如果你在使用NPM安装NPM包的时候你会经常发现，代码拉取速度慢的简直让人崩溃，有时候甚至怀疑自己的宽带是不是抽风了，然而自己唯一能做的就是不断的<code>ctrl+c</code>,<code>npm install xxx</code>,<code>ctrl+c</code>,<code>npm install xxx</code>….往事不堪回首啊。</p><p>其实解决方法很简单，就是使用<code>淘宝镜像</code>或者<code>CNPM </code>，而我个人比较推荐使用淘宝镜像来提高项目拉取速度。下面我们也会使用淘宝镜像来给大家介绍具体的使用方法。</p><span id="more"></span><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><hr><h4 id="方法一：通过修改NPM配置文件更改源地址（强烈推荐）"><a href="#方法一：通过修改NPM配置文件更改源地址（强烈推荐）" class="headerlink" title="方法一：通过修改NPM配置文件更改源地址（强烈推荐）"></a>方法一：通过修改NPM配置文件更改源地址（强烈推荐）</h4><p>打开Node安装目录然后进入NPM项目目录。我Node安装到了E盘，因此路径为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\Program Files\nodejs\node_modules\npm</span><br></pre></td></tr></table></figure><p>在NPM项目根目录中找到<code>npmrc</code>文件<br><img src="http://oft2csb8a.bkt.clouddn.com/npm-03.png" alt="npmrc"></p><p>使用编辑器打开文件，清空文件内容并输入下面内容：</p><p><img src="http://oft2csb8a.bkt.clouddn.com/npm-04.png" alt="test"></p><p>然后保存并退出，接下来我们如果再次安装NPM包的时候就会发现速度爽到爆啊。</p><h4 id="方法二：通过-npm-命令指定下载源"><a href="#方法二：通过-npm-命令指定下载源" class="headerlink" title="方法二：通过 npm 命令指定下载源"></a>方法二：通过 npm 命令指定下载源</h4><p>例如我们安装webpack,则只需要输入下面代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install webpack -D --registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h4 id="方法三：通过-config-配置指定下载源"><a href="#方法三：通过-config-配置指定下载源" class="headerlink" title="方法三：通过 config 配置指定下载源"></a>方法三：通过 config 配置指定下载源</h4><p>我们同样以安装webpack为例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line">npm install webpack -D</span><br></pre></td></tr></table></figure><p>其实前面三种方法的原理都是一样的，都是通过更改下载源来提高下载速度。不过，第一种方法一劳永逸，而第二种方法每次都只是临时指定下载源，下次安装仍然需要重复输入，相对麻烦一些。</p><h4 id="方法四：直接安装淘宝定制的CNPM模块"><a href="#方法四：直接安装淘宝定制的CNPM模块" class="headerlink" title="方法四：直接安装淘宝定制的CNPM模块"></a>方法四：直接安装淘宝定制的CNPM模块</h4><p>直接执行下面命令安装CNPM替代原来的NPM：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install cnpm  -g --registry https://registry.npm.taobao.org  </span><br></pre></td></tr></table></figure><p>安装成功之后以后直接使用CNPM命令来拉去第三方依赖包，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cnpm install webpack -g</span><br></pre></td></tr></table></figure><p> 这种方法和第一种一样可以一劳永逸，但是也意味着我们以后所有的指令都要写成<code>cnpm+xxx</code>，一定程度上改变了一些我们原有的使用习惯，所以我个人还是比较喜欢第一种。</p><h4 id="方法五：-使用verbose命令"><a href="#方法五：-使用verbose命令" class="headerlink" title="方法五： 使用verbose命令"></a>方法五： 使用<code>verbose</code>命令</h4><p>当然还有第五种方法会让你<strong>感觉</strong>下载速度稍微快一点，就是在安装的时候输入<code>verbose</code>指令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install webpack -D --verbose</span><br></pre></td></tr></table></figure><p>verbose命令的作用其实就是显示当前项目安装进度。如果你可以看到项目实实在在的在慢慢下载项目文件，而不是感觉宽带直接挂掉的话，在某种程度上可以让你感觉稍微快点，然而也仅仅只是<strong>感觉而已</strong>，自己娱乐一下，开心就好。</p>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何快速发布NPM模块</title>
      <link href="/2016/11/28/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%8F%91%E5%B8%83NPM%E6%A8%A1%E5%9D%97/"/>
      <url>/2016/11/28/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%8F%91%E5%B8%83NPM%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天无意间发现了自己以前写的几个NPM模块，正好今天不知道写什么，所以就把以前写NPM模块的时候用到的一些小知识点稍微整理下分享给大家。<br><img src="http://oft2csb8a.bkt.clouddn.com/npm-001.png" alt="123"></p></blockquote><h3 id="什么是NPM？"><a href="#什么是NPM？" class="headerlink" title="什么是NPM？"></a>什么是NPM？</h3><hr><p>NPM原先是NodeJS上非常好用的一款第三方包管理工具，不过目前NodeJS已经集成了NPM，因此一般不需要我们自己手动去安装。通常情况下我们在Node项目中用的最多的就是使用NPM来拉取第三方依赖包，我们今天就简单聊一下NPM的另一种用法，使用NPM发布自己的NPM公共模块。</p><span id="more"></span><h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><hr><h4 id="注册登录账号"><a href="#注册登录账号" class="headerlink" title="注册登录账号"></a>注册登录账号</h4><p>首先我们需要登录NPM<a href="https://www.npmjs.com/">官方网址</a>注册个人登录账号<br><img src="http://oft2csb8a.bkt.clouddn.com/npm-02.png" alt="NPM"></p><h4 id="登录NPM工具"><a href="#登录NPM工具" class="headerlink" title="登录NPM工具"></a>登录NPM工具</h4><p>首先我们需打开Node命令行工具，并且<code>cd</code>到我们需要发布的项目根目录下输入<code>npm adduser</code>指令登录NPM包管理工具</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm adduser</span><br><span class="line">Username: afly</span><br><span class="line">Password:        //这里输入密码的时候密码是不显示出来的，所以友友们千万不要以为密码无法输入</span><br><span class="line">Email: (this IS public) 15005X7791@qq.com</span><br></pre></td></tr></table></figure><p>如果登陆失败则是由于自己更改镜像为淘宝镜像导致的，直接删除ｎｐｍ项目下的．ｎｐｍｒｃ配置文件即可。</p><h4 id="发布NPM模块"><a href="#发布NPM模块" class="headerlink" title="发布NPM模块"></a>发布NPM模块</h4><p>登录成功之后我们就需要进行最后一步了，在命令行下面继续输入下面代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm publish XXineku-cli-01@1.0.0</span><br></pre></td></tr></table></figure><p>项目发布成功。这里<code>XXineku-cli-01</code>是我们希望发布的项目名称，<code>1.0.0</code>是我们即将发布的项目版本号。</p><blockquote><p>注意：在发布项目的时候，如果当前项目名称和NPM仓库中别的项目名称重复的话会导致项目发布失败，因此我们在给项目命名的时候需要稍微注意下。</p></blockquote><h4 id="查看发布模块"><a href="#查看发布模块" class="headerlink" title="查看发布模块"></a>查看发布模块</h4><p>发布成功之后我们就可以在<a href="https://www.npmjs.com/">官方网址</a>查看我们所发布的项目了，具体查看方式是：打开<a href="https://www.npmjs.com/">NPM官方网址</a>并登陆，然后点击个人头像进入<code>Profile</code>板块就可以查看到我们发布的项目了。</p><p><img src="http://oft2csb8a.bkt.clouddn.com/npm-001.png" alt="123"></p><h4 id="安装NPM模块"><a href="#安装NPM模块" class="headerlink" title="安装NPM模块"></a>安装NPM模块</h4><p>如果需要使用自己发布的NPM模块我们只需要在命令行工具中输入下面指令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install XXineku-cli-01//这里的XXineku-cli-01是我们发布成功的项目名称</span><br></pre></td></tr></table></figure><p>安装方式和我们安装别的NPM依赖包是一样的。</p>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex 布局实例演示</title>
      <link href="/2016/11/25/Flex%20%E5%B8%83%E5%B1%80%E5%AE%9E%E4%BE%8B%E6%BC%94%E7%A4%BA/"/>
      <url>/2016/11/25/Flex%20%E5%B8%83%E5%B1%80%E5%AE%9E%E4%BE%8B%E6%BC%94%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<p>今天介绍常见布局的Flex写法。</p><p>你会看到，不管是什么布局，Flex往往都可以几行命令搞定。</p><p><img src="http://img.blog.csdn.net/20161125175859553" alt="123"></p><span id="more"></span><h3 id="骰子布局"><a href="#骰子布局" class="headerlink" title="骰子布局"></a>骰子布局</h3><p>骰子的一面，最多可以放置9个点。</p><p><img src="http://img.blog.csdn.net/20161125175915866" alt="123"></p><p>下面，就来看看Flex如何实现，从1个点到9个点的布局。你可以到codepen查看Demo。</p><p><img src="http://img.blog.csdn.net/20161125180158929" alt="这里写图片描述"></p><p>如果不加说明，本节的HTML模板一律如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;box&quot;&gt;</span><br><span class="line">  &lt;span class=&quot;item&quot;&gt;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>上面代码中，div元素（代表骰子的一个面）是Flex容器，span元素（代表一个点）是Flex项目。如果有多个项目，就要添加多个span元素，以此类推。</p><h4 id="1-1-单项目"><a href="#1-1-单项目" class="headerlink" title="1.1 单项目"></a>1.1 单项目</h4><hr><p>首先，只有左上角1个点的情况。Flex布局默认就是首行左对齐，所以一行代码就够了。</p><p><img src="http://img.blog.csdn.net/20161125180307758" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置项目的对齐方式，就能实现居中对齐和右对齐。</p><p><img src="http://img.blog.csdn.net/20161125180356540" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161125180439405" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置交叉轴对齐方式，可以垂直移动主轴。</p><p><img src="http://img.blog.csdn.net/20161125180528853" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161125180616400" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  align-items: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161125180705135" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  align-items: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161125180746299" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: flex-end;</span><br><span class="line">  align-items: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-双项目"><a href="#1-2-双项目" class="headerlink" title="1.2 双项目"></a>1.2 双项目</h4><hr><p><img src="http://img.blog.csdn.net/20161125180902691" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161125180955208" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-direction: column;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161125181039777" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-direction: column;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">  align-items: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161125181126511" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-direction: column;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">  align-items: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161125181253367" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.item:nth-child(2) &#123;</span><br><span class="line">  align-self: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161125181347119" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.item:nth-child(2) &#123;</span><br><span class="line">  align-self: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-三项目"><a href="#1-3-三项目" class="headerlink" title="1.3 三项目"></a>1.3 三项目</h4><hr><p><img src="http://img.blog.csdn.net/20161125181509934" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.item:nth-child(2) &#123;</span><br><span class="line">  align-self: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.item:nth-child(3) &#123;</span><br><span class="line">  align-self: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-4-四项目"><a href="#1-4-四项目" class="headerlink" title="1.4 四项目"></a>1.4 四项目</h4><hr><p><img src="http://img.blog.csdn.net/20161125181612529" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-wrap: wrap;</span><br><span class="line">  justify-content: flex-end;</span><br><span class="line">  align-content: space-between;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161125181742781" alt="123"></p><p>HTML代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;box&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;column&quot;&gt;</span><br><span class="line">    &lt;span class=&quot;item&quot;&gt;&lt;/span&gt;</span><br><span class="line">    &lt;span class=&quot;item&quot;&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;column&quot;&gt;</span><br><span class="line">    &lt;span class=&quot;item&quot;&gt;&lt;/span&gt;</span><br><span class="line">    &lt;span class=&quot;item&quot;&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>CSS代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">display: flex;</span><br><span class="line">justify-content: space-between;</span><br><span class="line">&#125;</span><br><span class="line">.box .column &#123;</span><br><span class="line">display: flex;</span><br><span class="line">flex-direction: column;</span><br><span class="line">justify-content: space-between;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-5-六项目"><a href="#1-5-六项目" class="headerlink" title="1.5 六项目"></a>1.5 六项目</h4><hr><p><img src="http://img.blog.csdn.net/20161125182138926" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-wrap: wrap;</span><br><span class="line">  align-content: space-between;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161125182224906" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-direction: column;</span><br><span class="line">  flex-wrap: wrap;</span><br><span class="line">  align-content: space-between;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161125182322781" alt="123"></p><p>HTML代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;box&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">    &lt;span class=&quot;item&quot;&gt;&lt;/span&gt;</span><br><span class="line">    &lt;span class=&quot;item&quot;&gt;&lt;/span&gt;</span><br><span class="line">    &lt;span class=&quot;item&quot;&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">    &lt;span class=&quot;item&quot;&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">     &lt;span class=&quot;item&quot;&gt;&lt;/span&gt;</span><br><span class="line">     &lt;span class=&quot;item&quot;&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>CSS代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-wrap: wrap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.row&#123;</span><br><span class="line">  flex-basis: 100%;</span><br><span class="line">  display:flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.row:nth-child(2)&#123;</span><br><span class="line">  justify-content: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.row:nth-child(3)&#123;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-6-九项目"><a href="#1-6-九项目" class="headerlink" title="1.6 九项目"></a>1.6 九项目</h4><hr><p><img src="http://img.blog.csdn.net/20161125182539298" alt="123"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-wrap: wrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、网格布局"><a href="#二、网格布局" class="headerlink" title="二、网格布局"></a>二、网格布局</h3><h4 id="2-1-基本网格布局"><a href="#2-1-基本网格布局" class="headerlink" title="2.1 基本网格布局"></a>2.1 基本网格布局</h4><hr><p>最简单的网格布局，就是平均分布。在容器里面平均分配空间，跟上面的骰子布局很像，但是需要设置项目的自动缩放。</p><p><img src="http://img.blog.csdn.net/20161125182704392" alt="123"></p><p>HTML代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;Grid&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;Grid-cell&quot;&gt;...&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;Grid-cell&quot;&gt;...&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;Grid-cell&quot;&gt;...&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>CSS代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.Grid &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.Grid-cell &#123;</span><br><span class="line">  flex: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2-百分比布局"><a href="#2-2-百分比布局" class="headerlink" title="2.2 百分比布局"></a>2.2 百分比布局</h4><hr><p>某个网格的宽度为固定的百分比，其余网格平均分配剩余的空间。</p><p><img src="http://img.blog.csdn.net/20161125182902471" alt="123"></p><p>HTML代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;Grid&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;Grid-cell u-1of4&quot;&gt;...&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;Grid-cell&quot;&gt;...&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;Grid-cell u-1of3&quot;&gt;...&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.Grid &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.Grid-cell &#123;</span><br><span class="line">  flex: 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.Grid-cell.u-full &#123;</span><br><span class="line">  flex: 0 0 100%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.Grid-cell.u-1of2 &#123;</span><br><span class="line">  flex: 0 0 50%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.Grid-cell.u-1of3 &#123;</span><br><span class="line">  flex: 0 0 33.3333%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.Grid-cell.u-1of4 &#123;</span><br><span class="line">  flex: 0 0 25%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、圣杯布局"><a href="#三、圣杯布局" class="headerlink" title="三、圣杯布局"></a>三、圣杯布局</h3><p>圣杯布局（Holy Grail Layout）指的是一种最常见的网站布局。页面从上到下，分成三个部分：头部（header），躯干（body），尾部（footer）。其中躯干又水平分成三栏，从左到右为：导航、主栏、副栏。</p><p><img src="http://img.blog.csdn.net/20161125183107469" alt="123"></p><p>HTML代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;body class=&quot;HolyGrail&quot;&gt;</span><br><span class="line">  &lt;header&gt;...&lt;/header&gt;</span><br><span class="line">  &lt;div class=&quot;HolyGrail-body&quot;&gt;</span><br><span class="line">    &lt;main class=&quot;HolyGrail-content&quot;&gt;...&lt;/main&gt;</span><br><span class="line">    &lt;nav class=&quot;HolyGrail-nav&quot;&gt;...&lt;/nav&gt;</span><br><span class="line">    &lt;aside class=&quot;HolyGrail-ads&quot;&gt;...&lt;/aside&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;footer&gt;...&lt;/footer&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>CSS代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.HolyGrail &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  min-height: 100vh;</span><br><span class="line">  flex-direction: column;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">header,</span><br><span class="line">footer &#123;</span><br><span class="line">  flex: 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.HolyGrail-body &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex: 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.HolyGrail-content &#123;</span><br><span class="line">  flex: 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.HolyGrail-nav, .HolyGrail-ads &#123;</span><br><span class="line">  /* 两个边栏的宽度设为12em */</span><br><span class="line">  flex: 0 0 12em;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.HolyGrail-nav &#123;</span><br><span class="line">  /* 导航放到最左边 */</span><br><span class="line">  order: -1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是小屏幕，躯干的三栏自动变为垂直叠加。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@media (max-width: 768px) &#123;</span><br><span class="line">  .HolyGrail-body &#123;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    flex: 1;</span><br><span class="line">  &#125;</span><br><span class="line">  .HolyGrail-nav,</span><br><span class="line">  .HolyGrail-ads,</span><br><span class="line">  .HolyGrail-content &#123;</span><br><span class="line">    flex: auto;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、输入框的布局"><a href="#四、输入框的布局" class="headerlink" title="四、输入框的布局"></a>四、输入框的布局</h3><p>我们常常需要在输入框的前方添加提示，后方添加按钮。</p><p><img src="http://img.blog.csdn.net/20161125183406755" alt="123"></p><p>HTML代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;InputAddOn&quot;&gt;</span><br><span class="line">  &lt;span class=&quot;InputAddOn-item&quot;&gt;...&lt;/span&gt;</span><br><span class="line">  &lt;input class=&quot;InputAddOn-field&quot;&gt;</span><br><span class="line">  &lt;button class=&quot;InputAddOn-item&quot;&gt;...&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>CSS代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.InputAddOn &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.InputAddOn-field &#123;</span><br><span class="line">  flex: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五、悬挂式布局"><a href="#五、悬挂式布局" class="headerlink" title="五、悬挂式布局"></a>五、悬挂式布局</h3><p>有时，主栏的左侧或右侧，需要添加一个图片栏。</p><p><img src="http://img.blog.csdn.net/20161125183544897" alt="123"></p><p>HTML代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;Media&quot;&gt;</span><br><span class="line">  &lt;img class=&quot;Media-figure&quot; src=&quot;&quot; alt=&quot;&quot;&gt;</span><br><span class="line">  &lt;p class=&quot;Media-body&quot;&gt;...&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>CSS代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.Media &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: flex-start;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.Media-figure &#123;</span><br><span class="line">  margin-right: 1em;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.Media-body &#123;</span><br><span class="line">  flex: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="六、固定的底栏"><a href="#六、固定的底栏" class="headerlink" title="六、固定的底栏"></a>六、固定的底栏</h3><p>有时，页面内容太少，无法占满一屏的高度，底栏就会抬高到页面的中间。这时可以采用Flex布局，让底栏总是出现在页面的底部。</p><p><img src="http://img.blog.csdn.net/20161125183820994" alt="123"></p><p>HTML代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;body class=&quot;Site&quot;&gt;</span><br><span class="line">  &lt;header&gt;...&lt;/header&gt;</span><br><span class="line">  &lt;main class=&quot;Site-content&quot;&gt;...&lt;/main&gt;</span><br><span class="line">  &lt;footer&gt;...&lt;/footer&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>CSS代码如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.Site &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  min-height: 100vh;</span><br><span class="line">  flex-direction: column;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.Site-content &#123;</span><br><span class="line">  flex: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="七，流式布局"><a href="#七，流式布局" class="headerlink" title="七，流式布局"></a>七，流式布局</h3><p>每行的项目数固定，会自动分行。</p><p><img src="http://img.blog.csdn.net/20161125184001524" alt="123"></p><p>CSS的写法。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.parent &#123;</span><br><span class="line">  width: 200px;</span><br><span class="line">  height: 150px;</span><br><span class="line">  background-color: black;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-flow: row wrap;</span><br><span class="line">  align-content: flex-start;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.child &#123;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  background-color: white;</span><br><span class="line">  flex: 0 0 25%;</span><br><span class="line">  height: 50px;</span><br><span class="line">  border: 1px solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>声明：本片文章转载自<strong>阮一峰</strong>老师的博客，文章内代码进行了小部分的修改，原文链接：<a href="http://www.ruanyifeng.com/blog/2015/07/flex-examples.html">http://www.ruanyifeng.com/blog/2015/07/flex-examples.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅析Html5 data-*自定义属性</title>
      <link href="/2016/11/24/%E6%B5%85%E6%9E%90Html5%20data%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7/"/>
      <url>/2016/11/24/%E6%B5%85%E6%9E%90Html5%20data%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<blockquote><p> 通常我们会通过使用<code>getAttribute</code>或者<code>setAttribute</code>来操作页面属性，然而在Html5中为我们提供了新的自定义属性方法，极大的方便了我们操作页面属性，并且我们可以使用自定义属性在某些情况下来进行数据存储。</p></blockquote><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>我们可以直接在html标签中设置自定义属性，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;taodet-02&quot;&gt;</span><br><span class="line">&lt;span&gt;</span><br><span class="line">&lt;button&gt;&#123;&#123;itemlist.item_quan&#125;&#125;&lt;/button&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;mui-icon&quot; @tap=&quot;share&quot; :data-num=&quot;123&quot;&gt;//自定义属性：data-num</span><br><span class="line">&lt;img src=&quot;img/share.png&quot;/&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><span id="more"></span><p>当然，我们也可以直接使用JS来设置自定义属性。HTML5中元素有一个dataset的属性，这是一个DOMStringMap类型的键值对集合，我们可以通过使用JS来操作dataset来达到我们的目的。例如我们给class类名为<code>mui-icon</code>的标签同样设置自定义属性<code>data-num</code>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let test = document.getElementsByClassName(&#x27;mui-icon&#x27;)[0];</span><br><span class="line">test.dataset.num = &#x27;123&#x27;;//设置成功</span><br></pre></td></tr></table></figure><p>如果希望使用JS来获取我们设置好的自定义属性，仍然可以通过<code>dataset</code>对象来获取我们所需要的自定义属性，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let test = document.getElementsByClassName(&#x27;mui-icon&#x27;)[0],</span><br><span class="line">num = test.dataset.num;</span><br><span class="line">console.log(num);//输出的num数值为123</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>1.如果我们需要通过JS设置或者获取一个类似<code>data-index-num = &#39;123&#39;</code>的自定义属性时，我们需要把<code>index-num</code>转为驼峰命名，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let test = document.getElementsByClassName(&#x27;mui-icon&#x27;)[0];</span><br><span class="line">test.dataset.indexNum = &#x27;123&#x27;;//设置成功,index-num需要转为indexNum</span><br></pre></td></tr></table></figure><p>2.data自定义属性目前兼容性仍然很感人，虽然最新的主流浏览器基本都支持这个属性，但是老版本的浏览器仍然是个深坑，因为使用的时候还需要酌情考虑一下。</p>]]></content>
      
      
      <categories>
          
          <category> Html5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Html5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5页面静态资源缓存利器Application Cache</title>
      <link href="/2016/11/21/HTML5%E9%A1%B5%E9%9D%A2%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E7%BC%93%E5%AD%98%E5%88%A9%E5%99%A8Application%20Cache/"/>
      <url>/2016/11/21/HTML5%E9%A1%B5%E9%9D%A2%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E7%BC%93%E5%AD%98%E5%88%A9%E5%99%A8Application%20Cache/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天写了一个微信推广页，中间为了优化页面加载效果，一堆优化方法中其中之一就用到了<code>Application Cache</code>来对页面部分资源进行静态资源缓存。懒癌复发，今天就不介绍什么是<code>Application Cache</code>了,总之<strong>外事问谷歌，内事问度娘，房事问天涯</strong>就对了，下面直接上方法。</p></blockquote><h4 id="新建缓存文件"><a href="#新建缓存文件" class="headerlink" title="新建缓存文件"></a>新建缓存文件</h4><p>在项目文件夹下新建缓存文件<code>ed.appcache</code>,在这里缓存文件名和后缀名不作限制，理论上可以随意自定义，不过一般情况下我们会把后缀名写为<code>.appcache</code></p><span id="more"></span><h4 id="配置缓存列表"><a href="#配置缓存列表" class="headerlink" title="配置缓存列表"></a>配置缓存列表</h4><p>使用任意编辑器打开新建好的<code>ed.appcache</code>文件，配置缓存列表。示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CACHE MANIFEST</span><br><span class="line"></span><br><span class="line">#version1.2</span><br><span class="line"></span><br><span class="line">CACHE://需要进行缓存的文件</span><br><span class="line"></span><br><span class="line">img/01.jpg</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">NETWORK：//不需要进行缓存的文件</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">FALLBACK://缓存失败回调地址</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="引入缓存文件"><a href="#引入缓存文件" class="headerlink" title="引入缓存文件"></a>引入缓存文件</h4><p>在HTML文件中引入缓存文件，方法是在页面html标签中添加下面代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html manifest=&quot;ad.appcache&quot;&gt;//manifest=&quot;ad.appcache&quot;是我们需要添加的代码</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;Description&quot; content=&quot;核心用户邀请&quot;/&gt;</span><br></pre></td></tr></table></figure><h4 id="配置Mime-type"><a href="#配置Mime-type" class="headerlink" title="配置Mime-type"></a>配置Mime-type</h4><p> 不同的服务器配置方法不同，这里我们就以 Apach服务器来举例说明：</p><p>打开Apache服务器项目根目录，进入<code>conf</code>文件夹下找到<code>mime.types</code>文件，使用记事本或者其他编辑器打开文件并在最下方添加下面代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">text/cache-manifestappcache</span><br></pre></td></tr></table></figure><p> 万事俱备，接下来我们就可以在浏览器<code>控制台</code>中查看效果了，这里我就不演示了…</p>]]></content>
      
      
      <categories>
          
          <category> Html5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Html5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ErrorCode:1068.Multipleprimarykeydefined</title>
      <link href="/2016/11/17/ErrorCode%201068.Multipleprimarykeydefined/"/>
      <url>/2016/11/17/ErrorCode%201068.Multipleprimarykeydefined/</url>
      
        <content type="html"><![CDATA[<h4 id="错误描述"><a href="#错误描述" class="headerlink" title="错误描述"></a>错误描述</h4><p> 输入sql指令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE sys_user CHANGE id id INT(4) NOT NULL auto_increment primary key</span><br><span class="line">Error Code: 1068. Multiple primary key defined0.000 sec</span><br></pre></td></tr></table></figure><h4 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h4><p>这个错误的原因是定义了两个主键，导致出错</p><span id="more"></span><p> 解决办法</p><h5 id="更改其他字段主键为非主键，设置当前字段为主键，执行代码"><a href="#更改其他字段主键为非主键，设置当前字段为主键，执行代码" class="headerlink" title="更改其他字段主键为非主键，设置当前字段为主键，执行代码"></a>更改其他字段主键为非主键，设置当前字段为主键，执行代码</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE sys_user CHANGE id id INT(4) NOT NULL auto_increment primary key</span><br></pre></td></tr></table></figure><h5 id="放弃设置当前字段为主键，保留原有主键"><a href="#放弃设置当前字段为主键，保留原有主键" class="headerlink" title="放弃设置当前字段为主键，保留原有主键"></a>放弃设置当前字段为主键，保留原有主键</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE sys_user CHANGE id id INT(4) NOT NULL auto_increment//去除primary key</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Flex定位在IOS弹出键盘失效的方案</title>
      <link href="/2016/11/14/%E8%A7%A3%E5%86%B3Flex%E5%AE%9A%E4%BD%8D%E5%9C%A8IOS%E5%BC%B9%E5%87%BA%E9%94%AE%E7%9B%98%E5%A4%B1%E6%95%88%E7%9A%84%E6%96%B9%E6%A1%88/"/>
      <url>/2016/11/14/%E8%A7%A3%E5%86%B3Flex%E5%AE%9A%E4%BD%8D%E5%9C%A8IOS%E5%BC%B9%E5%87%BA%E9%94%AE%E7%9B%98%E5%A4%B1%E6%95%88%E7%9A%84%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有好长一段时间没有写移动端Web页面了，今天下午在优化公司一个原有的一个移动web商城时发现商城在IOS系统中出现顶部搜索条和底部菜单栏在页面滚动式偶尔出现错位的问题，查看源码发现是由于顶部搜索条和底部菜单栏使用的是Flex定位导致的。在此稍稍整理下思路，把这个小方法分享给大家，希望可以帮到一些刚入坑的友友。</p></blockquote><h3 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h3><p>解决方法其实挺简单，就是更改页面布局，使用 <code>absolute</code>绝对定位取代<code>flex</code>定位。</p><span id="more"></span><h3 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span> //包裹层</span><br><span class="line"> <span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span> //顶部搜索条</span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;con&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> //需要滚动的页面</span><br><span class="line"> <span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span> //底部菜单栏</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.wrap</span>&#123;</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">header</span>&#123;</span><br><span class="line"><span class="attribute">position</span>: absolute; </span><br><span class="line"><span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.con</span>&#123;</span><br><span class="line"><span class="attribute">overflow-y</span>: auto; //设置是否使用滚动条为<span class="attribute">auto</span></span><br><span class="line">webkit-<span class="attribute">overflow</span>-scrolling: touch; //理论上可以调用原生页面滚动，提高滚动流畅度</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">footer</span>&#123;</span><br><span class="line"><span class="attribute">position</span>: absolute; //绝对定位</span><br><span class="line"><span class="attribute">bottom</span>： <span class="number">0</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就可以很轻松的解决Flex失效的问题。</p>]]></content>
      
      
      <categories>
          
          <category> CSS3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用PM2运行ThinkJS所创建的项目</title>
      <link href="/2016/11/13/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8PM2%E8%BF%90%E8%A1%8CThinkJS%E6%89%80%E5%88%9B%E5%BB%BA%E7%9A%84%E9%A1%B9%E7%9B%AE/"/>
      <url>/2016/11/13/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8PM2%E8%BF%90%E8%A1%8CThinkJS%E6%89%80%E5%88%9B%E5%BB%BA%E7%9A%84%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="首先安装PM2"><a href="#首先安装PM2" class="headerlink" title="首先安装PM2"></a>首先安装PM2</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install pm2 -g</span><br></pre></td></tr></table></figure><h3 id="进入项目WWW目录"><a href="#进入项目WWW目录" class="headerlink" title="进入项目WWW目录"></a>进入项目WWW目录</h3><p>打开命令行工具，<code>cd</code>到项目文件夹下面的<code>www</code>目录</p><h3 id="执行代码"><a href="#执行代码" class="headerlink" title="执行代码"></a>执行代码</h3><p>在命令行输入代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2 start www/production.js -i max</span><br></pre></td></tr></table></figure><p>以 cluster 的方式启动，这里的-i max是有几个 cpu 就启动几个进程意思。</p><span id="more"></span><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>除此之外我们还可以通过<code>PM2</code>实现负载均衡，<a href="https://github.com/Unitech/pm2">官方地址</a></p>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkJS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决ThinkJS项目开发中页面跳转报错问题</title>
      <link href="/2016/11/12/%E8%A7%A3%E5%86%B3ThinkJS%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E4%B8%AD%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/"/>
      <url>/2016/11/12/%E8%A7%A3%E5%86%B3ThinkJS%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E4%B8%AD%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p>很多时候在我们查询某一项数据时，在数据过多的时候我们会选择分页展示，但是很多时候会发现在进行页面跳转时会出现报错，报错内容是数据库查询条件为空。</p></blockquote><p><img src="http://oft2csb8a.bkt.clouddn.com/thinkjs-img03.png" alt="erro"></p><span id="more"></span><h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3><p>其实问题很简单，报错的原因是因为代码获取到的查询条件为空，因为查询条件是由上一页面通过Form表单提交过来的数据，然后我们通过<code>this.post</code>方法获得值；但是当我们进行页面跳转的时候其实就是刷新了一下当前的页面，并不会有页面再次提交到数据到当前页面来，因此自然无法获取到查询条件，报错也就可以理解了。</p><h3 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h3><p>如果页面跳转的时候我们无法再次获取到值，那么我们就可以考虑当有页面通过Form表单提交数据到当前页面时，我们在查询数据的同时把数据存储起来；当跳转页面时，我们可以把存储的数据取出来继续进行数据查询；当有页面再次通过Form表单提交数据到当前页面时，我们查询数据的同时更新下存储的数据，这样便可以解决我们所遇到的问题了。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>问题关键所在无非就是我们如何进行数据存储，在这里我们可以使用<code>ThinkJS</code>提供的<code>CACHE</code>存储，存储我们所需要的数据。</p><h4 id="Cache配置代码"><a href="#Cache配置代码" class="headerlink" title="Cache配置代码"></a>Cache配置代码</h4><p>在<code>common</code>模块<code>config</code>文件中创建<code>cache.js</code>，代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;use strict&#x27;;</span><br><span class="line">/**</span><br><span class="line"> * Created by arter on 2016/11/14.</span><br><span class="line"> */</span><br><span class="line">export default &#123;</span><br><span class="line">    type: &quot;file&quot;, //缓存类型</span><br><span class="line">    timeout: 6 * 3600, //失效时间，单位：秒</span><br><span class="line">    adapter: &#123; //不同 adapter 下的配置</span><br><span class="line">        file: &#123;</span><br><span class="line">            path: think.RUNTIME_PATH + &quot;/cache&quot;, //缓存文件的根目录</span><br><span class="line">            path_depth: 2, //缓存文件生成子目录的深度</span><br><span class="line">            file_ext: &quot;.json&quot; //缓存文件的扩展名</span><br><span class="line">        &#125;,</span><br><span class="line">        redis: &#123;</span><br><span class="line">            prefix: &quot;thinkjs_&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        memcache: &#123;</span><br><span class="line">            prefix: &quot;thinkjs_&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="调用Cache方法"><a href="#调用Cache方法" class="headerlink" title="调用Cache方法"></a>调用Cache方法</h4><p>示例代码：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> taoCache = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!think.isEmpty(formVal))&#123;</span><br><span class="line">  <span class="built_in">this</span>.assign(<span class="string">&#x27;formVal&#x27;</span>,formVal);</span><br><span class="line">  <span class="built_in">this</span>.cache(<span class="string">&#x27;formVal&#x27;</span>,formVal);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  formVal = <span class="keyword">await</span> <span class="built_in">this</span>.cache(<span class="string">&#x27;formVal&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存代码之后我们返回页面从新测试便会发现问题已经完美解决。</p>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkJS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkJS项目添加页面分页功能</title>
      <link href="/2016/11/12/ThinkJS%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0%E9%A1%B5%E9%9D%A2%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD/"/>
      <url>/2016/11/12/ThinkJS%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0%E9%A1%B5%E9%9D%A2%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<blockquote><p>刚开始写后台的时候都是自己一个代码一个代码的撸出一个分页器出来，直到发现<code>EJS</code>引擎功能太过于简单，不得不把模板全部转成使用<code>Unujucks</code>的时候蒙逼了，因为忽然间不知道该怎样下手写分页器，还好有大神帮忙，直接推荐了一款<code>thinkjs</code>扩展插件，今天和大家分享下。</p></blockquote><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install think-pagination</span><br></pre></td></tr></table></figure><span id="more"></span><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>首先在控制器中引用插件，实例代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;use strict&#x27;;</span><br><span class="line"></span><br><span class="line">import Base from &#x27;./base.js&#x27;;</span><br><span class="line">import pagination from &#x27;think-pagination&#x27;;//引入功能插件</span><br><span class="line"></span><br><span class="line">export default class extends Base &#123;</span><br><span class="line">  async __before()&#123;</span><br><span class="line">    this.userInfo = await this.session(&#x27;userInfo&#x27;);</span><br><span class="line">    if(this.userInfo)&#123;</span><br><span class="line">      this.assign(&#x27;user&#x27;, this.userInfo);</span><br><span class="line">      return Promise.resolve();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>xx</strong>包裹住的一行代码便是需要我们添加的代码，然后：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let taolist = await model.where(container).page(page,num).countSelect();//获取数据</span><br><span class="line">let html = pagination(taolist, this.http, &#123;&#125;);//实例化</span><br><span class="line">this.assign(&#x27;pagination&#x27;, html);//传入数据</span><br></pre></td></tr></table></figure><p>最后在模板代码中添加下面代码即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;nav class=&quot;pageNav&quot;&gt;</span><br><span class="line">  &#123;&#123;pagination | safe&#125;&#125;//需要添加的代码</span><br><span class="line">&lt;/nav&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>大功告成。查看<a href="https://github.com/thinkjs/think-pagination">官方文档</a></p><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p><a href="https://github.com/thinkjs/think-pagination">think-pagination</a></p>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkJS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在使用ThinkJS搭建后台时通过时间段查询数据报错的解决方案</title>
      <link href="/2016/11/11/%E5%9C%A8%E4%BD%BF%E7%94%A8ThinkJS%E6%90%AD%E5%BB%BA%E5%90%8E%E5%8F%B0%E6%97%B6%E9%80%9A%E8%BF%87%E6%97%B6%E9%97%B4%E6%AE%B5%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2016/11/11/%E5%9C%A8%E4%BD%BF%E7%94%A8ThinkJS%E6%90%AD%E5%BB%BA%E5%90%8E%E5%8F%B0%E6%97%B6%E9%80%9A%E8%BF%87%E6%97%B6%E9%97%B4%E6%AE%B5%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在一些朋友除此使用ThinkJS搭建Node后台时通过时间段进行数据查询的时候可能会遇到后台报错的问题，问题的原因一般是数据库查询条件部分为<code>undefined</code>,下面我们来看具体案例。</p></blockquote><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>例如当我们需要通过时间段查询<code>taolist</code>这张表的数据是，在控制器中的代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let formVal = this.post(); //获取form表单提交过来的数据</span><br><span class="line">let model = this.model(&#x27;taolist&#x27;);//初始化模型</span><br><span class="line">let taolist = await model.where(&#123;&#x27;date&#x27;:[&#x27;between&#x27;,formVal.timeStart,formVal.timeEnd]&#125;).select();</span><br><span class="line">console.log(taolist);</span><br></pre></td></tr></table></figure><span id="more"></span><p>执行代码，这时候我们会发现后台报错，如下图：</p><p><img src="http://oft2csb8a.bkt.clouddn.com/thinkjs-img02.png" alt="error"></p><p>我们会发现错误的原因是在进行范围查询的时候第二条查询条件为<code>undefined</code>,只需要解决这个问题就可以万事大吉了。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>这里要特别感谢下<a href="https://git.oschina.net/arterli/CmsWing">CmsWing</a>的开发者阿特大神给我提供了解决方法，再次感谢！其实我们只需要把代码改为下面这样就可以了：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let formVal = this.post(); //获取form表单提交过来的数据</span><br><span class="line">let model = this.model(&#x27;taolist&#x27;);//初始化模型</span><br><span class="line">let taolist = await model.where(&#123;&#x27;date&#x27;:[&#x27;between&#x27;,`$&#123;formVal.timeStart&#125;,$&#123;formVal.timeEnd&#125;`]&#125;).select();</span><br><span class="line">console.log(taolist);</span><br></pre></td></tr></table></figure><p><img src="http://oft2csb8a.bkt.clouddn.com/thinkjs-img01.png" alt="true">;</p><p>问题完美解决。</p><blockquote><p>另外向大家安利下阿特大神开发的<a href="https://git.oschina.net/arterli/CmsWing">CmsWing</a>,这是一款非常牛的一款CMS建站系统，最重要的是完全开源，希望更多的友友可以多多入坑！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkJS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Node的Hexo框架使用经验总结</title>
      <link href="/2016/11/10/%E5%9F%BA%E4%BA%8ENode%E7%9A%84Hexo%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
      <url>/2016/11/10/%E5%9F%BA%E4%BA%8ENode%E7%9A%84Hexo%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<blockquote><p>早上一觉起来发现自己的<a href="h5base.cn">个人博客</a>不知道什么时候竟然抽风了，尼玛各种报错，各种进不去，我常用的一些网址以及在线工具的地址都在博客上啊…说多了都是泪。没办法只能从新部署下博客，好在咱以前写的博客都还在。网上很多Hexo相关的教程我这里就不写的很详细了，纯属自己做个笔记，说不定哪天我老了记性不好就用到了♪(´▽｀)</p></blockquote><span id="more"></span><h2 id="博客搭建基本流程"><a href="#博客搭建基本流程" class="headerlink" title="博客搭建基本流程"></a>博客搭建基本流程</h2><h3 id="安装Node"><a href="#安装Node" class="headerlink" title="安装Node"></a>安装Node</h3><p>这里我想大家都会就不说了</p><h3 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a>安装HEXO</h3><p>在Node命令行下输入代码并执行：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>几分钟之后便会提示安装成功</p><h3 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h3><p>在Node命令行继续输入并执行代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init blog(项目名称)</span><br></pre></td></tr></table></figure><p>项目创建成功</p><h3 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h3><p>继续输入代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd blog</span><br></pre></td></tr></table></figure><p>进入项目文件夹</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>安装模块，过一会便会安装成功</p><h3 id="编译项目并本地执行"><a href="#编译项目并本地执行" class="headerlink" title="编译项目并本地执行"></a>编译项目并本地执行</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>清理旧的项目文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>编译文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>本地运行，到这一步我们就可以在浏览器中输入<code>localhost:4000</code>查看效果了。</p><h3 id="代码部署到GitHub或者Coding"><a href="#代码部署到GitHub或者Coding" class="headerlink" title="代码部署到GitHub或者Coding"></a>代码部署到GitHub或者Coding</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>安装部署模块，在配置文件配置好deploy参数，然后：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>这样就可以把代码部署成功了。</p><h2 id="相关拓展"><a href="#相关拓展" class="headerlink" title="相关拓展"></a>相关拓展</h2><h3 id="开起多说之类的功能之后如何在编译的时候指定博客或者页面不加入评论功能"><a href="#开起多说之类的功能之后如何在编译的时候指定博客或者页面不加入评论功能" class="headerlink" title="开起多说之类的功能之后如何在编译的时候指定博客或者页面不加入评论功能"></a>开起多说之类的功能之后如何在编译的时候指定博客或者页面不加入评论功能</h3><p>在博客或者页面最上面配置参数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>这样当前博客或页面就不会被添加评论功能了。</p><h3 id="添加新的页面如何在编译的时候当前页面不被编译"><a href="#添加新的页面如何在编译的时候当前页面不被编译" class="headerlink" title="添加新的页面如何在编译的时候当前页面不被编译"></a>添加新的页面如何在编译的时候当前页面不被编译</h3><p>同样在最上面配置参数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">layout: false</span><br></pre></td></tr></table></figure><p>万事大吉</p><h3 id="如何自定义主题样式"><a href="#如何自定义主题样式" class="headerlink" title="如何自定义主题样式"></a>如何自定义主题样式</h3><p>在项目<code>theme/主题名/source</code>文件下修改CSS文件和JS文件即可定义主题样式</p><p>在项目<code>theme/主题名/layout</code>文件下修改模板引擎文件即可定义主题页面布局</p>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于if和switch两种条件语句的思考</title>
      <link href="/2016/11/09/%E5%85%B3%E4%BA%8Eif%E5%92%8Cswitch%E4%B8%A4%E7%A7%8D%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%80%9D%E8%80%83/"/>
      <url>/2016/11/09/%E5%85%B3%E4%BA%8Eif%E5%92%8Cswitch%E4%B8%A4%E7%A7%8D%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%80%9D%E8%80%83/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在实际的项目开发中，if和switch同为条件语句，然而很多人并不清楚何时使用if语句，何时使用switch.</p></blockquote><h3 id="switch…case语句和if…else效率比较"><a href="#switch…case语句和if…else效率比较" class="headerlink" title="switch…case语句和if…else效率比较"></a>switch…case语句和if…else效率比较</h3><p>switch…case结构中有跳转表，输入的字符只要经过一次比较就可以正确的找到跳转分支，所以平均情况下跳转次数为1.</p><p>if…else结构如果有n个分支,分别记为n0,n1,n2,n3,…n(i-1),每个分支出现的概率假设未pi,分别为p0，p1,p2,p3,…p(i-1)。执行第一分支前不需要跳转，其它分支均需要跳转，执行第二个分支之前需要跳转一次，第三个分支需要跳转两次…需要跳转平均跳转的次数s为： \</p><p>如果&gt;1,则此时if…case的效率是小于switch…case的，如果它的值小于1，此时if…else的效率高于switch…case。</p><p>假设if…else分支的每个分支出现的概率相同，即1&#x2F;n,上面的跳转次数的期望值可以改写为：\。</p><p>如果n&#x3D;3,则期望的跳转次数为1，刚好与switch…case相同。由此，如果选择分支大于3的时候，选用switch…case结构效率会更高一些，而小于3时，选用if…else结构更好。</p><p>总结：在选择分支较多时，选用switch…case结构会提高程序的效率，但switch不足的地方在于只能处理字符或者数字类型的变量，if…else结构更加灵活一些，if…else结构可以用于判断表达式是否成立，比如if(a+b&gt;c),if…else的应用范围更广，switch…case结构在某些情况下可以替代if…else结构。</p>]]></content>
      
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP函数总结（二）</title>
      <link href="/2016/10/18/ThinkPHP%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2016/10/18/ThinkPHP%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>ThinkPHP中有大量重要的单字母函数,在开发过程中，这些函数极大的提高了开发人员的项目开发体验，今天我们就来扒一扒那些单字母函数</strong></p></blockquote><h3 id="ThinkPHP函数：M-实例化模型-无需定义模型类"><a href="#ThinkPHP函数：M-实例化模型-无需定义模型类" class="headerlink" title="ThinkPHP函数：M  实例化模型(无需定义模型类)"></a>ThinkPHP函数：M  实例化模型(无需定义模型类)</h3><hr><p>M方法用于实例化一个基础模型类，和D方法的区别在于：</p><blockquote><p>1、不需要自定义模型类，减少IO加载，性能较好；<br>2、实例化后只能调用基础模型类（默认是Model类）中的方法；<br>3、可以在实例化的时候指定表前缀、数据库和数据库的连接信息；</p></blockquote><span id="more"></span><p>M方法的调用格式：<code>M(&#39;[基础模型名:]模型名&#39;,&#39;数据表前缀&#39;,&#39;数据库连接信息&#39;)</code></p><blockquote><p>实例化基础模型（Model） 类</p></blockquote><p>在没有定义任何模型的时候，我们可以使用下面的方法实例化一个模型类来进行操作：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//实例化User模型</span><br><span class="line">$User = M(&#x27;User&#x27;);</span><br><span class="line">//执行其他的数据操作</span><br><span class="line">$User-&gt;select();</span><br></pre></td></tr></table></figure><blockquote><p>实例化其他公共模型类</p></blockquote><p>第一种方式实例化因为没有模型类的定义，因此很难封装一些额外的逻辑方法，不过大多数情况下，也许只是需要扩展一些通用的逻辑，那么就可以尝试下面一种方法。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$User = M(&#x27;CommonModel:User&#x27;);</span><br></pre></td></tr></table></figure><p>改用法其实等效于：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$User = new CommonModel(&#x27;User&#x27;);</span><br></pre></td></tr></table></figure><blockquote><p>传入表前缀、数据库和其他信息</p></blockquote><p>M方法有三个参数，第一个参数是模型名称（可以包括基础模型类和数据库），第二个参数用于设置数据表的前缀（留空则取当前项目配置的表前缀），第三个参数用于设置当前使用的数据库连接信息（留空则取当前项目配置的数据库连接信息），例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$User = M(&#x27;db2.User&#x27;,&#x27;think_&#x27;);</span><br></pre></td></tr></table></figure><p>了解更多用法，可以查看<a href="http://www.thinkphp.cn/document/123.html">官方文档</a></p><h3 id="ThinkPHP函数：N-计数器"><a href="#ThinkPHP函数：N-计数器" class="headerlink" title="ThinkPHP函数：N  计数器"></a>ThinkPHP函数：N  计数器</h3><hr><p>N方法属于计数器方法，被用于核心的查询、缓存统计的计数和统计,调用格式：<code>N(&#39;计数位置&#39;[,&#39;步进值&#39;])</code></p><blockquote><p>N(‘计数位置’[,’步进值’])</p></blockquote><p>例如，我们要统计页面中的查询次数，可以用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">N(&#x27;read&#x27;,1);</span><br></pre></td></tr></table></figure><p>表示每次执行到该位置都会引起计数器加1，到页面结束之前，我们就可以用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$count = N(&#x27;read&#x27;);</span><br></pre></td></tr></table></figure><p>了解更多用法，可以查看<a href="http://www.thinkphp.cn/document/140.html">官方文档</a></p><h3 id="ThinkPHP函数：R-直接调用控制器的操作方法"><a href="#ThinkPHP函数：R-直接调用控制器的操作方法" class="headerlink" title="ThinkPHP函数：R  直接调用控制器的操作方法"></a>ThinkPHP函数：R  直接调用控制器的操作方法</h3><hr><p>R方法用于调用某个控制器的操作方法，是A方法的进一步增强和补充.R方法的调用格式：<code>R(&#39;[项目://][分组/]模块/操作&#39;,&#39;参数&#39;,&#39;控制器层名称&#39;) </code></p><p>例如，我们定义了一个操作方法为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class UserAction extends Action &#123;</span><br><span class="line">    public function detail($id)&#123;</span><br><span class="line">        return M(&#x27;User&#x27;)-&gt;find($id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么就可以通过R方法在其他控制器里面调用这个操作方法（一般R方法用于跨模块调用）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$data = R(&#x27;User/detail&#x27;,array(&#x27;5&#x27;));</span><br></pre></td></tr></table></figure><p>表示调用User控制器的detail方法（detail方法必须是public类型），返回值就是查询id为5的一个用户数据。如果你要调用的操作方法是没有任何参数的话，第二个参数则可以留空，直接使用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$data = R(&#x27;User/detail&#x27;);</span><br></pre></td></tr></table></figure><p>了解更多用法，可以查看<a href="http://www.thinkphp.cn/info/134.html">官方文档</a></p><h3 id="ThinkPHP函数：S-缓存设置和存取"><a href="#ThinkPHP函数：S-缓存设置和存取" class="headerlink" title="ThinkPHP函数：S  缓存设置和存取"></a>ThinkPHP函数：S  缓存设置和存取</h3><hr><p>U方法用于完成对缓存设置和存取</p><h3 id="ThinkPHP函数：U-URL地址生成"><a href="#ThinkPHP函数：U-URL地址生成" class="headerlink" title="ThinkPHP函数：U  URL地址生成"></a>ThinkPHP函数：U  URL地址生成</h3><hr><p>U方法用于完成对URL地址的组装，特点在于可以自动根据当前的URL模式和设置生成对应的URL地址，格式为：<br><code>U(&#39;地址&#39;,&#39;参数&#39;,&#39;伪静态&#39;,&#39;是否跳转&#39;,&#39;显示域名&#39;);</code></p><p>在模板中使用U方法而不是固定写死URL地址的好处在于，一旦你的环境变化或者参数设置改变，你不需要更改模板中的任何代码。</p><p>在模板中的调用格式需要采用<code> &#123;:U(&#39;地址&#39;, &#39;参数&#39;…)&#125;</code> 的方式</p><p>U方法的用法示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">U(&#x27;User/add&#x27;) // 生成User模块的add操作地址</span><br></pre></td></tr></table></figure><p>也可以支持分组调用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">U(&#x27;Home/User/add&#x27;) // 生成Home分组的User模块的add操作地址</span><br></pre></td></tr></table></figure><p>当然，也可以只是写操作名，表示调用当前模块的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">U(&#x27;add&#x27;) // 生成当前访问模块的add操作地址</span><br></pre></td></tr></table></figure><p>除了分组、模块和操作名之外，我们也可以传入一些参数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">U(&#x27;Blog/read?id=1&#x27;) // 生成Blog模块的read操作 并且id为1的URL地址</span><br></pre></td></tr></table></figure><p>了解更多用法，可以查看<a href="http://www.thinkphp.cn/document/132.html">官方文档</a></p><h3 id="ThinkPHP函数：session-Session操作"><a href="#ThinkPHP函数：session-Session操作" class="headerlink" title="ThinkPHP函数：session  Session操作"></a>ThinkPHP函数：session  Session操作</h3><hr><p>Session方法用于Session 设置、获取、删除和管理操作。</p><blockquote><p>session初始化设置</p></blockquote><p>如果session方法的name参数传入数组则表示进行session初始化设置，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">session(array(&#x27;name&#x27;=&gt;&#x27;session_id&#x27;,&#x27;expire&#x27;=&gt;3600));</span><br></pre></td></tr></table></figure><blockquote><p>session赋值</p></blockquote><p>Session赋值比较简单，直接使用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">session(&#x27;name&#x27;,&#x27;value&#x27;);  //设置session</span><br></pre></td></tr></table></figure><p>相当于：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$_SESSION[&#x27;name&#x27;] = &#x27;value&#x27;;</span><br></pre></td></tr></table></figure><p>了解更多用法，可以查看<a href="http://www.thinkphp.cn/document/137.html">官方文档</a></p><h3 id="ThinkPHP函数：cookie-Cookie操作"><a href="#ThinkPHP函数：cookie-Cookie操作" class="headerlink" title="ThinkPHP函数：cookie  Cookie操作"></a>ThinkPHP函数：cookie  Cookie操作</h3><hr><p>cookie函数也是一个多元化操作函数，完成cookie的设置、获取和删除操作。</p><blockquote><p>Cookie设置</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cookie(&#x27;name&#x27;,&#x27;value&#x27;);  //设置cookie</span><br><span class="line">cookie(&#x27;name&#x27;,&#x27;value&#x27;,3600); // 指定cookie保存时间</span><br></pre></td></tr></table></figure><blockquote><p>Cookie获取</p></blockquote><p>获取cookie很简单，无论是怎么设置的cookie，只需要使用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$value = cookie(&#x27;name&#x27;);</span><br></pre></td></tr></table></figure><blockquote><p>Cookie删除</p></blockquote><p>删除某个cookie的值，使用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cookie(&#x27;name&#x27;,null);</span><br></pre></td></tr></table></figure><p>要删除所有的Cookie值，可以使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cookie(null); // 清空当前设定前缀的所有cookie值</span><br><span class="line">cookie(null,&#x27;think_&#x27;); //  清空指定前缀的所有cookie值</span><br></pre></td></tr></table></figure><p>了解更多用法，可以查看<a href="http://www.thinkphp.cn/document/138.html">官方文档</a></p><h3 id="ThinkPHP函数：import-类库导入"><a href="#ThinkPHP函数：import-类库导入" class="headerlink" title="ThinkPHP函数：import  类库导入"></a>ThinkPHP函数：import  类库导入</h3><hr><p>import方法是ThinkPHP框架用于类库导入的封装实现，尤其对于项目类库、扩展类库和第三方类库的导入支持。调用格式：<code>import(&#39;类库名&#39;, &#39;起始路径&#39;, &#39;类库后缀&#39;)</code></p><p>imprt方法有一个别名vendor方法，专门用于导入第三方类库，区别在于起始路径和类库后缀默认值不同。</p><blockquote><p>导入系统基类库</p></blockquote><p>系统基类库其实就是指的Think类库包，所在目录就是指框架的核心Lib目录，import方法可以用于导入系统基类库，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import(&#x27;Think.Util.Array&#x27;);</span><br></pre></td></tr></table></figure><p>表示导入系统目录下面的Lib&#x2F;Util&#x2F;Array.class.php 类库文件，相当于我们这样使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">require THINK_PATH.&#x27;Lib/Util/Array.class.php&#x27;;</span><br></pre></td></tr></table></figure><blockquote><p>导入扩展类库</p></blockquote><p>扩展类库位于Extend&#x2F;Library目录下面，这是系统的公共扩展类库目录，目前支持的扩展类库包只有ORG和Com包。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import(&#x27;ORG.Util.Image&#x27;);</span><br><span class="line">import(&#x27;Com.Sina.OAuth&#x27;);</span><br></pre></td></tr></table></figure><blockquote><p>导入非标准类库文件</p></blockquote><p>这里所说的非标准类库文件，主要是指位于特殊位置或者非.class.php后缀的类库文件。像导入基类库、扩展类库和项目类库都是基于框架规范的目录下面，如果我们需要导入项目的Common目录下面的MyClass.php文件，则可以采用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import(&#x27;Common.MyClass&#x27;,APP_PATH,&#x27;.php&#x27;);</span><br></pre></td></tr></table></figure><p>了解更多用法，可以查看<a href="http://www.thinkphp.cn/info/126.html">官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP函数总结（一）</title>
      <link href="/2016/10/15/ThinkPHP%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2016/10/15/ThinkPHP%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>ThinkPHP中有大量重要的单字母函数,在开发过程中，这些函数极大的提高了开发人员的项目开发体验，今天我们就来扒一扒那些单字母函数</strong></p></blockquote><h3 id="ThinkPHP函数：A-实例化控制器"><a href="#ThinkPHP函数：A-实例化控制器" class="headerlink" title="ThinkPHP函数：A  实例化控制器"></a>ThinkPHP函数：A  实例化控制器</h3><hr><p>A方法用于在内部实例化控制器，调用格式：<code>A(&#39;[项目://][分组/]模块&#39;,&#39;控制器层名称&#39;)</code></p><span id="more"></span><p>最简单的用法：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$User</span> = A(<span class="string">&#x27;User&#x27;</span>);</span><br></pre></td></tr></table></figure><p>表示实例化当前项目的UserAction控制器，实例化控制器后，就可以调用该控制器中的方法。查看 <a href="http://www.thinkphp.cn/info/125.html">官方文档</a></p><h3 id="ThinkPHP函数：C-设置和获取配置参数"><a href="#ThinkPHP函数：C-设置和获取配置参数" class="headerlink" title="ThinkPHP函数：C  设置和获取配置参数"></a>ThinkPHP函数：C  设置和获取配置参数</h3><hr><p>C方法是ThinkPHP用于设置、获取，以及保存配置参数的方法，使用频率较高。</p><blockquote><p>设置参数</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C(&#x27;DB_NAME&#x27;,&#x27;thinkphp&#x27;);</span><br></pre></td></tr></table></figure><p>表示设置DB_NAME配置参数的值为thinkphp，由于配置参数不区分大小写，所以下面的写法也是一样：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C(&#x27;db_name&#x27;,&#x27;thinkphp&#x27;);</span><br></pre></td></tr></table></figure><blockquote><p>获取设置的参数</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$con = C(&#x27;DB_NAME&#x27;)</span><br></pre></td></tr></table></figure><p>表示获取DB_NAME的值thinkphp给<code>$con</code>，查看<a href="http://www.thinkphp.cn/document/136.html">官方文档</a></p><h3 id="ThinkPHP函数：D-实例化模型"><a href="#ThinkPHP函数：D-实例化模型" class="headerlink" title="ThinkPHP函数：D  实例化模型"></a>ThinkPHP函数：D  实例化模型</h3><hr><p>用于实例化自定义模型类，调用格式如下：<code>D(&#39;[项目://][分组/]模型&#39;,&#39;模型层名称&#39;)</code></p><p>D方法最常用的用法就是实例化当前项目的某个自定义模型，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 实例化User模型</span><br><span class="line">$User = D(&#x27;User&#x27;);</span><br></pre></td></tr></table></figure><p>会导入当前项目下面的Lib&#x2F;Model&#x2F;UserModel.class.php文件，然后实例化UserModel类，所以，实际上的代码可能和下面的等效：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import(&#x27;@.Model.UserModel&#x27;);</span><br><span class="line">$User = new UserModel();</span><br></pre></td></tr></table></figure><p>了解更多用法，可以查看<a href="http://www.thinkphp.cn/info/122.html">官方文档</a></p><h3 id="ThinkPHP函数：F-快速缓存设置和存取"><a href="#ThinkPHP函数：F-快速缓存设置和存取" class="headerlink" title="ThinkPHP函数：F  快速缓存设置和存取"></a>ThinkPHP函数：F  快速缓存设置和存取</h3><hr><p>F方法其实是S方法的一个子集功能，仅用于简单数据缓存，并且只能支持文件形式，不支持缓存有效期，因为采用的是PHP返回方式，所以其效率较S方法较高，因此我们也称之为快速缓存方法。</p><blockquote><p>写入和读取缓存</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">F(&#x27;data&#x27;,&#x27;test data&#x27;);</span><br></pre></td></tr></table></figure><p>默认的保存起始路径是DATA_PATH（该常量在默认配置位于RUNTIME_PATH.’Data&#x2F;‘下面），也就是说会生成文件名为DATA_PATH.’data.php’的缓存文件。</p><p><strong>注意：确保你的缓存标识的唯一，避免数据覆盖和冲突。</strong></p><p>下次读取缓存数据的时候，使用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$Data = F(&#x27;data&#x27;);</span><br></pre></td></tr></table></figure><blockquote><p>删除缓存</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">F(&#x27;data&#x27;,NULL); </span><br></pre></td></tr></table></figure><p>第二个参数传入NULL，则表示删除标识为data的数据缓存，查看<a href="http://www.thinkphp.cn/document/312.html">官方文档</a></p><h3 id="ThinkPHP函数：G-调试统计"><a href="#ThinkPHP函数：G-调试统计" class="headerlink" title="ThinkPHP函数：G  调试统计"></a>ThinkPHP函数：G  调试统计</h3><hr><p>G方法的作用包括标记位置和区间统计两个功能</p><blockquote><p>运行时间统计</p></blockquote><p>标记位置后，我们就可以再次调用G方法进行区间统计了，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">G(&#x27;begin&#x27;);</span><br><span class="line">// ...其他代码段</span><br><span class="line">G(&#x27;end&#x27;);</span><br><span class="line">// ...也许这里还有其他代码</span><br><span class="line">// 进行统计区间</span><br><span class="line">echo G(&#x27;begin&#x27;,&#x27;end&#x27;).&#x27;s&#x27;;</span><br></pre></td></tr></table></figure><p>了解更多用法，可以查看<a href="http://www.thinkphp.cn/document/119.html">官方文档</a></p><h3 id="ThinkPHP函数：I-安全获取系统输入变量"><a href="#ThinkPHP函数：I-安全获取系统输入变量" class="headerlink" title="ThinkPHP函数：I  安全获取系统输入变量"></a>ThinkPHP函数：I  安全获取系统输入变量</h3><hr><p>主要用于更加方便和安全的获取系统输入变量，可以用于任何地方，用法格式如下：<code>I(&#39;变量类型.变量名&#39;,[&#39;默认值&#39;],[&#39;过滤方法&#39;])</code></p><p>我们以GET变量类型为例，说明下I方法的使用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo I(&#x27;get.id&#x27;); // 相当于 $_GET[&#x27;id&#x27;]</span><br><span class="line">echo I(&#x27;get.name&#x27;); // 相当于 $_GET[&#x27;name&#x27;]</span><br></pre></td></tr></table></figure><p>了解更多用法，可以查看<a href="http://www.thinkphp.cn/document/308.html">官方文档</a></p><h3 id="ThinkPHP函数：L-设置和获取语言变量"><a href="#ThinkPHP函数：L-设置和获取语言变量" class="headerlink" title="ThinkPHP函数：L  设置和获取语言变量"></a>ThinkPHP函数：L  设置和获取语言变量</h3><hr><p>L方法用于启用多语言的情况下，设置和获取当前的语言定义,调用格式：<code>L(&#39;语言变量&#39;[,&#39;语言值&#39;])</code></p><blockquote><p>设置语言变量</p></blockquote><p>除了使用语言包定义语言变量之外，我们可以用L方法动态设置语言变量，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">L(&#x27;LANG_VAR&#x27;,&#x27;语言定义&#x27;);</span><br></pre></td></tr></table></figure><p>语言定义不区分大小写，所以下面也是等效的：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">L(&#x27;lang_var&#x27;,&#x27;语言定义&#x27;);</span><br></pre></td></tr></table></figure><blockquote><p>获取语言变量</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$langVar = L(&#x27;LANG_VAR&#x27;);</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$langVar = L(&#x27;lang_var&#x27;);</span><br></pre></td></tr></table></figure><p>了解更多用法，可以查看<a href="http://www.thinkphp.cn/document/148.html">官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序初体验</title>
      <link href="/2016/09/30/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
      <url>/2016/09/30/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这几天朋友圈、知乎、空间各种社交平台都被微信小程序给刷屏了，为了体验下这个号称<strong>微信最后一波流量红利</strong>的小程序，自己也抽时间写了一个简单的小Demo和大家分享下。</p></blockquote><h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><hr><img src="http://oft2csb8a.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8FDEMO.gif" ><h3 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h3><hr><p>感兴趣的话可以查看源码：<a href="https://coding.net/u/NICEZYF/p/wechat-note/git">点我</a></p>]]></content>
      
      
      <categories>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown使用文档</title>
      <link href="/2016/08/01/MarkDown%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/"/>
      <url>/2016/08/01/MarkDown%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以更多其它的东西。</p><span id="more"></span><h3 id="1-制作一份待办事宜-Todo-列表"><a href="#1-制作一份待办事宜-Todo-列表" class="headerlink" title="1. 制作一份待办事宜 Todo 列表"></a>1. 制作一份待办事宜 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-%E5%BE%85%E5%8A%9E%E4%BA%8B%E5%AE%9C-todo-%E5%88%97%E8%A1%A8">Todo 列表</a></h3><ul><li><input disabled="" type="checkbox"> 支持以 PDF 格式导出文稿</li><li><input disabled="" type="checkbox"> 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li><li><input checked="" disabled="" type="checkbox"> 新增 Todo 列表功能</li><li><input checked="" disabled="" type="checkbox"> 修复 LaTex 公式渲染问题</li><li><input checked="" disabled="" type="checkbox"> 新增 LaTex 公式编号功能</li></ul><h3 id="2-书写一个质能守恒公式-LaTeX"><a href="#2-书写一个质能守恒公式-LaTeX" class="headerlink" title="2. 书写一个质能守恒公式[^LaTeX]"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E&#x3D;mc^2$$</p><h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3. 高亮一段代码[^code]"></a>3. 高亮一段代码[^code]</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="4-高效绘制-流程图"><a href="#4-高效绘制-流程图" class="headerlink" title="4. 高效绘制 流程图"></a>4. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-%E6%B5%81%E7%A8%8B%E5%9B%BE">流程图</a></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">st=&gt;start: Start</span><br><span class="line">op=&gt;operation: Your Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><h3 id="5-高效绘制-序列图"><a href="#5-高效绘制-序列图" class="headerlink" title="5. 高效绘制 序列图"></a>5. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-%E5%BA%8F%E5%88%97%E5%9B%BE">序列图</a></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure><h3 id="6-高效绘制-甘特图"><a href="#6-高效绘制-甘特图" class="headerlink" title="6. 高效绘制 甘特图"></a>6. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-%E7%94%98%E7%89%B9%E5%9B%BE">甘特图</a></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title 项目开发流程</span><br><span class="line">section 项目确定</span><br><span class="line">    需求分析       :a1, 2016-06-22, 3d</span><br><span class="line">    可行性报告     :after a1, 5d</span><br><span class="line">    概念验证       : 5d</span><br><span class="line">section 项目实施</span><br><span class="line">    概要设计      :2016-07-05  , 5d</span><br><span class="line">    详细设计      :2016-07-08, 10d</span><br><span class="line">    编码          :2016-07-15, 10d</span><br><span class="line">    测试          :2016-07-22, 5d</span><br><span class="line">section 发布验收</span><br><span class="line">    发布: 2d</span><br><span class="line">    验收: 3d</span><br></pre></td></tr></table></figure><h3 id="7-绘制表格"><a href="#7-绘制表格" class="headerlink" title="7. 绘制表格"></a>7. 绘制表格</h3><table><thead><tr><th>项目</th><th align="right">价格</th><th align="center">数量</th></tr></thead><tbody><tr><td>计算机</td><td align="right">$1600</td><td align="center">5</td></tr><tr><td>手机</td><td align="right">$12</td><td align="center">12</td></tr><tr><td>管线</td><td align="right">$1</td><td align="center">234</td></tr></tbody></table><h3 id="8-更详细语法说明"><a href="#8-更详细语法说明" class="headerlink" title="8. 更详细语法说明"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 [Cmd Markdown 简明语法手册][1]，进阶用户可以参考 [Cmd Markdown 高阶语法手册][2] 了解更多高级功能。</p><p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p><hr><h5 id="声明：本文章转载于作者-ghosert，来源于Cmd-MarkDown在线编辑器"><a href="#声明：本文章转载于作者-ghosert，来源于Cmd-MarkDown在线编辑器" class="headerlink" title="声明：本文章转载于作者 @ghosert，来源于Cmd MarkDown在线编辑器"></a>声明：本文章转载于作者 @ghosert，来源于<a href="https://www.zybuluo.com/mdeditor">Cmd MarkDown在线编辑器</a></h5>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你所不知道的WIN10隐藏功能</title>
      <link href="/2016/06/17/%E4%BD%A0%E6%89%80%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84WIN10%E9%9A%90%E8%97%8F%E5%8A%9F%E8%83%BD/"/>
      <url>/2016/06/17/%E4%BD%A0%E6%89%80%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84WIN10%E9%9A%90%E8%97%8F%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>作为一个非资深码农，Linux系统是自己常接触到的操作系统，掌握Linux也是IT从业者基本不可或缺的一项基础技能。</p><p>我们使用Linux系统通常有两种方式</p><ol><li>在电脑上直接安装Linux系统</li><li>在电脑上安装VM虚拟机，然后再虚拟机中安装Linux系统</li></ol><p>为了使用方便我们通常采用第二种方式。然而对于使用WIN10系统的友友将会有第三种选择方式，那就是WIN10系统内置了Linux子系统</p><span id="more"></span><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><h4 id="设置为开发者模式"><a href="#设置为开发者模式" class="headerlink" title="设置为开发者模式"></a>设置为开发者模式</h4><p>首先打开系统设置，设置为开发者模式<br><img src="http://oft2csb8a.bkt.clouddn.com/linux-img2.png" alt="设置"></p><h4 id="启用Linux"><a href="#启用Linux" class="headerlink" title="启用Linux"></a>启用Linux</h4><p>然后进入<code>控制面板</code>，点击进入<code>启用或关闭Window功能</code>并选中<code>适用于Linux的Win10子系统</code>选项</p><p><img src="http://oft2csb8a.bkt.clouddn.com/linux-img1.png" alt="linux"></p><h4 id="重启电脑"><a href="#重启电脑" class="headerlink" title="重启电脑"></a>重启电脑</h4><p><img src="http://oft2csb8a.bkt.clouddn.com/linux-img3.png" alt="reboot"></p><h4 id="安装Linux"><a href="#安装Linux" class="headerlink" title="安装Linux"></a>安装Linux</h4><p>打开命令行工具，键入代码<code>bash</code>并确认<br><img src="http://oft2csb8a.bkt.clouddn.com/linux-img4.png" alt="这里写图片描述"></p><h5 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h5><p>安装过程会稍微有点长，安装成功后便可以进入<code>bash</code>模式操作了（由于本人渣网原因，个人电脑没有安装成功，在这里临时引用一张网友的图片）</p><p><img src="http://oft2csb8a.bkt.clouddn.com/linux-img5.jpg" alt="这里写图片描述"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>Windows 10 的 Linux Bash 支持「并不是使用虚拟机&#x2F;模拟器」实现的，而是嵌入一个完整的 Ubuntu Linux 环境。技术上是实时将 Linux 的系统调用转换为 Windows 的系统调用，你可以把它看做是 Wine 是一种反向技术。微软将其称为「Windows 下的 Linux 子系统」 (Windows Subsystem for Linux)。</p><p>对于熟悉 Linux 命令的朋友，以后只需在 Windows 10 的命令行窗口里输入 bash 回车即可进入 &#x2F;bin&#x2F;bash 的环境了，然后你就可以使用数以万计的 Ubuntu 软件库中的程序，包括熟悉的 apt-get、ssh、rsync、grep、git、vim、emacs、tar、php、mysql、python、wget、curl、gcc、diff、patch、sort、awk、sed、gpg 等等等。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅析CSS3中calc计算属性</title>
      <link href="/2016/04/09/%E6%B5%85%E6%9E%90CSS3%E4%B8%ADcalc%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7/"/>
      <url>/2016/04/09/%E6%B5%85%E6%9E%90CSS3%E4%B8%ADcalc%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>很多前端开发者通常在写CSS样式的时候并不一定会注意到<code>calc</code>这个好用的计算属性，尤其在配合<code>flexbox</code>进行页面布局的时候，只能用amazing来形容。</p></blockquote><h3 id="calc-语法"><a href="#calc-语法" class="headerlink" title="calc()语法"></a>calc()语法</h3><p>calc()语法非常简单，就像我们小时候学加 （+）、减（-）、乘（*）、除（&#x2F;）一样，使用数学表达式来表示</p><h3 id="calc-的运算规则"><a href="#calc-的运算规则" class="headerlink" title="calc()的运算规则"></a>calc()的运算规则</h3><p>calc()使用通用的数学运算规则，但是也提供更智能的功能：</p><ul><li>使用“+”、“-”、“*” 和 “&#x2F;”四则运算；</li><li>可以使用百分比、px、em、rem等单位；</li><li>可以混合使用各种单位进行计算；</li><li>表达式中有“+”和“-”时，其前后必须要有空格，如”widht: calc(12%+5em)”这种没有空格的写法是错误的；</li><li>表达式中有“*”和“&#x2F;”时，其前后可以没有空格，但建议留有空格。</li></ul><span id="more"></span><h3 id="calc-的兼容性"><a href="#calc-的兼容性" class="headerlink" title="calc()的兼容性"></a>calc()的兼容性</h3><p><img src="http://img.blog.csdn.net/20170409000547478?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1MTUwMDUyNzc5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h3 id="演示Demo"><a href="#演示Demo" class="headerlink" title="演示Demo"></a>演示Demo</h3><iframe width="100%" height="400" src="//jsfiddle.net/Aflier/ow8j32jn/1/embedded/result,html,css/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>]]></content>
      
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>站点错误代码整理（笔记）</title>
      <link href="/2016/04/08/%E7%AB%99%E7%82%B9%E9%94%99%E8%AF%AF%E4%BB%A3%E7%A0%81%E6%95%B4%E7%90%86%EF%BC%88%E7%AC%94%E8%AE%B0%EF%BC%89/"/>
      <url>/2016/04/08/%E7%AB%99%E7%82%B9%E9%94%99%E8%AF%AF%E4%BB%A3%E7%A0%81%E6%95%B4%E7%90%86%EF%BC%88%E7%AC%94%E8%AE%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>Successful Client Requests成功的客户端请求200<br>OK——201<br>Created——确定。<br>客户端请求已成功202<br>Accepted——接受203<br>Non-Authorative Information——非权威性信息204<br>No Content——无内容205<br>Reset Content——重置内容206<br>Partial Content——部分内容</p><span id="more"></span><p>Client Request Redirected——客户端请求重定向300<br>Multiple Choices——多种选择301<br>Moved Permanently——永久移动302<br>Moved Temporarily——临时移动303<br>See Other——参见其他304<br>Not Modified——未修改305<br>Use Proxy——使用代理307-临时重定向</p><p>Client Request Errors——客户端请求错误400<br>Bad Request——错误的请求401<br>Authorization Required——需要授权402<br>Payment Required (not used yet)——需要付款(尚未使用)403<br>Forbidden——禁止403.1-执行访问被禁止。 403.2-读访问被禁止。 403.3-写访问被禁止。 403.4-要求SSL。 403.5-要求SSL128。 403.6-IP地址被拒绝。 403.7-要求客户端证书。 403.8-站点访问被拒绝。 403.9-用户数过多。 403.10-配置无效。 403.11-密码更改。 403.12-拒绝访问映射表。 403.13-客户端证书被吊销。 403.14-拒绝目录列表。 403.15-超出客户端访问许可。 403.16-客户端证书不受信任或无效。 403.17-客户端证书已过期或尚未生效。 403.18-在当前的应用程序池中不能执行所请求的URL。这个错误代码为IIS6.0所专用。 403.19-不能为这个应用程序池中的客户端执行CGI。这个错误代码为IIS6.0所专用。 403.20-Passport登录失败。这个错误代码为IIS6.0所专用。404 Not Found——未找到404.0-(无)–没有找到文件或目录。 404.1-无法在所请求的端口上访问Web站点。 404.2-Web服务扩展锁定策略阻止本请求。 404.3-MIME映射策略阻止本请求。405 Method Not Allowed——用来访问本页面的HTTP谓词不被允许406 Not Acceptable (encoding)——不接受(编码)407 Proxy Authentication Required——需要代理授权408 Request Timed Out——请求超时409 Conflicting Request——冲突的请求410 Gone——消失411 Content Length Required——内容所需长度412 Precondition Failed——前提条件失败413 Request Entity Too Long——请求实体过长414 Request URI Too Long——请求URI太长415 Unsupported Media Type——不支持的媒体类型</p><p>Server Errors——服务器错误500<br>Internal Server Error——内部服务器错误501<br>Not Implemented——未实现502<br>Bad Gateway——错误网关503<br>Service Unavailable——服务不可用504<br>Gateway Timeout——网关超时505<br>HTTP Version Not Supported——HTTP版本不受支持</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何把使用Navicat把Excel表格中时间日期以**dateTime**格式导入**MySQL**数据库</title>
      <link href="/2015/11/10/%E5%A6%82%E4%BD%95%E6%8A%8A%E4%BD%BF%E7%94%A8Navicat%E6%8A%8AExcel%E8%A1%A8%E6%A0%BC%E4%B8%AD%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E4%BB%A5dateTime%E6%A0%BC%E5%BC%8F%E5%AF%BC%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2015/11/10/%E5%A6%82%E4%BD%95%E6%8A%8A%E4%BD%BF%E7%94%A8Navicat%E6%8A%8AExcel%E8%A1%A8%E6%A0%BC%E4%B8%AD%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E4%BB%A5dateTime%E6%A0%BC%E5%BC%8F%E5%AF%BC%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天往数据库导入数据的时候忽然遇到一个很坑爹的问题，导入数据的时候把<code>create_date</code>字段属性设置为<code>dateTime</code>格式，结果：</p><p><img src="http://oft2csb8a.bkt.clouddn.com/mysql-img01.png" alt="error"></p><span id="more"></span><p>导入的时间全部是<code>0000-00-00 00:00:00</code>,坑爹啊有木有！接下来开始我们的埋坑之旅。。。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>解决方法其实很简单</p><ol><li>首先我们在导入数据的时候把<code>create_date</code>字段属性设置为<code>varchar</code>（字符串）格式，然后导入数据。</li><li>这时候我们会发现我们导入时间数据成功，不过数据格式是字符串格式。</li><li>接下来我们只需要进行最关键的一步就可以解决问题了，在命令行输入代码：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE taoyou CHANGE create_date create_date DATETIME</span><br></pre></td></tr></table></figure>接下来我们就会发现：</li></ol><p><img src="http://oft2csb8a.bkt.clouddn.com/mysql-img02.png" alt="error"></p><p>问题完美解决！现在查表时获得的便是时间格式，而不是字符串格式了。。。</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在MySQl数据库中给已有的数据表添加自增ID？</title>
      <link href="/2015/09/08/%E5%A6%82%E4%BD%95%E5%9C%A8MySQl%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%BB%99%E5%B7%B2%E6%9C%89%E7%9A%84%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%A2%9EID%EF%BC%9F/"/>
      <url>/2015/09/08/%E5%A6%82%E4%BD%95%E5%9C%A8MySQl%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%BB%99%E5%B7%B2%E6%9C%89%E7%9A%84%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%A2%9EID%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于使用MySQL数据库还没有多久的缘故，在搭建后台往数据库导入数据的时候发现新增的表单是没有自增<code>id</code>的，因次就有了上面这个问题。</p></blockquote><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>1、给某一张表先增加一个字段,这里我们就以<strong>node_table</strong>这张表来举例，在数据库命令行输入下面指令 ：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table node_table add id int</span><br></pre></td></tr></table></figure><span id="more"></span><p>2、更改<code>id</code>字段属性为自增属性，在数据库命令行输入下面指令 ：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table `node_table` change id id int not null auto_increment primary key; </span><br></pre></td></tr></table></figure><p>这样我们就可以很轻松的给<strong>node_table</strong>这张表添加了自增id。</p><h2 id="基础知识拓展-数据库表操作"><a href="#基础知识拓展-数据库表操作" class="headerlink" title="基础知识拓展(数据库表操作)"></a>基础知识拓展(数据库表操作)</h2><h4 id="create创建数据库表"><a href="#create创建数据库表" class="headerlink" title="create创建数据库表"></a>create创建数据库表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table tbl_name(create_definition,...) [type =table_type] </span><br><span class="line">create_definition:col_name type [not null | null][default default_value] [auto_increment][primary_key]</span><br></pre></td></tr></table></figure><p>create table是固定的关键字，后面紧跟要创建的表的名称，括号里面是字段的内容，内容可选有：是否为空，是否有默认值，是否为主键，是否自增长等等，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table test01_02(id varchar(50) not null auto_increment primary key,</span><br><span class="line">name nvarchar(40) null default &quot;002&quot;,</span><br><span class="line">age int(5)null default 444);</span><br></pre></td></tr></table></figure><h3 id="select创建数据库表"><a href="#select创建数据库表" class="headerlink" title="select创建数据库表"></a>select创建数据库表</h3><p>用select 语句来创建，看下面语法:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table tb_new_name select * from tb_old_name;</span><br></pre></td></tr></table></figure><p>上述语句表示，从后者的表中复制一份，添加到新的数据库表中，前面是新的数据库表，之前是不存在的。例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table test01_03 select * from test01_01;</span><br></pre></td></tr></table></figure><h3 id="alter修改表结构"><a href="#alter修改表结构" class="headerlink" title="alter修改表结构"></a>alter修改表结构</h3><p>改变一下现有表的结构</p><blockquote><p>增加列</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table tbl_name add col_name type</span><br></pre></td></tr></table></figure><p>例如增加一个weight列:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table test01_01 add weight int;</span><br></pre></td></tr></table></figure><blockquote><p>修改列</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table test01_01 modify weight varchar(50);</span><br></pre></td></tr></table></figure><blockquote><p>删除列</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table test01_01 drop weight;</span><br></pre></td></tr></table></figure><p>另外一种常用方式，例如:</p><blockquote><p>给列更名</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table test01_01 change weight wei int;</span><br></pre></td></tr></table></figure><blockquote><p>给表更名</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table test01_01 rename test01_04; </span><br></pre></td></tr></table></figure><h3 id="drop删除数据库表"><a href="#drop删除数据库表" class="headerlink" title="drop删除数据库表"></a>drop删除数据库表</h3><p>drop table删除一个或多个数据库表。语法如下:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop table [if exists] tbl_name [, tbl_name,...] </span><br></pre></td></tr></table></figure><p>例如删除test01_04这个表,要删除多个表，在后面用逗号隔开即可。例句：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop table if exists test01_04; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅析User Agent Stylesheet属性</title>
      <link href="/2015/08/07/%E6%B5%85%E6%9E%90User%20Agent%20Stylesheet%20%E5%B1%9E%E6%80%A7/"/>
      <url>/2015/08/07/%E6%B5%85%E6%9E%90User%20Agent%20Stylesheet%20%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>今天无意间查看页面样式的时候无意间发现了<code>User Agent Stylesheet</code>,查询之后发现这个属性是浏览器默认样式</p></blockquote><p><img src="http://oft2csb8a.bkt.clouddn.com/css-img.png" alt="代码图"></p><span id="more"></span><h3 id="如何修改浏览器默认样式"><a href="#如何修改浏览器默认样式" class="headerlink" title="如何修改浏览器默认样式"></a>如何修改浏览器默认样式</h3><blockquote><p>通常浏览器默认样式优先度相对比较低，因此我们如果需要修改某一样式的话只需要在自己代码中直接从写样式属性就可以了</p></blockquote><p>例如：修改<code>input</code>下面<code>background-color</code>样式,我们只需要在代码中写：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们就可以很轻松的把背景色从默认白色更改为黄色</p>]]></content>
      
      
      <categories>
          
          <category> CSS3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1064 - You have an error in your SQL syntax; check the manual that correspon解决办法</title>
      <link href="/2015/06/12/1064%20-%20You%20have%20an%20error%20in%20your%20SQL%20syntax;%20check%20the%20manual%20that%20correspon%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/2015/06/12/1064%20-%20You%20have%20an%20error%20in%20your%20SQL%20syntax;%20check%20the%20manual%20that%20correspon%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>刚接触数据库遇到了很多幼稚的问题，就这样踏上了漫漫的踩坑之路</p></blockquote><h3 id="先抛出一个常见的低级错误"><a href="#先抛出一个常见的低级错误" class="headerlink" title="先抛出一个常见的低级错误"></a>先抛出一个常见的低级错误</h3><p><img src="http://oft2csb8a.bkt.clouddn.com/mysql-img3.png" alt="erro"></p><span id="more"></span><p>很多初次接触数据库，又没有大腿可抱的友友估计和我一样第一时间就懵逼了，还好度娘比较给力</p><h3 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h3><p>设置字符串属性时<strong>忘记设置字符串长度了</strong>，<strong>忘记设置字符串长度了</strong>，<strong>忘记设置字符串长度了</strong>，重要的事情说三遍。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>在<code>VARCHAR</code>后面设置字符串长度即可</p><p><img src="http://oft2csb8a.bkt.clouddn.com/mysql-img04.png" alt="erro"></p><p>问题完美解决！</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS3自定义滚动条样式 -webkit-scrollbar</title>
      <link href="/2015/05/16/CSS3%E8%87%AA%E5%AE%9A%E4%B9%89%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%A0%B7%E5%BC%8F/"/>
      <url>/2015/05/16/CSS3%E8%87%AA%E5%AE%9A%E4%B9%89%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%A0%B7%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有没有觉得浏览器自带的原始滚动条很不美观，同时也有看到很多网站的自定义滚动条显得高端，就连chrome32.0开发板都抛弃了原始的滚动条，美观多了。那webkit浏览器是如何自定义滚动条的呢？</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>webkit支持拥有overflow属性的区域，列表框，下拉菜单，textarea的滚动条自定义样式，所以用处还是挺大的。当然，兼容所有浏览器的滚动条样式目前是不存在的。</p><span id="more"></span><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>来看看这个滚动条<a href="http://www.xuanfengge.com/demo/201311/scroll/css3-scroll.html">demo2（纯CSS3版）</a></p><h2 id="滚动条组成"><a href="#滚动条组成" class="headerlink" title="滚动条组成"></a>滚动条组成</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">::-webkit-scrollbar 滚动条整体部分</span><br><span class="line">::-webkit-scrollbar-thumb  滚动条里面的小方块，能向上向下移动（或往左往右移动，取决于是垂直滚动条还是水平滚动条）</span><br><span class="line">::-webkit-scrollbar-track  滚动条的轨道（里面装有Thumb）</span><br><span class="line">::-webkit-scrollbar-button 滚动条的轨道的两端按钮，允许通过点击微调小方块的位置。</span><br><span class="line">::-webkit-scrollbar-track-piece 内层轨道，滚动条中间部分（除去）</span><br><span class="line">::-webkit-scrollbar-corner 边角，即两个滚动条的交汇处</span><br><span class="line">::-webkit-resizer 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件</span><br></pre></td></tr></table></figure><h2 id="简洁版"><a href="#简洁版" class="headerlink" title="简洁版"></a>简洁版</h2><p>这里就不贴出详细代码了，demo里面可以通过查看源码寻找具体样式的设置。来看看demo2中第二个滚动条的样式</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/</span>  </span><br><span class="line">::-webkit-scrollbar  </span><br><span class="line">&#123;  </span><br><span class="line">    width: <span class="number">16px</span>;  </span><br><span class="line">    <span class="attribute">height</span>: <span class="number">16px</span>;  </span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#F5F5F5</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">/*定义滚动条轨道 内阴影+圆角*/</span>  </span><br><span class="line">::-webkit-scrollbar-track  </span><br><span class="line">&#123;  </span><br><span class="line">    -webkit-box-shadow: inset <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.3</span>);  </span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;  </span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#F5F5F5</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">/*定义滑块 内阴影+圆角*/</span>  </span><br><span class="line">::-webkit-scrollbar-thumb  </span><br><span class="line">&#123;  </span><br><span class="line">    border-radius: <span class="number">10px</span>;  </span><br><span class="line">    -webkit-<span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">3</span>);  </span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#555</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="详细设置"><a href="#详细设置" class="headerlink" title="详细设置"></a>详细设置</h2><p>定义滚动条就是利用伪元素与伪类，那什么是伪元素和伪类呢？</p><p>伪类大家应该很熟悉:link,:focus,:hover，此外CSS3中又增加了许多伪类选择器，如:nth-child，:last-child，:nth-last-of-type()等。</p><p>CSS中的伪元素大家以前看过：:first-line,:first-letter,:before,:after。那么在CSS3中，伪元素进行了调整，在以前的基础上增加了一个“：”也就是现在变成了“::first-letter,::first-line,::before,::after”，另外CSS3还增加了一个“::selection”。两个“：：”和一个“：”在css3中主要用来区分伪类和伪元素。</p><p>webkit的伪类和伪元素的实现很强，可以把滚动条当成一个页面元素来定义，再结合一些高级的CSS3属性，比如渐变、圆角、RGBa等等。然后如果有些地方要用图片，可以把图片也可以转换成Base64，不然每次都得加载那个多个图片，增加请求数。</p><p>任何对象都可以设置：边框、阴影、背景图片等等，创建的滚动条任然会按照操作系统本身的设置来完成其交互的行为。下面的伪类可以应用到上面的伪元素中。有点小复杂，具体怎么写可以看第一个demo，那里也有注释。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">:horizontal  </span><br><span class="line">//horizontal伪类适用于任何水平方向上的滚动条  </span><br><span class="line">  </span><br><span class="line">:vertical  </span><br><span class="line">//vertical伪类适用于任何垂直方向的滚动条  </span><br><span class="line">  </span><br><span class="line">:decrement  </span><br><span class="line">//decrement伪类适用于按钮和轨道碎片。表示递减的按钮或轨道碎片，例如可以使区域向上或者向右移动的区域和按钮  </span><br><span class="line">  </span><br><span class="line">:increment  </span><br><span class="line">//increment伪类适用于按钮和轨道碎片。表示递增的按钮或轨道碎片，例如可以使区域向下或者向左移动的区域和按钮  </span><br><span class="line">  </span><br><span class="line">:start  </span><br><span class="line">//start伪类适用于按钮和轨道碎片。表示对象（按钮 轨道碎片）是否放在滑块的前面  </span><br><span class="line">  </span><br><span class="line">:end  </span><br><span class="line">//end伪类适用于按钮和轨道碎片。表示对象（按钮 轨道碎片）是否放在滑块的后面  </span><br><span class="line">  </span><br><span class="line">:double-button  </span><br><span class="line">//double-button伪类适用于按钮和轨道碎片。判断轨道结束的位置是否是一对按钮。也就是轨道碎片紧挨着一对在一起的按钮。  </span><br><span class="line">  </span><br><span class="line">:single-button  </span><br><span class="line">//single-button伪类适用于按钮和轨道碎片。判断轨道结束的位置是否是一个按钮。也就是轨道碎片紧挨着一个单独的按钮。  </span><br><span class="line">  </span><br><span class="line">:no-button  </span><br><span class="line">no-button伪类表示轨道结束的位置没有按钮。  </span><br><span class="line">  </span><br><span class="line">:corner-present  </span><br><span class="line">//corner-present伪类表示滚动条的角落是否存在。  </span><br><span class="line">  </span><br><span class="line">:window-inactive  </span><br><span class="line">//适用于所有滚动条，表示包含滚动条的区域，焦点不在该窗口的时候。  </span><br><span class="line">  </span><br><span class="line">::-webkit-scrollbar-track-piece:start &#123;  </span><br><span class="line">/*滚动条上半边或左半边*/  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">::-webkit-scrollbar-thumb:window-inactive &#123;  </span><br><span class="line">/*当焦点不在当前区域滑块的状态*/  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">::-webkit-scrollbar-button:horizontal:decrement:hover &#123;  </span><br><span class="line">/*当鼠标在水平滚动条下面的按钮上的状态*/  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>原文地址：<a href="http://www.xuanfengge.com/css3-webkit-scrollbar.html">http://www.xuanfengge.com/css3-webkit-scrollbar.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git上传指定文件夹和文件</title>
      <link href="/2015/05/06/Git%E4%B8%8A%E4%BC%A0%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E5%A4%B9%E5%92%8C%E6%96%87%E4%BB%B6/"/>
      <url>/2015/05/06/Git%E4%B8%8A%E4%BC%A0%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E5%A4%B9%E5%92%8C%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="创建-gitignore文件"><a href="#创建-gitignore文件" class="headerlink" title="创建.gitignore文件"></a>创建.gitignore文件</h2><hr><ol><li><p>在文件夹下右键鼠标打开<strong>GitBash</strong></p></li><li><p>在<strong>GitBash</strong>中键入以下指令：</p><pre><code> touch .gitignore</code></pre></li><li><p>在当前目录下生成**.gitignore**文件</p></li></ol><span id="more"></span><h2 id="配置-gitignore文件"><a href="#配置-gitignore文件" class="headerlink" title="配置.gitignore文件"></a>配置.gitignore文件</h2><h3 id="配置语法"><a href="#配置语法" class="headerlink" title="配置语法"></a>配置语法</h3><blockquote><p>以斜杠“&#x2F;”开头表示目录；</p></blockquote><blockquote><p>以星号“*”通配多个字符；</p></blockquote><blockquote><p>以问号“?”通配单个字符</p></blockquote><blockquote><p>以方括号“[]”包含单个字符的匹配列表；</p></blockquote><blockquote><p>以叹号“!”表示不忽略(跟踪)匹配到的文件或目录；</p></blockquote><h3 id="示例文件"><a href="#示例文件" class="headerlink" title="示例文件"></a>示例文件</h3><p>（1）规则：<code>fd1/*</code></p><blockquote><p>说明：忽略目录 fd1 下的全部内容；注意，不管是根目录下的 &#x2F;fd1&#x2F; 目录，还是某个子目录 &#x2F;child&#x2F;fd1&#x2F; 目录，都会被忽略；</p></blockquote><p>（2）规则：<code>/fd1/*</code></p><blockquote><p>说明：忽略根目录下的 &#x2F;fd1&#x2F; 目录的全部内容；</p></blockquote><p>（3）规则：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">!.gitignore</span><br><span class="line">!/fw/bin/</span><br><span class="line">!/fw/sf/</span><br></pre></td></tr></table></figure><blockquote><p>说明：忽略全部内容，但是不忽略 .gitignore 文件、根目录下的 &#x2F;fw&#x2F;bin&#x2F; 和 &#x2F;fw&#x2F;sf&#x2F; 目录；</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>src refspec xxx does not match any 错误处理办法</title>
      <link href="/2015/04/15/src%20refspec%20xxx%20does%20not%20match%20any%20%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E5%8A%9E%E6%B3%95/"/>
      <url>/2015/04/15/src%20refspec%20xxx%20does%20not%20match%20any%20%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在我们使用Git往GitHub上面push自己项目代码的时候往往会遇到上面的问题，其实解决方法很简单</p></blockquote><h4 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h4><p>在项目文件夹下右键鼠标打开<code>Git Bash</code>,输入代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><span id="more"></span><p>初始化项目成功</p><hr><h4 id="添加远端，即远程库"><a href="#添加远端，即远程库" class="headerlink" title="添加远端，即远程库"></a>添加远端，即远程库</h4><p>在<code>Git Bash</code>下面继续输入代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add xxx(远端名) git@github.com:xxx/xxx.git</span><br></pre></td></tr></table></figure><p>创建远端成功</p><hr><h4 id="创建本地库分支并切换到当前分支"><a href="#创建本地库分支并切换到当前分支" class="headerlink" title="创建本地库分支并切换到当前分支"></a>创建本地库分支并切换到当前分支</h4><p>在<code>Git Bash</code>下面输入代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout -b xxx(分支名)</span><br></pre></td></tr></table></figure><p>创建分支并切换成功</p><hr><h4 id="提交代码到本地库"><a href="#提交代码到本地库" class="headerlink" title="提交代码到本地库"></a>提交代码到本地库</h4><p>这里建议使用<strong>Tortoise Git</strong>工具直接提交代码到本地库当前分支</p><p>提交成功</p><hr><h4 id="Push代码到远端"><a href="#Push代码到远端" class="headerlink" title="Push代码到远端"></a>Push代码到远端</h4><p>最后，在<code>Git Bash</code>下面输入代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push xxx xxx</span><br></pre></td></tr></table></figure><p>OK，代码提交成功</p><blockquote><p>以上是我个人使用的解决方法，方法不唯一，仅供参考，转载麻烦注明出处</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MUI增加BeeCloud支付集成示例</title>
      <link href="/2015/03/01/MUI%E5%A2%9E%E5%8A%A0BeeCloud%E6%94%AF%E4%BB%98%E9%9B%86%E6%88%90%E7%A4%BA%E4%BE%8B/"/>
      <url>/2015/03/01/MUI%E5%A2%9E%E5%8A%A0BeeCloud%E6%94%AF%E4%BB%98%E9%9B%86%E6%88%90%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="BeeCloud简介"><a href="#BeeCloud简介" class="headerlink" title="BeeCloud简介"></a>BeeCloud简介</h2><p>DCloud和BeeCloud合作的支付业务，与普通的三方支付不同。</p><p>它仅需要工程师写前端App的js代码，调用Plus的原生支付接口进行支付宝和微信的原生支付，不需要服务器编写代码，即可收款到开发商自己的微信或支付宝的账户里。</p><p>需要注意钱并不流经DCloud或beecloud的服务器，开发商向微信和支付宝申请账户，最终用户支付的钱直接到达开发商在微信或支付宝里申请的账户。</p><span id="more"></span><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>1.在BeeCloud官网注册，并完成企业认证。</p><p>2.在BeeCloud控制台创建你的第一个APP。</p><p>3.配置您所需的支付渠道的支付参数</p><p>4.开始配置权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">manifest.json配置</span><br><span class="line"></span><br><span class="line">模块权限配置</span><br><span class="line"></span><br><span class="line">勾选payment模块</span><br><span class="line"></span><br><span class="line">SDK配置</span><br><span class="line"></span><br><span class="line">在plus.payment-支付中配置scheme</span><br><span class="line"></span><br><span class="line">支付宝支付</span><br><span class="line"></span><br><span class="line">自定义填写，推荐使用小写字符串，不能填写alipay,AliPay等关键字</span><br><span class="line"></span><br><span class="line">微信支付</span><br><span class="line"></span><br><span class="line">固定填写，微信开放平台创建应用的APPID</span><br></pre></td></tr></table></figure><p>5.代码实现</p><p>在页面中引入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">beecloud.js（ 在Hello mui里含有本文件）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">构建支付参数发起支付</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="声明：本文参考B5教程网整理发布，访问原文"><a href="#声明：本文参考B5教程网整理发布，访问原文" class="headerlink" title="声明：本文参考B5教程网整理发布，访问原文"></a>声明：本文参考B5教程网整理发布，<a href="http://www.bcty365.com/content-146-3144-1.html">访问原文</a></h5>]]></content>
      
      
      <categories>
          
          <category> MUI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebApp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WebApp开发Meta标签解析</title>
      <link href="/2015/02/18/WebApp%E5%BC%80%E5%8F%91Meta%E6%A0%87%E7%AD%BE%E8%A7%A3%E6%9E%90/"/>
      <url>/2015/02/18/WebApp%E5%BC%80%E5%8F%91Meta%E6%A0%87%E7%AD%BE%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h3 id="WebApp全屏模式："><a href="#WebApp全屏模式：" class="headerlink" title="WebApp全屏模式："></a>WebApp全屏模式：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no,minimal-ui&quot;&gt;</span><br></pre></td></tr></table></figure><p>注意：viewport 后面加上 minimal-ui 在safri 体现效果</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; /&gt;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="删除默认的苹果工具栏和菜单栏"><a href="#删除默认的苹果工具栏和菜单栏" class="headerlink" title="删除默认的苹果工具栏和菜单栏"></a>删除默认的苹果工具栏和菜单栏</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="设置web-app的放置主屏幕上icon文件路径"><a href="#设置web-app的放置主屏幕上icon文件路径" class="headerlink" title="设置web app的放置主屏幕上icon文件路径"></a>设置web app的放置主屏幕上icon文件路径</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://spion.blog.163.com/blog/iphone_milanoo.png&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="将不识别邮箱告诉设备忽略将页面中的数字识别为电话号码"><a href="#将不识别邮箱告诉设备忽略将页面中的数字识别为电话号码" class="headerlink" title="将不识别邮箱告诉设备忽略将页面中的数字识别为电话号码"></a>将不识别邮箱告诉设备忽略将页面中的数字识别为电话号码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot; /&gt;</span><br><span class="line">&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="把网页存为书签时，在手机HOME界面创建应用程序样式的图标"><a href="#把网页存为书签时，在手机HOME界面创建应用程序样式的图标" class="headerlink" title="把网页存为书签时，在手机HOME界面创建应用程序样式的图标"></a>把网页存为书签时，在手机HOME界面创建应用程序样式的图标</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;link rel=&quot;apple-touch-icon&quot; href=&quot;/static/images/identity/HTML5_Badge_64.png&quot; /&gt;</span><br><span class="line">&lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;/static/images/identity/HTML5_Badge_64.png&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="隐藏状态栏-x2F-设置状态栏颜色："><a href="#隐藏状态栏-x2F-设置状态栏颜色：" class="headerlink" title="隐藏状态栏&#x2F;设置状态栏颜色："></a>隐藏状态栏&#x2F;设置状态栏颜色：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black-translucent&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="safri-添加到主屏界面的显示标题："><a href="#safri-添加到主屏界面的显示标题：" class="headerlink" title="safri 添加到主屏界面的显示标题："></a>safri 添加到主屏界面的显示标题：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;apple-mobile-web-app-title&quot; content=&quot;应用标题&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="忽略自动识别数字为电话号码："><a href="#忽略自动识别数字为电话号码：" class="headerlink" title="忽略自动识别数字为电话号码："></a>忽略自动识别数字为电话号码：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="忽略自动识别邮箱账号："><a href="#忽略自动识别邮箱账号：" class="headerlink" title="忽略自动识别邮箱账号："></a>忽略自动识别邮箱账号：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="常用浏览器全屏设置："><a href="#常用浏览器全屏设置：" class="headerlink" title="常用浏览器全屏设置："></a>常用浏览器全屏设置：</h3><h5 id="UC强制竖屏"><a href="#UC强制竖屏" class="headerlink" title="UC强制竖屏"></a>UC强制竖屏</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;screen-orientation&quot; content=&quot;portrait&quot;&gt;</span><br></pre></td></tr></table></figure><h5 id="UC强制全屏"><a href="#UC强制全屏" class="headerlink" title="UC强制全屏"></a>UC强制全屏</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;</span><br></pre></td></tr></table></figure><h5 id="UC应用模式"><a href="#UC应用模式" class="headerlink" title="UC应用模式"></a>UC应用模式</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;browsermode&quot; content=&quot;application&quot;&gt;</span><br></pre></td></tr></table></figure><h5 id="QQ强制竖屏"><a href="#QQ强制竖屏" class="headerlink" title="QQ强制竖屏"></a>QQ强制竖屏</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;x5-orientation&quot; content=&quot;portrait&quot;&gt;</span><br></pre></td></tr></table></figure><h5 id="QQ强制全屏"><a href="#QQ强制全屏" class="headerlink" title="QQ强制全屏"></a>QQ强制全屏</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;</span><br></pre></td></tr></table></figure><h5 id="QQ应用模式"><a href="#QQ应用模式" class="headerlink" title="QQ应用模式"></a>QQ应用模式</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;x5-page-mode&quot; content=&quot;app&quot;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HTML5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebApp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图标字体运用以及其优势与劣势</title>
      <link href="/2015/02/15/%E5%9B%BE%E6%A0%87%E5%AD%97%E4%BD%93%E8%BF%90%E7%94%A8%E4%BB%A5%E5%8F%8A%E5%85%B6%E4%BC%98%E5%8A%BF%E4%B8%8E%E5%8A%A3%E5%8A%BF/"/>
      <url>/2015/02/15/%E5%9B%BE%E6%A0%87%E5%AD%97%E4%BD%93%E8%BF%90%E7%94%A8%E4%BB%A5%E5%8F%8A%E5%85%B6%E4%BC%98%E5%8A%BF%E4%B8%8E%E5%8A%A3%E5%8A%BF/</url>
      
        <content type="html"><![CDATA[<p>在做手机端Web App项目中,经常会遇到小图标在手机上显示比较模糊的问题，经过实践发现了一种比较好的解决方案，图标字体化。在微社区项目中，有很多小的Icon（图标），如分享、回复、赞、返回、话题、访问、箭头等，这些Icon（图标）一般都是纯色的。开始制作时考虑用双倍大小的Sprite图，通过CSS样式设置只显示二分之一尺寸，这样在Retina屏上显示的大小是正常的，一旦放大屏幕后图标又变得模糊不清，测试的效果不是很理想，后来又考虑多套图标适配方案、SVG矢量图等，都因为种种原因放弃掉了（如多套图标繁琐、Android 2.3不支持SVG格式等），为了解决以上问题，用到了图标字体， 通过查阅Icon Font相关技术博客和文章，并结合在项目中实际应用梳理出了图标字体化浅谈这篇文章，望对正在学习和使用的重构同学们有一个参考和帮助！文章内的内容参考了相关技术文章并加上自已的理解，错误在所难免，欢迎批评指正。下图为微社区用到的部分图标字体。</p><span id="more"></span><h2 id="使用图标字体的优势和劣势"><a href="#使用图标字体的优势和劣势" class="headerlink" title="使用图标字体的优势和劣势"></a>使用图标字体的优势和劣势</h2><p>字体图标除了图像清晰度之外，比位图还有哪些优势呢?</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、轻量性：一个图标字体比一系列的图像（特别是在Retina屏中使用双倍图像）要小。一旦图标字体加载了，图标就会马上渲染出来，不需要下载一个图像。可以减少HTTP请求，还可以配合HTML5离线存储做性能优化。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、灵活性：图标字体可以用过font-size属性设置其任何大小，还可以加各种文字效果，包括颜色、Hover状态、透明度、阴影和翻转等效果。可以在任何背景下显示。使用位图的话，必须得为每个不同大小和不同效果的图像输出一个不同文件。</span><br><span class="line"></span><br><span class="line">3、兼容性：网页字体支持所有现代浏览器，包括IE低版本。</span><br></pre></td></tr></table></figure><p>除了以上优势之外，当然也有劣势</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、图标字体只能被渲染成单色或者CSS3的渐变色，由于此限制使得它不能广泛使用。</span><br><span class="line"></span><br><span class="line">2、使用版权上有限制，有好多字体是收费的。当然也有很多免费开源的精美字体图标供下载使用。</span><br><span class="line"></span><br><span class="line">3、创作自已的字体图标很费时间，重构人员后期维护的成本偏高</span><br></pre></td></tr></table></figure><h2 id="如何获取图标字体及使用"><a href="#如何获取图标字体及使用" class="headerlink" title="如何获取图标字体及使用"></a>如何获取图标字体及使用</h2><p>要想获取图标字体，不外乎两种途径，其一找到付费网站购买，其二就是到免费网站下载，提供免费下载网站很多，神飞曾经发表过一篇博客icon font大搜罗，上面罗列好多的免费网站的地址，大家有兴趣可以去下载。如何使用呢？一般来说，有3种方法：</p><h3 id="1、把字符直接写在HTML文件里；"><a href="#1、把字符直接写在HTML文件里；" class="headerlink" title="1、把字符直接写在HTML文件里；"></a>1、把字符直接写在HTML文件里；</h3><p>这个方法是简单比较直观，见如下代码，用一个<span>元素去包含一个字符“!”(或&amp;#x0021;)，然后给这个<span>添加一个类。这个字母在选定的字体中被映射到一个特定的图标。</p><pre><code>&lt;a href=”javascript:;”&gt;&lt;span cass=”icon”&gt;!&lt;/span&gt;赞&lt;/a&gt;&lt;a href=”javascript:;”&gt;&lt;span cass=”icon”&gt;&amp;#x0021;&lt;/span&gt;赞&lt;/a&gt;</code></pre><p>为了显示效果，还需要编写样式类.Icon来决定此字符以哪种字体来显示，如下：</p><pre><code>.icon &#123;font-family: ‘ your-incofont -name ‘;&#125;</code></pre><h3 id="2、使用css来生成内容；"><a href="#2、使用css来生成内容；" class="headerlink" title="2、使用css来生成内容；"></a>2、使用css来生成内容；</h3><p>它不直接在HTML文件里添加字符，而是用CSS来生成字符内容。代码如下</p><pre><code>&lt;a href=”javascript:;” class=”icon praise”&gt;赞&lt;/a&gt;</code></pre><p>可以看出，添加了一个类名“praise”。神奇的事就发生在CSS中，跟上面一样，第一步先定义好字体，然后使用:before伪元素来产生字符图标，其中“before”表示字符出现在左边，“after”则出现在右边。</p><pre><code>.icon &#123;font-family:’ your-incofont-name’ ;&#125;.praise:before &#123;content: “f00a”; &#125;</code></pre><h3 id="3、用data-icon属性"><a href="#3、用data-icon属性" class="headerlink" title="3、用data-icon属性"></a>3、用data-icon属性</h3><p>还有一种跟上面相似方法是使用HTML5的“data-”属性。如：创建一个data-icon属性。aria-hidden&#x3D;”true”是为了防止被阅读器直接把字符读取出来，不是对所有的平台都奏效。</p><pre><code>&lt;a href=”javascript:;”&gt;&lt;span aria-hidden=”true” data-icon=”!”&gt;&lt;/span&gt;赞&lt;/a&gt;</code></pre><p>结合一些搭配使用的CSS属性，可以写成如下代码</p><pre><code>[data-icon]:before &#123;font-family: ‘ your-incofont-name’; content: attr(data-icon);speak:none;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fonticon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack 入门指南</title>
      <link href="/2015/01/31/webpack%20%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2015/01/31/webpack%20%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-webpack？"><a href="#什么是-webpack？" class="headerlink" title="什么是 webpack？"></a>什么是 webpack？</h2><p>webpack是近期最火的一款模块加载器兼打包工具，它能把各种资源，例如JS（含JSX）、coffee、样式（含less&#x2F;sass）、图片等都作为模块来使用和处理。</p><p>我们可以直接使用 require(XXX) 的形式来引入各模块，即使它们可能需要经过编译（比如JSX和sass），但我们无须在上面花费太多心思，因为 webpack 有着各种健全的加载器（loader）在默默处理这些事情，这块我们后续会提到。</p><p>你可以不打算将其用在你的项目上，但没有理由不去掌握它，因为以近期 Github 上各大主流的（React相关）项目来说，它们仓库上所展示的示例已经是基于 webpack 来开发的，比如 React-Boostrap 和 Redux。</p><p>webpack的官网是 <a href="http://webpack.github.io/">http://webpack.github.io/</a> ，文档地址是 <a href="http://webpack.github.io/docs/">http://webpack.github.io/docs/</a> ，想对其进行更详细了解的可以点进去瞧一瞧。</p><span id="more"></span><h2 id="webpack-的优势"><a href="#webpack-的优势" class="headerlink" title="webpack 的优势"></a>webpack 的优势</h2><p>其优势主要可以归类为如下几个：</p><ol><li>webpack 是以 commonJS 的形式来书写脚本滴，但对 AMD&#x2F;CMD 的支持也很全面，方便旧项目进行代码迁移。</li><li>能被模块化的不仅仅是 JS 了。</li><li>开发便捷，能替代部分 grunt&#x2F;gulp 的工作，比如打包、压缩混淆、图片转base64等。</li><li>扩展性强，插件机制完善，特别是支持 React 热插拔（见 react-hot-loader ）的功能让人眼前一亮。</li></ol><p>我们谈谈第一点。以 AMD&#x2F;CMD 模式来说，鉴于模块是异步加载的，所以我们常规需要使用 define 函数来帮我们搞回调：</p><pre><code>define([&#39;package/lib&#39;], function(lib)&#123;function foo()&#123;    lib.log(&#39;hello world!&#39;);&#125;return &#123;    foo: foo&#125;;&#125;);</code></pre><p>另外为了可以兼容 commonJS 的写法，我们也可以将 define 这么写：</p><pre><code>define(function (require, exports, module)&#123;    var someModule = require(&quot;someModule&quot;);    var anotherModule = require(&quot;anotherModule&quot;);        someModule.doTehAwesome();    anotherModule.doMoarAwesome();    exports.asplode = function ()&#123;        someModule.doTehAwesome();        anotherModule.doMoarAwesome();    &#125;;&#125;);</code></pre><p>然而对 webpack 来说，我们可以直接在上面书写 commonJS 形式的语法，无须任何 define （毕竟最终模块都打包在一起，webpack 也会最终自动加上自己的加载器）：</p><pre><code>var someModule = require(&quot;someModule&quot;);    var anotherModule = require(&quot;anotherModule&quot;);        someModule.doTehAwesome();    anotherModule.doMoarAwesome();    exports.asplode = function ()&#123;        someModule.doTehAwesome();        anotherModule.doMoarAwesome(); &#125;;</code></pre><p>这样撸码自然更简单，跟回调神马的说 byebye~<br>不过即使你保留了之前 define 的写法也是可以滴，毕竟 webpack 的兼容性相当出色，方便你旧项目的模块直接迁移过来。  </p><h2 id="安装和配置"><a href="#安装和配置" class="headerlink" title="安装和配置"></a>安装和配置</h2><h3 id="一-安装"><a href="#一-安装" class="headerlink" title="一. 安装"></a>一. 安装</h3><p>我们常规直接使用 npm 的形式来安装：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install webpack -g</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">当然如果常规项目还是把依赖写入 package.json 包去更人性化：</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>$ npm init<br>$ npm install webpack –save-dev</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">### 二. 配置</span><br><span class="line"></span><br><span class="line">每个项目下都必须配置有一个 webpack.config.js ，它的作用如同常规的 gulpfile.js/Gruntfile.js ，就是一个配置项，告诉 webpack 它需要做什么。</span><br><span class="line"></span><br><span class="line">我们看看下方的示例：</span><br><span class="line"></span><br><span class="line">    var webpack = require(&#x27;webpack&#x27;);</span><br><span class="line">    var commonsPlugin = new webpack.optimize.CommonsChunkPlugin(&#x27;common.js&#x27;);</span><br><span class="line"></span><br><span class="line">    module.exports = &#123;</span><br><span class="line">        //插件项</span><br><span class="line">        plugins: [commonsPlugin],</span><br><span class="line">        //页面入口文件配置</span><br><span class="line">        entry: &#123;</span><br><span class="line">            index : &#x27;./src/js/page/index.js&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        //入口文件输出配置</span><br><span class="line">        output: &#123;</span><br><span class="line">            path: &#x27;dist/js/page&#x27;,</span><br><span class="line">            filename: &#x27;[name].js&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        module: &#123;</span><br><span class="line">            //加载器配置</span><br><span class="line">            loaders: [</span><br><span class="line">                &#123; test: /\.css$/, loader: &#x27;style-loader!css-loader&#x27; &#125;,</span><br><span class="line">                &#123; test: /\.js$/, loader: &#x27;jsx-loader?harmony&#x27; &#125;,</span><br><span class="line">                &#123; test: /\.scss$/, loader: &#x27;style!css!sass?sourceMap&#x27;&#125;,</span><br><span class="line">                &#123; test: /\.(png|jpg)$/, loader: &#x27;url-loader?limit=8192&#x27;&#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        //其它解决方案配置</span><br><span class="line">        resolve: &#123;</span><br><span class="line">            root: &#x27;E:/github/flux-example/src&#x27;, //绝对路径</span><br><span class="line">            extensions: [&#x27;&#x27;, &#x27;.js&#x27;, &#x27;.json&#x27;, &#x27;.scss&#x27;],</span><br><span class="line">            alias: &#123;</span><br><span class="line">                AppStore : &#x27;js/stores/AppStores.js&#x27;,</span><br><span class="line">                ActionType : &#x27;js/actions/ActionType.js&#x27;,</span><br><span class="line">                AppAction : &#x27;js/actions/AppAction.js&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">⑴ plugins 是插件项，这里我们使用了一个 CommonsChunkPlugin 的插件，它用于提取多个入口文件的公共脚本部分，然后生成一个 common.js 来方便多页面之间进行复用。</span><br><span class="line"></span><br><span class="line">⑵ entry 是页面入口文件配置，output 是对应输出项配置（即入口文件最终要生成什么名字的文件、存放到哪里），其语法大致为：</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        entry: &#123;</span><br><span class="line">            page1: &quot;./page1&quot;,</span><br><span class="line">            //支持数组形式，将加载数组中的所有模块，但以最后一个模块作为输出</span><br><span class="line">            page2: [&quot;./entry1&quot;, &quot;./entry2&quot;]</span><br><span class="line">        &#125;,</span><br><span class="line">        output: &#123;</span><br><span class="line">            path: &quot;dist/js/page&quot;,</span><br><span class="line">            filename: &quot;[name].bundle.js&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">该段代码最终会生成一个 page1.bundle.js 和 page2.bundle.js，并存放到 ./dist/js/page 文件夹下。</span><br><span class="line"></span><br><span class="line">⑶ module.loaders 是最关键的一块配置。它告知 webpack 每一种文件都需要使用什么加载器来处理：</span><br><span class="line"></span><br><span class="line">    module: &#123;</span><br><span class="line">            //加载器配置</span><br><span class="line">            loaders: [</span><br><span class="line">                //.css 文件使用 style-loader 和 css-loader 来处理</span><br><span class="line">                &#123; test: /\.css$/, loader: &#x27;style-loader!css-loader&#x27; &#125;,</span><br><span class="line">                //.js 文件使用 jsx-loader 来编译处理</span><br><span class="line">                &#123; test: /\.js$/, loader: &#x27;jsx-loader?harmony&#x27; &#125;,</span><br><span class="line">                //.scss 文件使用 style-loader、css-loader 和 sass-loader 来编译处理</span><br><span class="line">                &#123; test: /\.scss$/, loader: &#x27;style!css!sass?sourceMap&#x27;&#125;,</span><br><span class="line">                //图片文件使用 url-loader 来处理，小于8kb的直接转为base64</span><br><span class="line">                &#123; test: /\.(png|jpg)$/, loader: &#x27;url-loader?limit=8192&#x27;&#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">如上，&quot;-loader&quot;其实是可以省略不写的，多个loader之间用“!”连接起来。</span><br><span class="line"></span><br><span class="line">注意所有的加载器都需要通过 npm 来加载，并建议查阅它们对应的 readme 来看看如何使用。</span><br><span class="line"></span><br><span class="line">拿最后一个 url-loader 来说，它会将样式中引用到的图片转为模块来处理，使用该加载器需要先进行安装：</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>npm install url-loader -save-dev</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">配置信息的参数“?limit=8192”表示将所有小于8kb的图片都转为base64形式（其实应该说超过8kb的才使用url-loader 来映射到文件，否则转为data url形式）。</span><br><span class="line"></span><br><span class="line">⑷ 最后是 resolve 配置，这块很好理解，直接写注释了：</span><br><span class="line"></span><br><span class="line">    resolve: &#123;</span><br><span class="line">            //查找module的话从这里开始查找</span><br><span class="line">            root: &#x27;E:/github/flux-example/src&#x27;, //绝对路径</span><br><span class="line">            //自动扩展文件后缀名，意味着我们require模块可以省略不写后缀名</span><br><span class="line">            extensions: [&#x27;&#x27;, &#x27;.js&#x27;, &#x27;.json&#x27;, &#x27;.scss&#x27;],</span><br><span class="line">            //模块别名定义，方便后续直接引用别名，无须多写长长的地址</span><br><span class="line">            alias: &#123;</span><br><span class="line">                AppStore : &#x27;js/stores/AppStores.js&#x27;,//后续直接 require(&#x27;AppStore&#x27;) 即可</span><br><span class="line">                ActionType : &#x27;js/actions/ActionType.js&#x27;,</span><br><span class="line">                AppAction : &#x27;js/actions/AppAction.js&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">## 运行 webpack</span><br><span class="line"></span><br><span class="line">webpack 的执行也很简单，直接执行</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>$ webpack –display-error-details</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">即可，后面的参数“--display-error-details”是推荐加上的，方便出错时能查阅更详尽的信息（比如 webpack 寻找模块的过程），从而更好定位到问题。</span><br><span class="line"></span><br><span class="line">其他主要的参数有：</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>$ webpack –config XXX.js   &#x2F;&#x2F;使用另一份配置文件（比如webpack.config2.js）来打包</p><p>$ webpack –watch   &#x2F;&#x2F;监听变动并自动打包</p><p>$ webpack -p    &#x2F;&#x2F;压缩混淆脚本，这个非常非常重要！</p><p>$ webpack -d    &#x2F;&#x2F;生成map映射文件，告知哪些模块被最终打包到哪里了</p><pre><code>其中的 -p 是很重要的参数，曾经一个未压缩的 700kb 的文件，压缩后直接降到 180kb（主要是样式这块一句就独占一行脚本，导致未压缩脚本变得很大）。##### 声明：本文章整理转载于爱编程网，访问原文[一小时包教会 —— webpack 入门指南](http://www.w2bc.com/Article/50764)</code></pre>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS监听键盘事件</title>
      <link href="/2015/01/27/JS%E7%9B%91%E5%90%AC%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6/"/>
      <url>/2015/01/27/JS%E7%9B%91%E5%90%AC%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="JS监听键盘事件"><a href="#JS监听键盘事件" class="headerlink" title="JS监听键盘事件"></a>JS监听键盘事件</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> language=JavaScript charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">       <span class="built_in">document</span>.onkeydown=<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">             <span class="keyword">var</span> e = event || <span class="built_in">window</span>.event || <span class="built_in">arguments</span>.callee.caller.arguments[<span class="number">0</span>];</span><br><span class="line">             <span class="keyword">if</span>(e &amp;&amp; e.keyCode==<span class="number">27</span>)&#123; <span class="comment">// 按 Esc </span></span><br><span class="line">                 ????</span><br><span class="line">               &#125;</span><br><span class="line">             <span class="keyword">if</span>(e &amp;&amp; e.keyCode==<span class="number">113</span>)&#123; <span class="comment">// 按 F2 </span></span><br><span class="line">                  ????</span><br><span class="line">                &#125;            </span><br><span class="line">              <span class="keyword">if</span>(e &amp;&amp; e.keyCode==<span class="number">13</span>)&#123; <span class="comment">// enter 键</span></span><br><span class="line">                  ?????</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;; </span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure><p> 代码如上…</p>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
